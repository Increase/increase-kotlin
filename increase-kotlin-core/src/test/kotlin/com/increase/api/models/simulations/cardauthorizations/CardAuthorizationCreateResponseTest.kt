// File generated from our OpenAPI spec by Stainless.

package com.increase.api.models.simulations.cardauthorizations

import com.increase.api.core.JsonValue
import com.increase.api.models.declinedtransactions.DeclinedTransaction
import com.increase.api.models.pendingtransactions.PendingTransaction
import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

class CardAuthorizationCreateResponseTest {

    @Test
    fun createCardAuthorizationCreateResponse() {
      val cardAuthorizationCreateResponse = CardAuthorizationCreateResponse.builder()
          .declinedTransaction(DeclinedTransaction.builder()
              .id("id")
              .accountId("account_id")
              .amount(0L)
              .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
              .currency(DeclinedTransaction.Currency.CAD)
              .description("description")
              .routeId("route_id")
              .routeType(DeclinedTransaction.RouteType.ACCOUNT_NUMBER)
              .source(DeclinedTransaction.Source.builder()
                  .achDecline(DeclinedTransaction.Source.AchDecline.builder()
                      .id("ach_decline_72v1mcwxudctq56efipa")
                      .amount(1750L)
                      .inboundAchTransferId("inbound_ach_transfer_tdrwqr3fq9gnnq49odev")
                      .originatorCompanyDescriptiveDate(null)
                      .originatorCompanyDiscretionaryData(null)
                      .originatorCompanyId("0987654321")
                      .originatorCompanyName("BIG BANK")
                      .reason(DeclinedTransaction.Source.AchDecline.Reason.ACH_ROUTE_CANCELED)
                      .receiverIdNumber("12345678900")
                      .receiverName("IAN CREASE")
                      .traceNumber("021000038461022")
                      .type(DeclinedTransaction.Source.AchDecline.Type.ACH_DECLINE)
                      .build())
                  .cardDecline(DeclinedTransaction.Source.CardDecline.builder()
                      .id("card_decline_bx3o8zd7glq8yvtwg25v")
                      .actioner(DeclinedTransaction.Source.CardDecline.Actioner.USER)
                      .amount(-1000L)
                      .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                      .currency(DeclinedTransaction.Source.CardDecline.Currency.CAD)
                      .declinedTransactionId("declined_transaction_17jbn0yyhvkt4v4ooym8")
                      .digitalWalletTokenId(null)
                      .direction(DeclinedTransaction.Source.CardDecline.Direction.SETTLEMENT)
                      .merchantAcceptorId("5665270011000168")
                      .merchantCategoryCode("5734")
                      .merchantCity("New York")
                      .merchantCountry("US")
                      .merchantDescriptor("AMAZON.COM")
                      .merchantPostalCode("10045")
                      .merchantState(null)
                      .networkDetails(DeclinedTransaction.Source.CardDecline.NetworkDetails.builder()
                          .category(DeclinedTransaction.Source.CardDecline.NetworkDetails.Category.VISA)
                          .visa(DeclinedTransaction.Source.CardDecline.NetworkDetails.Visa.builder()
                              .electronicCommerceIndicator(DeclinedTransaction.Source.CardDecline.NetworkDetails.Visa.ElectronicCommerceIndicator.MAIL_PHONE_ORDER)
                              .pointOfServiceEntryMode(DeclinedTransaction.Source.CardDecline.NetworkDetails.Visa.PointOfServiceEntryMode.UNKNOWN)
                              .standInProcessingReason(DeclinedTransaction.Source.CardDecline.NetworkDetails.Visa.StandInProcessingReason.ISSUER_ERROR)
                              .build())
                          .build())
                      .networkIdentifiers(DeclinedTransaction.Source.CardDecline.NetworkIdentifiers.builder()
                          .retrievalReferenceNumber("785867080153")
                          .traceNumber("487941")
                          .transactionId("627199945183184")
                          .build())
                      .networkRiskScore(10L)
                      .physicalCardId(null)
                      .presentmentAmount(-1000L)
                      .presentmentCurrency("USD")
                      .processingCategory(DeclinedTransaction.Source.CardDecline.ProcessingCategory.ACCOUNT_FUNDING)
                      .realTimeDecisionId(null)
                      .realTimeDecisionReason(DeclinedTransaction.Source.CardDecline.RealTimeDecisionReason.INSUFFICIENT_FUNDS)
                      .reason(DeclinedTransaction.Source.CardDecline.Reason.ACCOUNT_CLOSED)
                      .terminalId("RCN5VNXS")
                      .verification(DeclinedTransaction.Source.CardDecline.Verification.builder()
                          .cardVerificationCode(DeclinedTransaction.Source.CardDecline.Verification.CardVerificationCode.builder()
                              .result(DeclinedTransaction.Source.CardDecline.Verification.CardVerificationCode.Result.NOT_CHECKED)
                              .build())
                          .cardholderAddress(DeclinedTransaction.Source.CardDecline.Verification.CardholderAddress.builder()
                              .actualLine1("33 Liberty Street")
                              .actualPostalCode("94131")
                              .providedLine1("33 Liberty Street")
                              .providedPostalCode("94132")
                              .result(DeclinedTransaction.Source.CardDecline.Verification.CardholderAddress.Result.NOT_CHECKED)
                              .build())
                          .build())
                      .build())
                  .category(DeclinedTransaction.Source.Category.ACH_DECLINE)
                  .checkDecline(DeclinedTransaction.Source.CheckDecline.builder()
                      .amount(-1000L)
                      .auxiliaryOnUs("99999")
                      .backImageFileId(null)
                      .checkTransferId("check_transfer_30b43acfu9vw8fyc4f5")
                      .frontImageFileId(null)
                      .inboundCheckDepositId("inbound_check_deposit_zoshvqybq0cjjm31mra")
                      .reason(DeclinedTransaction.Source.CheckDecline.Reason.ACH_ROUTE_DISABLED)
                      .build())
                  .checkDepositRejection(DeclinedTransaction.Source.CheckDepositRejection.builder()
                      .amount(1750L)
                      .checkDepositId("check_deposit_f06n9gpg7sxn8t19lfc1")
                      .currency(DeclinedTransaction.Source.CheckDepositRejection.Currency.CAD)
                      .declinedTransactionId("declined_transaction_17jbn0yyhvkt4v4ooym8")
                      .reason(DeclinedTransaction.Source.CheckDepositRejection.Reason.INCOMPLETE_IMAGE)
                      .rejectedAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                      .build())
                  .inboundRealTimePaymentsTransferDecline(DeclinedTransaction.Source.InboundRealTimePaymentsTransferDecline.builder()
                      .amount(100L)
                      .creditorName("Ian Crease")
                      .currency(DeclinedTransaction.Source.InboundRealTimePaymentsTransferDecline.Currency.CAD)
                      .debtorAccountNumber("987654321")
                      .debtorName("National Phonograph Company")
                      .debtorRoutingNumber("101050001")
                      .reason(DeclinedTransaction.Source.InboundRealTimePaymentsTransferDecline.Reason.ACCOUNT_NUMBER_CANCELED)
                      .remittanceInformation("Invoice 29582")
                      .transactionIdentification("20220501234567891T1BSLZO01745013025")
                      .transferId("inbound_real_time_payments_transfer_63hlz498vcxg644hcrzr")
                      .build())
                  .other(JsonValue.from(mapOf<String, Any>()))
                  .wireDecline(DeclinedTransaction.Source.WireDecline.builder()
                      .inboundWireTransferId("inbound_wire_transfer_f228m6bmhtcxjco9pwp0")
                      .reason(DeclinedTransaction.Source.WireDecline.Reason.ACCOUNT_NUMBER_CANCELED)
                      .build())
                  .build())
              .type(DeclinedTransaction.Type.DECLINED_TRANSACTION)
              .build())
          .pendingTransaction(PendingTransaction.builder()
              .id("pending_transaction_k1sfetcau2qbvjbzgju4")
              .accountId("account_in71c4amph0vgo2qllky")
              .amount(100L)
              .completedAt(null)
              .createdAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
              .currency(PendingTransaction.Currency.CAD)
              .description("INVOICE 2468")
              .routeId("card_oubs0hwk5rn6knuecxg2")
              .routeType(PendingTransaction.RouteType.ACCOUNT_NUMBER)
              .source(PendingTransaction.Source.builder()
                  .accountTransferInstruction(PendingTransaction.Source.AccountTransferInstruction.builder()
                      .amount(100L)
                      .currency(PendingTransaction.Source.AccountTransferInstruction.Currency.CAD)
                      .transferId("account_transfer_7k9qe1ysdgqztnt63l7n")
                      .build())
                  .achTransferInstruction(PendingTransaction.Source.AchTransferInstruction.builder()
                      .amount(100L)
                      .transferId("ach_transfer_uoxatyh3lt5evrsdvo7q")
                      .build())
                  .cardAuthorization(PendingTransaction.Source.CardAuthorization.builder()
                      .id("card_authorization_6iqxap6ivd0fo5eu3i8x")
                      .actioner(PendingTransaction.Source.CardAuthorization.Actioner.USER)
                      .amount(100L)
                      .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                      .currency(PendingTransaction.Source.CardAuthorization.Currency.CAD)
                      .digitalWalletTokenId(null)
                      .direction(PendingTransaction.Source.CardAuthorization.Direction.SETTLEMENT)
                      .expiresAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                      .merchantAcceptorId("5665270011000168")
                      .merchantCategoryCode("5734")
                      .merchantCity("New York")
                      .merchantCountry("US")
                      .merchantDescriptor("AMAZON.COM")
                      .merchantPostalCode("10045")
                      .merchantState("NY")
                      .networkDetails(PendingTransaction.Source.CardAuthorization.NetworkDetails.builder()
                          .category(PendingTransaction.Source.CardAuthorization.NetworkDetails.Category.VISA)
                          .visa(PendingTransaction.Source.CardAuthorization.NetworkDetails.Visa.builder()
                              .electronicCommerceIndicator(PendingTransaction.Source.CardAuthorization.NetworkDetails.Visa.ElectronicCommerceIndicator.MAIL_PHONE_ORDER)
                              .pointOfServiceEntryMode(PendingTransaction.Source.CardAuthorization.NetworkDetails.Visa.PointOfServiceEntryMode.UNKNOWN)
                              .standInProcessingReason(PendingTransaction.Source.CardAuthorization.NetworkDetails.Visa.StandInProcessingReason.ISSUER_ERROR)
                              .build())
                          .build())
                      .networkIdentifiers(PendingTransaction.Source.CardAuthorization.NetworkIdentifiers.builder()
                          .retrievalReferenceNumber("785867080153")
                          .traceNumber("487941")
                          .transactionId("627199945183184")
                          .build())
                      .networkRiskScore(10L)
                      .pendingTransactionId(null)
                      .physicalCardId(null)
                      .presentmentAmount(100L)
                      .presentmentCurrency("USD")
                      .processingCategory(PendingTransaction.Source.CardAuthorization.ProcessingCategory.ACCOUNT_FUNDING)
                      .realTimeDecisionId(null)
                      .terminalId("RCN5VNXS")
                      .type(PendingTransaction.Source.CardAuthorization.Type.CARD_AUTHORIZATION)
                      .verification(PendingTransaction.Source.CardAuthorization.Verification.builder()
                          .cardVerificationCode(PendingTransaction.Source.CardAuthorization.Verification.CardVerificationCode.builder()
                              .result(PendingTransaction.Source.CardAuthorization.Verification.CardVerificationCode.Result.NOT_CHECKED)
                              .build())
                          .cardholderAddress(PendingTransaction.Source.CardAuthorization.Verification.CardholderAddress.builder()
                              .actualLine1("33 Liberty Street")
                              .actualPostalCode("94131")
                              .providedLine1("33 Liberty Street")
                              .providedPostalCode("94132")
                              .result(PendingTransaction.Source.CardAuthorization.Verification.CardholderAddress.Result.NOT_CHECKED)
                              .build())
                          .build())
                      .build())
                  .category(PendingTransaction.Source.Category.ACCOUNT_TRANSFER_INSTRUCTION)
                  .checkDepositInstruction(PendingTransaction.Source.CheckDepositInstruction.builder()
                      .amount(100L)
                      .backImageFileId("file_26khfk98mzfz90a11oqx")
                      .checkDepositId("check_deposit_f06n9gpg7sxn8t19lfc1")
                      .currency(PendingTransaction.Source.CheckDepositInstruction.Currency.CAD)
                      .frontImageFileId("file_makxrc67oh9l6sg7w9yc")
                      .build())
                  .checkTransferInstruction(PendingTransaction.Source.CheckTransferInstruction.builder()
                      .amount(100L)
                      .currency(PendingTransaction.Source.CheckTransferInstruction.Currency.CAD)
                      .transferId("check_transfer_30b43acfu9vw8fyc4f5")
                      .build())
                  .inboundFundsHold(PendingTransaction.Source.InboundFundsHold.builder()
                      .id("inbound_funds_hold_9vuasmywdo7xb3zt4071")
                      .amount(100L)
                      .automaticallyReleasesAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                      .createdAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                      .currency(PendingTransaction.Source.InboundFundsHold.Currency.CAD)
                      .heldTransactionId("transaction_uyrp7fld2ium70oa7oi")
                      .pendingTransactionId("pending_transaction_k1sfetcau2qbvjbzgju4")
                      .releasedAt(null)
                      .status(PendingTransaction.Source.InboundFundsHold.Status.HELD)
                      .type(PendingTransaction.Source.InboundFundsHold.Type.INBOUND_FUNDS_HOLD)
                      .build())
                  .inboundWireTransferReversal(PendingTransaction.Source.InboundWireTransferReversal.builder()
                      .inboundWireTransferId("inbound_wire_transfer_f228m6bmhtcxjco9pwp0")
                      .build())
                  .other(JsonValue.from(mapOf<String, Any>()))
                  .realTimePaymentsTransferInstruction(PendingTransaction.Source.RealTimePaymentsTransferInstruction.builder()
                      .amount(100L)
                      .transferId("real_time_payments_transfer_iyuhl5kdn7ssmup83mvq")
                      .build())
                  .wireTransferInstruction(PendingTransaction.Source.WireTransferInstruction.builder()
                      .accountNumber("987654321")
                      .amount(100L)
                      .messageToRecipient("HELLO")
                      .routingNumber("101050001")
                      .transferId("wire_transfer_5akynk7dqsq25qwk9q2u")
                      .build())
                  .build())
              .status(PendingTransaction.Status.PENDING)
              .type(PendingTransaction.Type.PENDING_TRANSACTION)
              .build())
          .type(CardAuthorizationCreateResponse.Type.INBOUND_CARD_AUTHORIZATION_SIMULATION_RESULT)
          .build()
      assertThat(cardAuthorizationCreateResponse).isNotNull
      assertThat(cardAuthorizationCreateResponse.declinedTransaction()).isEqualTo(DeclinedTransaction.builder()
          .id("id")
          .accountId("account_id")
          .amount(0L)
          .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
          .currency(DeclinedTransaction.Currency.CAD)
          .description("description")
          .routeId("route_id")
          .routeType(DeclinedTransaction.RouteType.ACCOUNT_NUMBER)
          .source(DeclinedTransaction.Source.builder()
              .achDecline(DeclinedTransaction.Source.AchDecline.builder()
                  .id("ach_decline_72v1mcwxudctq56efipa")
                  .amount(1750L)
                  .inboundAchTransferId("inbound_ach_transfer_tdrwqr3fq9gnnq49odev")
                  .originatorCompanyDescriptiveDate(null)
                  .originatorCompanyDiscretionaryData(null)
                  .originatorCompanyId("0987654321")
                  .originatorCompanyName("BIG BANK")
                  .reason(DeclinedTransaction.Source.AchDecline.Reason.ACH_ROUTE_CANCELED)
                  .receiverIdNumber("12345678900")
                  .receiverName("IAN CREASE")
                  .traceNumber("021000038461022")
                  .type(DeclinedTransaction.Source.AchDecline.Type.ACH_DECLINE)
                  .build())
              .cardDecline(DeclinedTransaction.Source.CardDecline.builder()
                  .id("card_decline_bx3o8zd7glq8yvtwg25v")
                  .actioner(DeclinedTransaction.Source.CardDecline.Actioner.USER)
                  .amount(-1000L)
                  .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                  .currency(DeclinedTransaction.Source.CardDecline.Currency.CAD)
                  .declinedTransactionId("declined_transaction_17jbn0yyhvkt4v4ooym8")
                  .digitalWalletTokenId(null)
                  .direction(DeclinedTransaction.Source.CardDecline.Direction.SETTLEMENT)
                  .merchantAcceptorId("5665270011000168")
                  .merchantCategoryCode("5734")
                  .merchantCity("New York")
                  .merchantCountry("US")
                  .merchantDescriptor("AMAZON.COM")
                  .merchantPostalCode("10045")
                  .merchantState(null)
                  .networkDetails(DeclinedTransaction.Source.CardDecline.NetworkDetails.builder()
                      .category(DeclinedTransaction.Source.CardDecline.NetworkDetails.Category.VISA)
                      .visa(DeclinedTransaction.Source.CardDecline.NetworkDetails.Visa.builder()
                          .electronicCommerceIndicator(DeclinedTransaction.Source.CardDecline.NetworkDetails.Visa.ElectronicCommerceIndicator.MAIL_PHONE_ORDER)
                          .pointOfServiceEntryMode(DeclinedTransaction.Source.CardDecline.NetworkDetails.Visa.PointOfServiceEntryMode.UNKNOWN)
                          .standInProcessingReason(DeclinedTransaction.Source.CardDecline.NetworkDetails.Visa.StandInProcessingReason.ISSUER_ERROR)
                          .build())
                      .build())
                  .networkIdentifiers(DeclinedTransaction.Source.CardDecline.NetworkIdentifiers.builder()
                      .retrievalReferenceNumber("785867080153")
                      .traceNumber("487941")
                      .transactionId("627199945183184")
                      .build())
                  .networkRiskScore(10L)
                  .physicalCardId(null)
                  .presentmentAmount(-1000L)
                  .presentmentCurrency("USD")
                  .processingCategory(DeclinedTransaction.Source.CardDecline.ProcessingCategory.ACCOUNT_FUNDING)
                  .realTimeDecisionId(null)
                  .realTimeDecisionReason(DeclinedTransaction.Source.CardDecline.RealTimeDecisionReason.INSUFFICIENT_FUNDS)
                  .reason(DeclinedTransaction.Source.CardDecline.Reason.ACCOUNT_CLOSED)
                  .terminalId("RCN5VNXS")
                  .verification(DeclinedTransaction.Source.CardDecline.Verification.builder()
                      .cardVerificationCode(DeclinedTransaction.Source.CardDecline.Verification.CardVerificationCode.builder()
                          .result(DeclinedTransaction.Source.CardDecline.Verification.CardVerificationCode.Result.NOT_CHECKED)
                          .build())
                      .cardholderAddress(DeclinedTransaction.Source.CardDecline.Verification.CardholderAddress.builder()
                          .actualLine1("33 Liberty Street")
                          .actualPostalCode("94131")
                          .providedLine1("33 Liberty Street")
                          .providedPostalCode("94132")
                          .result(DeclinedTransaction.Source.CardDecline.Verification.CardholderAddress.Result.NOT_CHECKED)
                          .build())
                      .build())
                  .build())
              .category(DeclinedTransaction.Source.Category.ACH_DECLINE)
              .checkDecline(DeclinedTransaction.Source.CheckDecline.builder()
                  .amount(-1000L)
                  .auxiliaryOnUs("99999")
                  .backImageFileId(null)
                  .checkTransferId("check_transfer_30b43acfu9vw8fyc4f5")
                  .frontImageFileId(null)
                  .inboundCheckDepositId("inbound_check_deposit_zoshvqybq0cjjm31mra")
                  .reason(DeclinedTransaction.Source.CheckDecline.Reason.ACH_ROUTE_DISABLED)
                  .build())
              .checkDepositRejection(DeclinedTransaction.Source.CheckDepositRejection.builder()
                  .amount(1750L)
                  .checkDepositId("check_deposit_f06n9gpg7sxn8t19lfc1")
                  .currency(DeclinedTransaction.Source.CheckDepositRejection.Currency.CAD)
                  .declinedTransactionId("declined_transaction_17jbn0yyhvkt4v4ooym8")
                  .reason(DeclinedTransaction.Source.CheckDepositRejection.Reason.INCOMPLETE_IMAGE)
                  .rejectedAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                  .build())
              .inboundRealTimePaymentsTransferDecline(DeclinedTransaction.Source.InboundRealTimePaymentsTransferDecline.builder()
                  .amount(100L)
                  .creditorName("Ian Crease")
                  .currency(DeclinedTransaction.Source.InboundRealTimePaymentsTransferDecline.Currency.CAD)
                  .debtorAccountNumber("987654321")
                  .debtorName("National Phonograph Company")
                  .debtorRoutingNumber("101050001")
                  .reason(DeclinedTransaction.Source.InboundRealTimePaymentsTransferDecline.Reason.ACCOUNT_NUMBER_CANCELED)
                  .remittanceInformation("Invoice 29582")
                  .transactionIdentification("20220501234567891T1BSLZO01745013025")
                  .transferId("inbound_real_time_payments_transfer_63hlz498vcxg644hcrzr")
                  .build())
              .other(JsonValue.from(mapOf<String, Any>()))
              .wireDecline(DeclinedTransaction.Source.WireDecline.builder()
                  .inboundWireTransferId("inbound_wire_transfer_f228m6bmhtcxjco9pwp0")
                  .reason(DeclinedTransaction.Source.WireDecline.Reason.ACCOUNT_NUMBER_CANCELED)
                  .build())
              .build())
          .type(DeclinedTransaction.Type.DECLINED_TRANSACTION)
          .build())
      assertThat(cardAuthorizationCreateResponse.pendingTransaction()).isEqualTo(PendingTransaction.builder()
          .id("pending_transaction_k1sfetcau2qbvjbzgju4")
          .accountId("account_in71c4amph0vgo2qllky")
          .amount(100L)
          .completedAt(null)
          .createdAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
          .currency(PendingTransaction.Currency.CAD)
          .description("INVOICE 2468")
          .routeId("card_oubs0hwk5rn6knuecxg2")
          .routeType(PendingTransaction.RouteType.ACCOUNT_NUMBER)
          .source(PendingTransaction.Source.builder()
              .accountTransferInstruction(PendingTransaction.Source.AccountTransferInstruction.builder()
                  .amount(100L)
                  .currency(PendingTransaction.Source.AccountTransferInstruction.Currency.CAD)
                  .transferId("account_transfer_7k9qe1ysdgqztnt63l7n")
                  .build())
              .achTransferInstruction(PendingTransaction.Source.AchTransferInstruction.builder()
                  .amount(100L)
                  .transferId("ach_transfer_uoxatyh3lt5evrsdvo7q")
                  .build())
              .cardAuthorization(PendingTransaction.Source.CardAuthorization.builder()
                  .id("card_authorization_6iqxap6ivd0fo5eu3i8x")
                  .actioner(PendingTransaction.Source.CardAuthorization.Actioner.USER)
                  .amount(100L)
                  .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                  .currency(PendingTransaction.Source.CardAuthorization.Currency.CAD)
                  .digitalWalletTokenId(null)
                  .direction(PendingTransaction.Source.CardAuthorization.Direction.SETTLEMENT)
                  .expiresAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                  .merchantAcceptorId("5665270011000168")
                  .merchantCategoryCode("5734")
                  .merchantCity("New York")
                  .merchantCountry("US")
                  .merchantDescriptor("AMAZON.COM")
                  .merchantPostalCode("10045")
                  .merchantState("NY")
                  .networkDetails(PendingTransaction.Source.CardAuthorization.NetworkDetails.builder()
                      .category(PendingTransaction.Source.CardAuthorization.NetworkDetails.Category.VISA)
                      .visa(PendingTransaction.Source.CardAuthorization.NetworkDetails.Visa.builder()
                          .electronicCommerceIndicator(PendingTransaction.Source.CardAuthorization.NetworkDetails.Visa.ElectronicCommerceIndicator.MAIL_PHONE_ORDER)
                          .pointOfServiceEntryMode(PendingTransaction.Source.CardAuthorization.NetworkDetails.Visa.PointOfServiceEntryMode.UNKNOWN)
                          .standInProcessingReason(PendingTransaction.Source.CardAuthorization.NetworkDetails.Visa.StandInProcessingReason.ISSUER_ERROR)
                          .build())
                      .build())
                  .networkIdentifiers(PendingTransaction.Source.CardAuthorization.NetworkIdentifiers.builder()
                      .retrievalReferenceNumber("785867080153")
                      .traceNumber("487941")
                      .transactionId("627199945183184")
                      .build())
                  .networkRiskScore(10L)
                  .pendingTransactionId(null)
                  .physicalCardId(null)
                  .presentmentAmount(100L)
                  .presentmentCurrency("USD")
                  .processingCategory(PendingTransaction.Source.CardAuthorization.ProcessingCategory.ACCOUNT_FUNDING)
                  .realTimeDecisionId(null)
                  .terminalId("RCN5VNXS")
                  .type(PendingTransaction.Source.CardAuthorization.Type.CARD_AUTHORIZATION)
                  .verification(PendingTransaction.Source.CardAuthorization.Verification.builder()
                      .cardVerificationCode(PendingTransaction.Source.CardAuthorization.Verification.CardVerificationCode.builder()
                          .result(PendingTransaction.Source.CardAuthorization.Verification.CardVerificationCode.Result.NOT_CHECKED)
                          .build())
                      .cardholderAddress(PendingTransaction.Source.CardAuthorization.Verification.CardholderAddress.builder()
                          .actualLine1("33 Liberty Street")
                          .actualPostalCode("94131")
                          .providedLine1("33 Liberty Street")
                          .providedPostalCode("94132")
                          .result(PendingTransaction.Source.CardAuthorization.Verification.CardholderAddress.Result.NOT_CHECKED)
                          .build())
                      .build())
                  .build())
              .category(PendingTransaction.Source.Category.ACCOUNT_TRANSFER_INSTRUCTION)
              .checkDepositInstruction(PendingTransaction.Source.CheckDepositInstruction.builder()
                  .amount(100L)
                  .backImageFileId("file_26khfk98mzfz90a11oqx")
                  .checkDepositId("check_deposit_f06n9gpg7sxn8t19lfc1")
                  .currency(PendingTransaction.Source.CheckDepositInstruction.Currency.CAD)
                  .frontImageFileId("file_makxrc67oh9l6sg7w9yc")
                  .build())
              .checkTransferInstruction(PendingTransaction.Source.CheckTransferInstruction.builder()
                  .amount(100L)
                  .currency(PendingTransaction.Source.CheckTransferInstruction.Currency.CAD)
                  .transferId("check_transfer_30b43acfu9vw8fyc4f5")
                  .build())
              .inboundFundsHold(PendingTransaction.Source.InboundFundsHold.builder()
                  .id("inbound_funds_hold_9vuasmywdo7xb3zt4071")
                  .amount(100L)
                  .automaticallyReleasesAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                  .createdAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                  .currency(PendingTransaction.Source.InboundFundsHold.Currency.CAD)
                  .heldTransactionId("transaction_uyrp7fld2ium70oa7oi")
                  .pendingTransactionId("pending_transaction_k1sfetcau2qbvjbzgju4")
                  .releasedAt(null)
                  .status(PendingTransaction.Source.InboundFundsHold.Status.HELD)
                  .type(PendingTransaction.Source.InboundFundsHold.Type.INBOUND_FUNDS_HOLD)
                  .build())
              .inboundWireTransferReversal(PendingTransaction.Source.InboundWireTransferReversal.builder()
                  .inboundWireTransferId("inbound_wire_transfer_f228m6bmhtcxjco9pwp0")
                  .build())
              .other(JsonValue.from(mapOf<String, Any>()))
              .realTimePaymentsTransferInstruction(PendingTransaction.Source.RealTimePaymentsTransferInstruction.builder()
                  .amount(100L)
                  .transferId("real_time_payments_transfer_iyuhl5kdn7ssmup83mvq")
                  .build())
              .wireTransferInstruction(PendingTransaction.Source.WireTransferInstruction.builder()
                  .accountNumber("987654321")
                  .amount(100L)
                  .messageToRecipient("HELLO")
                  .routingNumber("101050001")
                  .transferId("wire_transfer_5akynk7dqsq25qwk9q2u")
                  .build())
              .build())
          .status(PendingTransaction.Status.PENDING)
          .type(PendingTransaction.Type.PENDING_TRANSACTION)
          .build())
      assertThat(cardAuthorizationCreateResponse.type()).isEqualTo(CardAuthorizationCreateResponse.Type.INBOUND_CARD_AUTHORIZATION_SIMULATION_RESULT)
    }
}
