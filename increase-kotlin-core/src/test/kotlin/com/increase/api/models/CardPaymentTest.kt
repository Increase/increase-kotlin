// File generated from our OpenAPI spec by Stainless.

package com.increase.api.models

import com.increase.api.core.JsonValue
import java.time.LocalDate
import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

class CardPaymentTest {

    @Test
    fun createCardPayment() {
        val cardPayment =
            CardPayment.builder()
                .id("card_payment_nd3k2kacrqjli8482ave")
                .accountId("account_in71c4amph0vgo2qllky")
                .cardId("card_oubs0hwk5rn6knuecxg2")
                .createdAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                .digitalWalletTokenId(null)
                .elements(
                    listOf(
                        CardPayment.Element.builder()
                            .cardAuthorization(
                                CardPayment.Element.CardAuthorization.builder()
                                    .id("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .actioner(CardPayment.Element.CardAuthorization.Actioner.USER)
                                    .amount(100L)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .currency(CardPayment.Element.CardAuthorization.Currency.CAD)
                                    .digitalWalletTokenId(null)
                                    .direction(
                                        CardPayment.Element.CardAuthorization.Direction.SETTLEMENT
                                    )
                                    .expiresAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkDetails(
                                        CardPayment.Element.CardAuthorization.NetworkDetails
                                            .builder()
                                            .category(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Category
                                                    .VISA
                                            )
                                            .visa(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .builder()
                                                    .electronicCommerceIndicator(
                                                        CardPayment.Element.CardAuthorization
                                                            .NetworkDetails
                                                            .Visa
                                                            .ElectronicCommerceIndicator
                                                            .MAIL_PHONE_ORDER
                                                    )
                                                    .pointOfServiceEntryMode(
                                                        CardPayment.Element.CardAuthorization
                                                            .NetworkDetails
                                                            .Visa
                                                            .PointOfServiceEntryMode
                                                            .UNKNOWN
                                                    )
                                                    .standInProcessingReason(
                                                        CardPayment.Element.CardAuthorization
                                                            .NetworkDetails
                                                            .Visa
                                                            .StandInProcessingReason
                                                            .ISSUER_ERROR
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .networkIdentifiers(
                                        CardPayment.Element.CardAuthorization.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .pendingTransactionId(null)
                                    .physicalCardId(null)
                                    .presentmentAmount(100L)
                                    .presentmentCurrency("USD")
                                    .processingCategory(
                                        CardPayment.Element.CardAuthorization.ProcessingCategory
                                            .ACCOUNT_FUNDING
                                    )
                                    .realTimeDecisionId(null)
                                    .terminalId("RCN5VNXS")
                                    .type(
                                        CardPayment.Element.CardAuthorization.Type
                                            .CARD_AUTHORIZATION
                                    )
                                    .verification(
                                        CardPayment.Element.CardAuthorization.Verification.builder()
                                            .cardVerificationCode(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardVerificationCode
                                                    .builder()
                                                    .result(
                                                        CardPayment.Element.CardAuthorization
                                                            .Verification
                                                            .CardVerificationCode
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .cardholderAddress(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardholderAddress
                                                    .builder()
                                                    .actualLine1("33 Liberty Street")
                                                    .actualPostalCode("94131")
                                                    .providedLine1("33 Liberty Street")
                                                    .providedPostalCode("94132")
                                                    .result(
                                                        CardPayment.Element.CardAuthorization
                                                            .Verification
                                                            .CardholderAddress
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .cardAuthorizationExpiration(
                                CardPayment.Element.CardAuthorizationExpiration.builder()
                                    .id("card_authorization_expiration_9xxbjtmixs8sfluzux2e")
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(
                                        CardPayment.Element.CardAuthorizationExpiration.Currency.CAD
                                    )
                                    .expiredAmount(20L)
                                    .network(
                                        CardPayment.Element.CardAuthorizationExpiration.Network.VISA
                                    )
                                    .type(
                                        CardPayment.Element.CardAuthorizationExpiration.Type
                                            .CARD_AUTHORIZATION_EXPIRATION
                                    )
                                    .build()
                            )
                            .cardDecline(
                                CardPayment.Element.CardDecline.builder()
                                    .id("card_decline_bx3o8zd7glq8yvtwg25v")
                                    .actioner(CardPayment.Element.CardDecline.Actioner.USER)
                                    .amount(-1000L)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .currency(CardPayment.Element.CardDecline.Currency.CAD)
                                    .declinedTransactionId(
                                        "declined_transaction_17jbn0yyhvkt4v4ooym8"
                                    )
                                    .digitalWalletTokenId(null)
                                    .direction(CardPayment.Element.CardDecline.Direction.SETTLEMENT)
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState(null)
                                    .networkDetails(
                                        CardPayment.Element.CardDecline.NetworkDetails.builder()
                                            .category(
                                                CardPayment.Element.CardDecline.NetworkDetails
                                                    .Category
                                                    .VISA
                                            )
                                            .visa(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .builder()
                                                    .electronicCommerceIndicator(
                                                        CardPayment.Element.CardDecline
                                                            .NetworkDetails
                                                            .Visa
                                                            .ElectronicCommerceIndicator
                                                            .MAIL_PHONE_ORDER
                                                    )
                                                    .pointOfServiceEntryMode(
                                                        CardPayment.Element.CardDecline
                                                            .NetworkDetails
                                                            .Visa
                                                            .PointOfServiceEntryMode
                                                            .UNKNOWN
                                                    )
                                                    .standInProcessingReason(
                                                        CardPayment.Element.CardDecline
                                                            .NetworkDetails
                                                            .Visa
                                                            .StandInProcessingReason
                                                            .ISSUER_ERROR
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .networkIdentifiers(
                                        CardPayment.Element.CardDecline.NetworkIdentifiers.builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .physicalCardId(null)
                                    .presentmentAmount(-1000L)
                                    .presentmentCurrency("USD")
                                    .processingCategory(
                                        CardPayment.Element.CardDecline.ProcessingCategory
                                            .ACCOUNT_FUNDING
                                    )
                                    .realTimeDecisionId(null)
                                    .realTimeDecisionReason(
                                        CardPayment.Element.CardDecline.RealTimeDecisionReason
                                            .INSUFFICIENT_FUNDS
                                    )
                                    .reason(CardPayment.Element.CardDecline.Reason.CARD_NOT_ACTIVE)
                                    .terminalId("RCN5VNXS")
                                    .verification(
                                        CardPayment.Element.CardDecline.Verification.builder()
                                            .cardVerificationCode(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardVerificationCode
                                                    .builder()
                                                    .result(
                                                        CardPayment.Element.CardDecline.Verification
                                                            .CardVerificationCode
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .cardholderAddress(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardholderAddress
                                                    .builder()
                                                    .actualLine1("33 Liberty Street")
                                                    .actualPostalCode("94131")
                                                    .providedLine1("33 Liberty Street")
                                                    .providedPostalCode("94132")
                                                    .result(
                                                        CardPayment.Element.CardDecline.Verification
                                                            .CardholderAddress
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .cardFuelConfirmation(
                                CardPayment.Element.CardFuelConfirmation.builder()
                                    .id("card_fuel_confirmation_wuy91qate4judq2la80a")
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(CardPayment.Element.CardFuelConfirmation.Currency.CAD)
                                    .network(CardPayment.Element.CardFuelConfirmation.Network.VISA)
                                    .networkIdentifiers(
                                        CardPayment.Element.CardFuelConfirmation.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .pendingTransactionId(
                                        "pending_transaction_k1sfetcau2qbvjbzgju4"
                                    )
                                    .type(
                                        CardPayment.Element.CardFuelConfirmation.Type
                                            .CARD_FUEL_CONFIRMATION
                                    )
                                    .updatedAuthorizationAmount(120L)
                                    .build()
                            )
                            .cardIncrement(
                                CardPayment.Element.CardIncrement.builder()
                                    .id("card_increment_6ztayc58j1od0rpebp3e")
                                    .actioner(CardPayment.Element.CardIncrement.Actioner.USER)
                                    .amount(20L)
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(CardPayment.Element.CardIncrement.Currency.CAD)
                                    .network(CardPayment.Element.CardIncrement.Network.VISA)
                                    .networkIdentifiers(
                                        CardPayment.Element.CardIncrement.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .pendingTransactionId(
                                        "pending_transaction_k1sfetcau2qbvjbzgju4"
                                    )
                                    .realTimeDecisionId(null)
                                    .type(CardPayment.Element.CardIncrement.Type.CARD_INCREMENT)
                                    .updatedAuthorizationAmount(120L)
                                    .build()
                            )
                            .cardRefund(
                                CardPayment.Element.CardRefund.builder()
                                    .id("card_refund_imgc2xwplh6t4r3gn16e")
                                    .amount(100L)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .cashback(
                                        CardPayment.Element.CardRefund.Cashback.builder()
                                            .amount("-16699")
                                            .currency(
                                                CardPayment.Element.CardRefund.Cashback.Currency.CAD
                                            )
                                            .build()
                                    )
                                    .currency(CardPayment.Element.CardRefund.Currency.CAD)
                                    .interchange(
                                        CardPayment.Element.CardRefund.Interchange.builder()
                                            .amount("0.137465")
                                            .code("271")
                                            .currency(
                                                CardPayment.Element.CardRefund.Interchange.Currency
                                                    .CAD
                                            )
                                            .build()
                                    )
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantName("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkIdentifiers(
                                        CardPayment.Element.CardRefund.NetworkIdentifiers.builder()
                                            .acquirerBusinessId("69650702")
                                            .acquirerReferenceNumber("83163715445437604865089")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .presentmentAmount(100L)
                                    .presentmentCurrency("USD")
                                    .purchaseDetails(
                                        CardPayment.Element.CardRefund.PurchaseDetails.builder()
                                            .carRental(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .builder()
                                                    .carClassCode("car_class_code")
                                                    .checkoutDate(LocalDate.parse("2019-12-27"))
                                                    .dailyRentalRateAmount(0L)
                                                    .dailyRentalRateCurrency(
                                                        "daily_rental_rate_currency"
                                                    )
                                                    .daysRented(0L)
                                                    .extraCharges(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .fuelChargesAmount(0L)
                                                    .fuelChargesCurrency("fuel_charges_currency")
                                                    .insuranceChargesAmount(0L)
                                                    .insuranceChargesCurrency(
                                                        "insurance_charges_currency"
                                                    )
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .oneWayDropOffChargesAmount(0L)
                                                    .oneWayDropOffChargesCurrency(
                                                        "one_way_drop_off_charges_currency"
                                                    )
                                                    .renterName("renter_name")
                                                    .weeklyRentalRateAmount(0L)
                                                    .weeklyRentalRateCurrency(
                                                        "weekly_rental_rate_currency"
                                                    )
                                                    .build()
                                            )
                                            .customerReferenceIdentifier("51201")
                                            .localTaxAmount(null)
                                            .localTaxCurrency("usd")
                                            .lodging(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .builder()
                                                    .checkInDate(LocalDate.parse("2023-07-20"))
                                                    .dailyRoomRateAmount(1000L)
                                                    .dailyRoomRateCurrency("usd")
                                                    .extraCharges(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .folioCashAdvancesAmount(0L)
                                                    .folioCashAdvancesCurrency("usd")
                                                    .foodBeverageChargesAmount(0L)
                                                    .foodBeverageChargesCurrency("usd")
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .prepaidExpensesAmount(0L)
                                                    .prepaidExpensesCurrency("usd")
                                                    .roomNights(1L)
                                                    .totalRoomTaxAmount(100L)
                                                    .totalRoomTaxCurrency("usd")
                                                    .totalTaxAmount(100L)
                                                    .totalTaxCurrency("usd")
                                                    .build()
                                            )
                                            .nationalTaxAmount(null)
                                            .nationalTaxCurrency("usd")
                                            .purchaseIdentifier("10203")
                                            .purchaseIdentifierFormat(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .PurchaseIdentifierFormat
                                                    .FREE_TEXT
                                            )
                                            .travel(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .builder()
                                                    .ancillary(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .builder()
                                                            .connectedTicketDocumentNumber(
                                                                "connected_ticket_document_number"
                                                            )
                                                            .creditReasonIndicator(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .CreditReasonIndicator
                                                                    .NO_CREDIT
                                                            )
                                                            .passengerNameOrDescription(
                                                                "passenger_name_or_description"
                                                            )
                                                            .addService(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .builder()
                                                                    .category(
                                                                        CardPayment.Element
                                                                            .CardRefund
                                                                            .PurchaseDetails
                                                                            .Travel
                                                                            .Ancillary
                                                                            .Service
                                                                            .Category
                                                                            .NONE
                                                                    )
                                                                    .subCategory("sub_category")
                                                                    .build()
                                                            )
                                                            .ticketDocumentNumber(
                                                                "ticket_document_number"
                                                            )
                                                            .build()
                                                    )
                                                    .computerizedReservationSystem(
                                                        "computerized_reservation_system"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .departureDate(LocalDate.parse("2019-12-27"))
                                                    .originationCityAirportCode(
                                                        "origination_city_airport_code"
                                                    )
                                                    .passengerName("passenger_name")
                                                    .restrictedTicketIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .RestrictedTicketIndicator
                                                            .NO_RESTRICTIONS
                                                    )
                                                    .ticketChangeIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TicketChangeIndicator
                                                            .NONE
                                                    )
                                                    .ticketNumber("ticket_number")
                                                    .travelAgencyCode("travel_agency_code")
                                                    .travelAgencyName("travel_agency_name")
                                                    .addTripLeg(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .builder()
                                                            .carrierCode("carrier_code")
                                                            .destinationCityAirportCode(
                                                                "destination_city_airport_code"
                                                            )
                                                            .fareBasisCode("fare_basis_code")
                                                            .flightNumber("flight_number")
                                                            .serviceClass("service_class")
                                                            .stopOverCode(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .TripLeg
                                                                    .StopOverCode
                                                                    .NONE
                                                            )
                                                            .build()
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .transactionId("transaction_uyrp7fld2ium70oa7oi")
                                    .type(CardPayment.Element.CardRefund.Type.CARD_REFUND)
                                    .build()
                            )
                            .cardReversal(
                                CardPayment.Element.CardReversal.builder()
                                    .id("card_reversal_8vr9qy60cgf5d0slpb68")
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(CardPayment.Element.CardReversal.Currency.CAD)
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .network(CardPayment.Element.CardReversal.Network.VISA)
                                    .networkIdentifiers(
                                        CardPayment.Element.CardReversal.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .pendingTransactionId(
                                        "pending_transaction_k1sfetcau2qbvjbzgju4"
                                    )
                                    .reversalAmount(20L)
                                    .reversalReason(
                                        CardPayment.Element.CardReversal.ReversalReason
                                            .REVERSED_BY_CUSTOMER
                                    )
                                    .terminalId("RCN5VNXS")
                                    .type(CardPayment.Element.CardReversal.Type.CARD_REVERSAL)
                                    .updatedAuthorizationAmount(80L)
                                    .build()
                            )
                            .cardSettlement(
                                CardPayment.Element.CardSettlement.builder()
                                    .id("card_settlement_khv5kfeu0vndj291omg6")
                                    .amount(100L)
                                    .cardAuthorization(null)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .cashback(
                                        CardPayment.Element.CardSettlement.Cashback.builder()
                                            .amount("-16699")
                                            .currency(
                                                CardPayment.Element.CardSettlement.Cashback.Currency
                                                    .CAD
                                            )
                                            .build()
                                    )
                                    .currency(CardPayment.Element.CardSettlement.Currency.CAD)
                                    .interchange(
                                        CardPayment.Element.CardSettlement.Interchange.builder()
                                            .amount("0.137465")
                                            .code("271")
                                            .currency(
                                                CardPayment.Element.CardSettlement.Interchange
                                                    .Currency
                                                    .CAD
                                            )
                                            .build()
                                    )
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantName("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkIdentifiers(
                                        CardPayment.Element.CardSettlement.NetworkIdentifiers
                                            .builder()
                                            .acquirerBusinessId("69650702")
                                            .acquirerReferenceNumber("83163715445437604865089")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .pendingTransactionId(null)
                                    .presentmentAmount(100L)
                                    .presentmentCurrency("USD")
                                    .purchaseDetails(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.builder()
                                            .carRental(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .builder()
                                                    .carClassCode("car_class_code")
                                                    .checkoutDate(LocalDate.parse("2019-12-27"))
                                                    .dailyRentalRateAmount(0L)
                                                    .dailyRentalRateCurrency(
                                                        "daily_rental_rate_currency"
                                                    )
                                                    .daysRented(0L)
                                                    .extraCharges(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .fuelChargesAmount(0L)
                                                    .fuelChargesCurrency("fuel_charges_currency")
                                                    .insuranceChargesAmount(0L)
                                                    .insuranceChargesCurrency(
                                                        "insurance_charges_currency"
                                                    )
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .oneWayDropOffChargesAmount(0L)
                                                    .oneWayDropOffChargesCurrency(
                                                        "one_way_drop_off_charges_currency"
                                                    )
                                                    .renterName("renter_name")
                                                    .weeklyRentalRateAmount(0L)
                                                    .weeklyRentalRateCurrency(
                                                        "weekly_rental_rate_currency"
                                                    )
                                                    .build()
                                            )
                                            .customerReferenceIdentifier("51201")
                                            .localTaxAmount(null)
                                            .localTaxCurrency("usd")
                                            .lodging(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .builder()
                                                    .checkInDate(LocalDate.parse("2023-07-20"))
                                                    .dailyRoomRateAmount(1000L)
                                                    .dailyRoomRateCurrency("usd")
                                                    .extraCharges(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .folioCashAdvancesAmount(0L)
                                                    .folioCashAdvancesCurrency("usd")
                                                    .foodBeverageChargesAmount(0L)
                                                    .foodBeverageChargesCurrency("usd")
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .prepaidExpensesAmount(0L)
                                                    .prepaidExpensesCurrency("usd")
                                                    .roomNights(1L)
                                                    .totalRoomTaxAmount(100L)
                                                    .totalRoomTaxCurrency("usd")
                                                    .totalTaxAmount(100L)
                                                    .totalTaxCurrency("usd")
                                                    .build()
                                            )
                                            .nationalTaxAmount(null)
                                            .nationalTaxCurrency("usd")
                                            .purchaseIdentifier("10203")
                                            .purchaseIdentifierFormat(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .PurchaseIdentifierFormat
                                                    .FREE_TEXT
                                            )
                                            .travel(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .builder()
                                                    .ancillary(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .builder()
                                                            .connectedTicketDocumentNumber(
                                                                "connected_ticket_document_number"
                                                            )
                                                            .creditReasonIndicator(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .CreditReasonIndicator
                                                                    .NO_CREDIT
                                                            )
                                                            .passengerNameOrDescription(
                                                                "passenger_name_or_description"
                                                            )
                                                            .addService(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .builder()
                                                                    .category(
                                                                        CardPayment.Element
                                                                            .CardSettlement
                                                                            .PurchaseDetails
                                                                            .Travel
                                                                            .Ancillary
                                                                            .Service
                                                                            .Category
                                                                            .NONE
                                                                    )
                                                                    .subCategory("sub_category")
                                                                    .build()
                                                            )
                                                            .ticketDocumentNumber(
                                                                "ticket_document_number"
                                                            )
                                                            .build()
                                                    )
                                                    .computerizedReservationSystem(
                                                        "computerized_reservation_system"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .departureDate(LocalDate.parse("2019-12-27"))
                                                    .originationCityAirportCode(
                                                        "origination_city_airport_code"
                                                    )
                                                    .passengerName("passenger_name")
                                                    .restrictedTicketIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .RestrictedTicketIndicator
                                                            .NO_RESTRICTIONS
                                                    )
                                                    .ticketChangeIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TicketChangeIndicator
                                                            .NONE
                                                    )
                                                    .ticketNumber("ticket_number")
                                                    .travelAgencyCode("travel_agency_code")
                                                    .travelAgencyName("travel_agency_name")
                                                    .addTripLeg(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .builder()
                                                            .carrierCode("carrier_code")
                                                            .destinationCityAirportCode(
                                                                "destination_city_airport_code"
                                                            )
                                                            .fareBasisCode("fare_basis_code")
                                                            .flightNumber("flight_number")
                                                            .serviceClass("service_class")
                                                            .stopOverCode(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .TripLeg
                                                                    .StopOverCode
                                                                    .NONE
                                                            )
                                                            .build()
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .transactionId("transaction_uyrp7fld2ium70oa7oi")
                                    .type(CardPayment.Element.CardSettlement.Type.CARD_SETTLEMENT)
                                    .build()
                            )
                            .cardValidation(
                                CardPayment.Element.CardValidation.builder()
                                    .id("card_validation_yi4e59jiaz6n9hx8tczv")
                                    .actioner(CardPayment.Element.CardValidation.Actioner.USER)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .currency(CardPayment.Element.CardValidation.Currency.CAD)
                                    .digitalWalletTokenId(null)
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkDetails(
                                        CardPayment.Element.CardValidation.NetworkDetails.builder()
                                            .category(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Category
                                                    .VISA
                                            )
                                            .visa(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .builder()
                                                    .electronicCommerceIndicator(
                                                        CardPayment.Element.CardValidation
                                                            .NetworkDetails
                                                            .Visa
                                                            .ElectronicCommerceIndicator
                                                            .MAIL_PHONE_ORDER
                                                    )
                                                    .pointOfServiceEntryMode(
                                                        CardPayment.Element.CardValidation
                                                            .NetworkDetails
                                                            .Visa
                                                            .PointOfServiceEntryMode
                                                            .UNKNOWN
                                                    )
                                                    .standInProcessingReason(
                                                        CardPayment.Element.CardValidation
                                                            .NetworkDetails
                                                            .Visa
                                                            .StandInProcessingReason
                                                            .ISSUER_ERROR
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .networkIdentifiers(
                                        CardPayment.Element.CardValidation.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .physicalCardId(null)
                                    .realTimeDecisionId(null)
                                    .terminalId("RCN5VNXS")
                                    .type(CardPayment.Element.CardValidation.Type.CARD_VALIDATION)
                                    .verification(
                                        CardPayment.Element.CardValidation.Verification.builder()
                                            .cardVerificationCode(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardVerificationCode
                                                    .builder()
                                                    .result(
                                                        CardPayment.Element.CardValidation
                                                            .Verification
                                                            .CardVerificationCode
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .cardholderAddress(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardholderAddress
                                                    .builder()
                                                    .actualLine1("33 Liberty Street")
                                                    .actualPostalCode("94131")
                                                    .providedLine1("33 Liberty Street")
                                                    .providedPostalCode("94132")
                                                    .result(
                                                        CardPayment.Element.CardValidation
                                                            .Verification
                                                            .CardholderAddress
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .category(CardPayment.Element.Category.CARD_AUTHORIZATION)
                            .createdAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                            .other(JsonValue.from(mapOf<String, Any>()))
                            .build(),
                        CardPayment.Element.builder()
                            .cardAuthorization(
                                CardPayment.Element.CardAuthorization.builder()
                                    .id("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .actioner(CardPayment.Element.CardAuthorization.Actioner.USER)
                                    .amount(100L)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .currency(CardPayment.Element.CardAuthorization.Currency.CAD)
                                    .digitalWalletTokenId(null)
                                    .direction(
                                        CardPayment.Element.CardAuthorization.Direction.SETTLEMENT
                                    )
                                    .expiresAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkDetails(
                                        CardPayment.Element.CardAuthorization.NetworkDetails
                                            .builder()
                                            .category(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Category
                                                    .VISA
                                            )
                                            .visa(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .builder()
                                                    .electronicCommerceIndicator(
                                                        CardPayment.Element.CardAuthorization
                                                            .NetworkDetails
                                                            .Visa
                                                            .ElectronicCommerceIndicator
                                                            .MAIL_PHONE_ORDER
                                                    )
                                                    .pointOfServiceEntryMode(
                                                        CardPayment.Element.CardAuthorization
                                                            .NetworkDetails
                                                            .Visa
                                                            .PointOfServiceEntryMode
                                                            .UNKNOWN
                                                    )
                                                    .standInProcessingReason(
                                                        CardPayment.Element.CardAuthorization
                                                            .NetworkDetails
                                                            .Visa
                                                            .StandInProcessingReason
                                                            .ISSUER_ERROR
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .networkIdentifiers(
                                        CardPayment.Element.CardAuthorization.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .pendingTransactionId(null)
                                    .physicalCardId(null)
                                    .presentmentAmount(100L)
                                    .presentmentCurrency("USD")
                                    .processingCategory(
                                        CardPayment.Element.CardAuthorization.ProcessingCategory
                                            .ACCOUNT_FUNDING
                                    )
                                    .realTimeDecisionId(null)
                                    .terminalId("RCN5VNXS")
                                    .type(
                                        CardPayment.Element.CardAuthorization.Type
                                            .CARD_AUTHORIZATION
                                    )
                                    .verification(
                                        CardPayment.Element.CardAuthorization.Verification.builder()
                                            .cardVerificationCode(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardVerificationCode
                                                    .builder()
                                                    .result(
                                                        CardPayment.Element.CardAuthorization
                                                            .Verification
                                                            .CardVerificationCode
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .cardholderAddress(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardholderAddress
                                                    .builder()
                                                    .actualLine1("33 Liberty Street")
                                                    .actualPostalCode("94131")
                                                    .providedLine1("33 Liberty Street")
                                                    .providedPostalCode("94132")
                                                    .result(
                                                        CardPayment.Element.CardAuthorization
                                                            .Verification
                                                            .CardholderAddress
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .cardAuthorizationExpiration(
                                CardPayment.Element.CardAuthorizationExpiration.builder()
                                    .id("card_authorization_expiration_9xxbjtmixs8sfluzux2e")
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(
                                        CardPayment.Element.CardAuthorizationExpiration.Currency.CAD
                                    )
                                    .expiredAmount(20L)
                                    .network(
                                        CardPayment.Element.CardAuthorizationExpiration.Network.VISA
                                    )
                                    .type(
                                        CardPayment.Element.CardAuthorizationExpiration.Type
                                            .CARD_AUTHORIZATION_EXPIRATION
                                    )
                                    .build()
                            )
                            .cardDecline(
                                CardPayment.Element.CardDecline.builder()
                                    .id("card_decline_bx3o8zd7glq8yvtwg25v")
                                    .actioner(CardPayment.Element.CardDecline.Actioner.USER)
                                    .amount(-1000L)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .currency(CardPayment.Element.CardDecline.Currency.CAD)
                                    .declinedTransactionId(
                                        "declined_transaction_17jbn0yyhvkt4v4ooym8"
                                    )
                                    .digitalWalletTokenId(null)
                                    .direction(CardPayment.Element.CardDecline.Direction.SETTLEMENT)
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState(null)
                                    .networkDetails(
                                        CardPayment.Element.CardDecline.NetworkDetails.builder()
                                            .category(
                                                CardPayment.Element.CardDecline.NetworkDetails
                                                    .Category
                                                    .VISA
                                            )
                                            .visa(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .builder()
                                                    .electronicCommerceIndicator(
                                                        CardPayment.Element.CardDecline
                                                            .NetworkDetails
                                                            .Visa
                                                            .ElectronicCommerceIndicator
                                                            .MAIL_PHONE_ORDER
                                                    )
                                                    .pointOfServiceEntryMode(
                                                        CardPayment.Element.CardDecline
                                                            .NetworkDetails
                                                            .Visa
                                                            .PointOfServiceEntryMode
                                                            .UNKNOWN
                                                    )
                                                    .standInProcessingReason(
                                                        CardPayment.Element.CardDecline
                                                            .NetworkDetails
                                                            .Visa
                                                            .StandInProcessingReason
                                                            .ISSUER_ERROR
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .networkIdentifiers(
                                        CardPayment.Element.CardDecline.NetworkIdentifiers.builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .physicalCardId(null)
                                    .presentmentAmount(-1000L)
                                    .presentmentCurrency("USD")
                                    .processingCategory(
                                        CardPayment.Element.CardDecline.ProcessingCategory
                                            .ACCOUNT_FUNDING
                                    )
                                    .realTimeDecisionId(null)
                                    .realTimeDecisionReason(
                                        CardPayment.Element.CardDecline.RealTimeDecisionReason
                                            .INSUFFICIENT_FUNDS
                                    )
                                    .reason(CardPayment.Element.CardDecline.Reason.CARD_NOT_ACTIVE)
                                    .terminalId("RCN5VNXS")
                                    .verification(
                                        CardPayment.Element.CardDecline.Verification.builder()
                                            .cardVerificationCode(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardVerificationCode
                                                    .builder()
                                                    .result(
                                                        CardPayment.Element.CardDecline.Verification
                                                            .CardVerificationCode
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .cardholderAddress(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardholderAddress
                                                    .builder()
                                                    .actualLine1("33 Liberty Street")
                                                    .actualPostalCode("94131")
                                                    .providedLine1("33 Liberty Street")
                                                    .providedPostalCode("94132")
                                                    .result(
                                                        CardPayment.Element.CardDecline.Verification
                                                            .CardholderAddress
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .cardFuelConfirmation(
                                CardPayment.Element.CardFuelConfirmation.builder()
                                    .id("card_fuel_confirmation_wuy91qate4judq2la80a")
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(CardPayment.Element.CardFuelConfirmation.Currency.CAD)
                                    .network(CardPayment.Element.CardFuelConfirmation.Network.VISA)
                                    .networkIdentifiers(
                                        CardPayment.Element.CardFuelConfirmation.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .pendingTransactionId(
                                        "pending_transaction_k1sfetcau2qbvjbzgju4"
                                    )
                                    .type(
                                        CardPayment.Element.CardFuelConfirmation.Type
                                            .CARD_FUEL_CONFIRMATION
                                    )
                                    .updatedAuthorizationAmount(120L)
                                    .build()
                            )
                            .cardIncrement(
                                CardPayment.Element.CardIncrement.builder()
                                    .id("card_increment_6ztayc58j1od0rpebp3e")
                                    .actioner(CardPayment.Element.CardIncrement.Actioner.USER)
                                    .amount(20L)
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(CardPayment.Element.CardIncrement.Currency.CAD)
                                    .network(CardPayment.Element.CardIncrement.Network.VISA)
                                    .networkIdentifiers(
                                        CardPayment.Element.CardIncrement.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .pendingTransactionId(
                                        "pending_transaction_k1sfetcau2qbvjbzgju4"
                                    )
                                    .realTimeDecisionId(null)
                                    .type(CardPayment.Element.CardIncrement.Type.CARD_INCREMENT)
                                    .updatedAuthorizationAmount(120L)
                                    .build()
                            )
                            .cardRefund(
                                CardPayment.Element.CardRefund.builder()
                                    .id("card_refund_imgc2xwplh6t4r3gn16e")
                                    .amount(100L)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .cashback(
                                        CardPayment.Element.CardRefund.Cashback.builder()
                                            .amount("-16699")
                                            .currency(
                                                CardPayment.Element.CardRefund.Cashback.Currency.CAD
                                            )
                                            .build()
                                    )
                                    .currency(CardPayment.Element.CardRefund.Currency.CAD)
                                    .interchange(
                                        CardPayment.Element.CardRefund.Interchange.builder()
                                            .amount("0.137465")
                                            .code("271")
                                            .currency(
                                                CardPayment.Element.CardRefund.Interchange.Currency
                                                    .CAD
                                            )
                                            .build()
                                    )
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantName("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkIdentifiers(
                                        CardPayment.Element.CardRefund.NetworkIdentifiers.builder()
                                            .acquirerBusinessId("69650702")
                                            .acquirerReferenceNumber("83163715445437604865089")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .presentmentAmount(100L)
                                    .presentmentCurrency("USD")
                                    .purchaseDetails(
                                        CardPayment.Element.CardRefund.PurchaseDetails.builder()
                                            .carRental(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .builder()
                                                    .carClassCode("car_class_code")
                                                    .checkoutDate(LocalDate.parse("2019-12-27"))
                                                    .dailyRentalRateAmount(0L)
                                                    .dailyRentalRateCurrency(
                                                        "daily_rental_rate_currency"
                                                    )
                                                    .daysRented(0L)
                                                    .extraCharges(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .fuelChargesAmount(0L)
                                                    .fuelChargesCurrency("fuel_charges_currency")
                                                    .insuranceChargesAmount(0L)
                                                    .insuranceChargesCurrency(
                                                        "insurance_charges_currency"
                                                    )
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .oneWayDropOffChargesAmount(0L)
                                                    .oneWayDropOffChargesCurrency(
                                                        "one_way_drop_off_charges_currency"
                                                    )
                                                    .renterName("renter_name")
                                                    .weeklyRentalRateAmount(0L)
                                                    .weeklyRentalRateCurrency(
                                                        "weekly_rental_rate_currency"
                                                    )
                                                    .build()
                                            )
                                            .customerReferenceIdentifier("51201")
                                            .localTaxAmount(null)
                                            .localTaxCurrency("usd")
                                            .lodging(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .builder()
                                                    .checkInDate(LocalDate.parse("2023-07-20"))
                                                    .dailyRoomRateAmount(1000L)
                                                    .dailyRoomRateCurrency("usd")
                                                    .extraCharges(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .folioCashAdvancesAmount(0L)
                                                    .folioCashAdvancesCurrency("usd")
                                                    .foodBeverageChargesAmount(0L)
                                                    .foodBeverageChargesCurrency("usd")
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .prepaidExpensesAmount(0L)
                                                    .prepaidExpensesCurrency("usd")
                                                    .roomNights(1L)
                                                    .totalRoomTaxAmount(100L)
                                                    .totalRoomTaxCurrency("usd")
                                                    .totalTaxAmount(100L)
                                                    .totalTaxCurrency("usd")
                                                    .build()
                                            )
                                            .nationalTaxAmount(null)
                                            .nationalTaxCurrency("usd")
                                            .purchaseIdentifier("10203")
                                            .purchaseIdentifierFormat(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .PurchaseIdentifierFormat
                                                    .FREE_TEXT
                                            )
                                            .travel(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .builder()
                                                    .ancillary(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .builder()
                                                            .connectedTicketDocumentNumber(
                                                                "connected_ticket_document_number"
                                                            )
                                                            .creditReasonIndicator(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .CreditReasonIndicator
                                                                    .NO_CREDIT
                                                            )
                                                            .passengerNameOrDescription(
                                                                "passenger_name_or_description"
                                                            )
                                                            .addService(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .builder()
                                                                    .category(
                                                                        CardPayment.Element
                                                                            .CardRefund
                                                                            .PurchaseDetails
                                                                            .Travel
                                                                            .Ancillary
                                                                            .Service
                                                                            .Category
                                                                            .NONE
                                                                    )
                                                                    .subCategory("sub_category")
                                                                    .build()
                                                            )
                                                            .ticketDocumentNumber(
                                                                "ticket_document_number"
                                                            )
                                                            .build()
                                                    )
                                                    .computerizedReservationSystem(
                                                        "computerized_reservation_system"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .departureDate(LocalDate.parse("2019-12-27"))
                                                    .originationCityAirportCode(
                                                        "origination_city_airport_code"
                                                    )
                                                    .passengerName("passenger_name")
                                                    .restrictedTicketIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .RestrictedTicketIndicator
                                                            .NO_RESTRICTIONS
                                                    )
                                                    .ticketChangeIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TicketChangeIndicator
                                                            .NONE
                                                    )
                                                    .ticketNumber("ticket_number")
                                                    .travelAgencyCode("travel_agency_code")
                                                    .travelAgencyName("travel_agency_name")
                                                    .addTripLeg(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .builder()
                                                            .carrierCode("carrier_code")
                                                            .destinationCityAirportCode(
                                                                "destination_city_airport_code"
                                                            )
                                                            .fareBasisCode("fare_basis_code")
                                                            .flightNumber("flight_number")
                                                            .serviceClass("service_class")
                                                            .stopOverCode(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .TripLeg
                                                                    .StopOverCode
                                                                    .NONE
                                                            )
                                                            .build()
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .transactionId("transaction_uyrp7fld2ium70oa7oi")
                                    .type(CardPayment.Element.CardRefund.Type.CARD_REFUND)
                                    .build()
                            )
                            .cardReversal(
                                CardPayment.Element.CardReversal.builder()
                                    .id("card_reversal_8vr9qy60cgf5d0slpb68")
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(CardPayment.Element.CardReversal.Currency.CAD)
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .network(CardPayment.Element.CardReversal.Network.VISA)
                                    .networkIdentifiers(
                                        CardPayment.Element.CardReversal.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .pendingTransactionId(
                                        "pending_transaction_k1sfetcau2qbvjbzgju4"
                                    )
                                    .reversalAmount(20L)
                                    .reversalReason(
                                        CardPayment.Element.CardReversal.ReversalReason
                                            .REVERSED_BY_CUSTOMER
                                    )
                                    .terminalId("RCN5VNXS")
                                    .type(CardPayment.Element.CardReversal.Type.CARD_REVERSAL)
                                    .updatedAuthorizationAmount(80L)
                                    .build()
                            )
                            .cardSettlement(
                                CardPayment.Element.CardSettlement.builder()
                                    .id("card_settlement_khv5kfeu0vndj291omg6")
                                    .amount(100L)
                                    .cardAuthorization(null)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .cashback(
                                        CardPayment.Element.CardSettlement.Cashback.builder()
                                            .amount("-16699")
                                            .currency(
                                                CardPayment.Element.CardSettlement.Cashback.Currency
                                                    .CAD
                                            )
                                            .build()
                                    )
                                    .currency(CardPayment.Element.CardSettlement.Currency.CAD)
                                    .interchange(
                                        CardPayment.Element.CardSettlement.Interchange.builder()
                                            .amount("0.137465")
                                            .code("271")
                                            .currency(
                                                CardPayment.Element.CardSettlement.Interchange
                                                    .Currency
                                                    .CAD
                                            )
                                            .build()
                                    )
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantName("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkIdentifiers(
                                        CardPayment.Element.CardSettlement.NetworkIdentifiers
                                            .builder()
                                            .acquirerBusinessId("69650702")
                                            .acquirerReferenceNumber("83163715445437604865089")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .pendingTransactionId(null)
                                    .presentmentAmount(100L)
                                    .presentmentCurrency("USD")
                                    .purchaseDetails(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.builder()
                                            .carRental(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .builder()
                                                    .carClassCode("car_class_code")
                                                    .checkoutDate(LocalDate.parse("2019-12-27"))
                                                    .dailyRentalRateAmount(0L)
                                                    .dailyRentalRateCurrency(
                                                        "daily_rental_rate_currency"
                                                    )
                                                    .daysRented(0L)
                                                    .extraCharges(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .fuelChargesAmount(0L)
                                                    .fuelChargesCurrency("fuel_charges_currency")
                                                    .insuranceChargesAmount(0L)
                                                    .insuranceChargesCurrency(
                                                        "insurance_charges_currency"
                                                    )
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .oneWayDropOffChargesAmount(0L)
                                                    .oneWayDropOffChargesCurrency(
                                                        "one_way_drop_off_charges_currency"
                                                    )
                                                    .renterName("renter_name")
                                                    .weeklyRentalRateAmount(0L)
                                                    .weeklyRentalRateCurrency(
                                                        "weekly_rental_rate_currency"
                                                    )
                                                    .build()
                                            )
                                            .customerReferenceIdentifier("51201")
                                            .localTaxAmount(null)
                                            .localTaxCurrency("usd")
                                            .lodging(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .builder()
                                                    .checkInDate(LocalDate.parse("2023-07-20"))
                                                    .dailyRoomRateAmount(1000L)
                                                    .dailyRoomRateCurrency("usd")
                                                    .extraCharges(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .folioCashAdvancesAmount(0L)
                                                    .folioCashAdvancesCurrency("usd")
                                                    .foodBeverageChargesAmount(0L)
                                                    .foodBeverageChargesCurrency("usd")
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .prepaidExpensesAmount(0L)
                                                    .prepaidExpensesCurrency("usd")
                                                    .roomNights(1L)
                                                    .totalRoomTaxAmount(100L)
                                                    .totalRoomTaxCurrency("usd")
                                                    .totalTaxAmount(100L)
                                                    .totalTaxCurrency("usd")
                                                    .build()
                                            )
                                            .nationalTaxAmount(null)
                                            .nationalTaxCurrency("usd")
                                            .purchaseIdentifier("10203")
                                            .purchaseIdentifierFormat(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .PurchaseIdentifierFormat
                                                    .FREE_TEXT
                                            )
                                            .travel(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .builder()
                                                    .ancillary(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .builder()
                                                            .connectedTicketDocumentNumber(
                                                                "connected_ticket_document_number"
                                                            )
                                                            .creditReasonIndicator(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .CreditReasonIndicator
                                                                    .NO_CREDIT
                                                            )
                                                            .passengerNameOrDescription(
                                                                "passenger_name_or_description"
                                                            )
                                                            .addService(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .builder()
                                                                    .category(
                                                                        CardPayment.Element
                                                                            .CardSettlement
                                                                            .PurchaseDetails
                                                                            .Travel
                                                                            .Ancillary
                                                                            .Service
                                                                            .Category
                                                                            .NONE
                                                                    )
                                                                    .subCategory("sub_category")
                                                                    .build()
                                                            )
                                                            .ticketDocumentNumber(
                                                                "ticket_document_number"
                                                            )
                                                            .build()
                                                    )
                                                    .computerizedReservationSystem(
                                                        "computerized_reservation_system"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .departureDate(LocalDate.parse("2019-12-27"))
                                                    .originationCityAirportCode(
                                                        "origination_city_airport_code"
                                                    )
                                                    .passengerName("passenger_name")
                                                    .restrictedTicketIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .RestrictedTicketIndicator
                                                            .NO_RESTRICTIONS
                                                    )
                                                    .ticketChangeIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TicketChangeIndicator
                                                            .NONE
                                                    )
                                                    .ticketNumber("ticket_number")
                                                    .travelAgencyCode("travel_agency_code")
                                                    .travelAgencyName("travel_agency_name")
                                                    .addTripLeg(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .builder()
                                                            .carrierCode("carrier_code")
                                                            .destinationCityAirportCode(
                                                                "destination_city_airport_code"
                                                            )
                                                            .fareBasisCode("fare_basis_code")
                                                            .flightNumber("flight_number")
                                                            .serviceClass("service_class")
                                                            .stopOverCode(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .TripLeg
                                                                    .StopOverCode
                                                                    .NONE
                                                            )
                                                            .build()
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .transactionId("transaction_uyrp7fld2ium70oa7oi")
                                    .type(CardPayment.Element.CardSettlement.Type.CARD_SETTLEMENT)
                                    .build()
                            )
                            .cardValidation(
                                CardPayment.Element.CardValidation.builder()
                                    .id("card_validation_yi4e59jiaz6n9hx8tczv")
                                    .actioner(CardPayment.Element.CardValidation.Actioner.USER)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .currency(CardPayment.Element.CardValidation.Currency.CAD)
                                    .digitalWalletTokenId(null)
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkDetails(
                                        CardPayment.Element.CardValidation.NetworkDetails.builder()
                                            .category(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Category
                                                    .VISA
                                            )
                                            .visa(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .builder()
                                                    .electronicCommerceIndicator(
                                                        CardPayment.Element.CardValidation
                                                            .NetworkDetails
                                                            .Visa
                                                            .ElectronicCommerceIndicator
                                                            .MAIL_PHONE_ORDER
                                                    )
                                                    .pointOfServiceEntryMode(
                                                        CardPayment.Element.CardValidation
                                                            .NetworkDetails
                                                            .Visa
                                                            .PointOfServiceEntryMode
                                                            .UNKNOWN
                                                    )
                                                    .standInProcessingReason(
                                                        CardPayment.Element.CardValidation
                                                            .NetworkDetails
                                                            .Visa
                                                            .StandInProcessingReason
                                                            .ISSUER_ERROR
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .networkIdentifiers(
                                        CardPayment.Element.CardValidation.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .physicalCardId(null)
                                    .realTimeDecisionId(null)
                                    .terminalId("RCN5VNXS")
                                    .type(CardPayment.Element.CardValidation.Type.CARD_VALIDATION)
                                    .verification(
                                        CardPayment.Element.CardValidation.Verification.builder()
                                            .cardVerificationCode(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardVerificationCode
                                                    .builder()
                                                    .result(
                                                        CardPayment.Element.CardValidation
                                                            .Verification
                                                            .CardVerificationCode
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .cardholderAddress(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardholderAddress
                                                    .builder()
                                                    .actualLine1("33 Liberty Street")
                                                    .actualPostalCode("94131")
                                                    .providedLine1("33 Liberty Street")
                                                    .providedPostalCode("94132")
                                                    .result(
                                                        CardPayment.Element.CardValidation
                                                            .Verification
                                                            .CardholderAddress
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .category(CardPayment.Element.Category.CARD_AUTHORIZATION)
                            .createdAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                            .other(JsonValue.from(mapOf<String, Any>()))
                            .build(),
                        CardPayment.Element.builder()
                            .cardAuthorization(
                                CardPayment.Element.CardAuthorization.builder()
                                    .id("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .actioner(CardPayment.Element.CardAuthorization.Actioner.USER)
                                    .amount(100L)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .currency(CardPayment.Element.CardAuthorization.Currency.CAD)
                                    .digitalWalletTokenId(null)
                                    .direction(
                                        CardPayment.Element.CardAuthorization.Direction.SETTLEMENT
                                    )
                                    .expiresAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkDetails(
                                        CardPayment.Element.CardAuthorization.NetworkDetails
                                            .builder()
                                            .category(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Category
                                                    .VISA
                                            )
                                            .visa(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .builder()
                                                    .electronicCommerceIndicator(
                                                        CardPayment.Element.CardAuthorization
                                                            .NetworkDetails
                                                            .Visa
                                                            .ElectronicCommerceIndicator
                                                            .MAIL_PHONE_ORDER
                                                    )
                                                    .pointOfServiceEntryMode(
                                                        CardPayment.Element.CardAuthorization
                                                            .NetworkDetails
                                                            .Visa
                                                            .PointOfServiceEntryMode
                                                            .UNKNOWN
                                                    )
                                                    .standInProcessingReason(
                                                        CardPayment.Element.CardAuthorization
                                                            .NetworkDetails
                                                            .Visa
                                                            .StandInProcessingReason
                                                            .ISSUER_ERROR
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .networkIdentifiers(
                                        CardPayment.Element.CardAuthorization.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .pendingTransactionId(null)
                                    .physicalCardId(null)
                                    .presentmentAmount(100L)
                                    .presentmentCurrency("USD")
                                    .processingCategory(
                                        CardPayment.Element.CardAuthorization.ProcessingCategory
                                            .ACCOUNT_FUNDING
                                    )
                                    .realTimeDecisionId(null)
                                    .terminalId("RCN5VNXS")
                                    .type(
                                        CardPayment.Element.CardAuthorization.Type
                                            .CARD_AUTHORIZATION
                                    )
                                    .verification(
                                        CardPayment.Element.CardAuthorization.Verification.builder()
                                            .cardVerificationCode(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardVerificationCode
                                                    .builder()
                                                    .result(
                                                        CardPayment.Element.CardAuthorization
                                                            .Verification
                                                            .CardVerificationCode
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .cardholderAddress(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardholderAddress
                                                    .builder()
                                                    .actualLine1("33 Liberty Street")
                                                    .actualPostalCode("94131")
                                                    .providedLine1("33 Liberty Street")
                                                    .providedPostalCode("94132")
                                                    .result(
                                                        CardPayment.Element.CardAuthorization
                                                            .Verification
                                                            .CardholderAddress
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .cardAuthorizationExpiration(
                                CardPayment.Element.CardAuthorizationExpiration.builder()
                                    .id("card_authorization_expiration_9xxbjtmixs8sfluzux2e")
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(
                                        CardPayment.Element.CardAuthorizationExpiration.Currency.CAD
                                    )
                                    .expiredAmount(20L)
                                    .network(
                                        CardPayment.Element.CardAuthorizationExpiration.Network.VISA
                                    )
                                    .type(
                                        CardPayment.Element.CardAuthorizationExpiration.Type
                                            .CARD_AUTHORIZATION_EXPIRATION
                                    )
                                    .build()
                            )
                            .cardDecline(
                                CardPayment.Element.CardDecline.builder()
                                    .id("card_decline_bx3o8zd7glq8yvtwg25v")
                                    .actioner(CardPayment.Element.CardDecline.Actioner.USER)
                                    .amount(-1000L)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .currency(CardPayment.Element.CardDecline.Currency.CAD)
                                    .declinedTransactionId(
                                        "declined_transaction_17jbn0yyhvkt4v4ooym8"
                                    )
                                    .digitalWalletTokenId(null)
                                    .direction(CardPayment.Element.CardDecline.Direction.SETTLEMENT)
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState(null)
                                    .networkDetails(
                                        CardPayment.Element.CardDecline.NetworkDetails.builder()
                                            .category(
                                                CardPayment.Element.CardDecline.NetworkDetails
                                                    .Category
                                                    .VISA
                                            )
                                            .visa(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .builder()
                                                    .electronicCommerceIndicator(
                                                        CardPayment.Element.CardDecline
                                                            .NetworkDetails
                                                            .Visa
                                                            .ElectronicCommerceIndicator
                                                            .MAIL_PHONE_ORDER
                                                    )
                                                    .pointOfServiceEntryMode(
                                                        CardPayment.Element.CardDecline
                                                            .NetworkDetails
                                                            .Visa
                                                            .PointOfServiceEntryMode
                                                            .UNKNOWN
                                                    )
                                                    .standInProcessingReason(
                                                        CardPayment.Element.CardDecline
                                                            .NetworkDetails
                                                            .Visa
                                                            .StandInProcessingReason
                                                            .ISSUER_ERROR
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .networkIdentifiers(
                                        CardPayment.Element.CardDecline.NetworkIdentifiers.builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .physicalCardId(null)
                                    .presentmentAmount(-1000L)
                                    .presentmentCurrency("USD")
                                    .processingCategory(
                                        CardPayment.Element.CardDecline.ProcessingCategory
                                            .ACCOUNT_FUNDING
                                    )
                                    .realTimeDecisionId(null)
                                    .realTimeDecisionReason(
                                        CardPayment.Element.CardDecline.RealTimeDecisionReason
                                            .INSUFFICIENT_FUNDS
                                    )
                                    .reason(CardPayment.Element.CardDecline.Reason.CARD_NOT_ACTIVE)
                                    .terminalId("RCN5VNXS")
                                    .verification(
                                        CardPayment.Element.CardDecline.Verification.builder()
                                            .cardVerificationCode(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardVerificationCode
                                                    .builder()
                                                    .result(
                                                        CardPayment.Element.CardDecline.Verification
                                                            .CardVerificationCode
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .cardholderAddress(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardholderAddress
                                                    .builder()
                                                    .actualLine1("33 Liberty Street")
                                                    .actualPostalCode("94131")
                                                    .providedLine1("33 Liberty Street")
                                                    .providedPostalCode("94132")
                                                    .result(
                                                        CardPayment.Element.CardDecline.Verification
                                                            .CardholderAddress
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .cardFuelConfirmation(
                                CardPayment.Element.CardFuelConfirmation.builder()
                                    .id("card_fuel_confirmation_wuy91qate4judq2la80a")
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(CardPayment.Element.CardFuelConfirmation.Currency.CAD)
                                    .network(CardPayment.Element.CardFuelConfirmation.Network.VISA)
                                    .networkIdentifiers(
                                        CardPayment.Element.CardFuelConfirmation.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .pendingTransactionId(
                                        "pending_transaction_k1sfetcau2qbvjbzgju4"
                                    )
                                    .type(
                                        CardPayment.Element.CardFuelConfirmation.Type
                                            .CARD_FUEL_CONFIRMATION
                                    )
                                    .updatedAuthorizationAmount(120L)
                                    .build()
                            )
                            .cardIncrement(
                                CardPayment.Element.CardIncrement.builder()
                                    .id("card_increment_6ztayc58j1od0rpebp3e")
                                    .actioner(CardPayment.Element.CardIncrement.Actioner.USER)
                                    .amount(20L)
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(CardPayment.Element.CardIncrement.Currency.CAD)
                                    .network(CardPayment.Element.CardIncrement.Network.VISA)
                                    .networkIdentifiers(
                                        CardPayment.Element.CardIncrement.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .pendingTransactionId(
                                        "pending_transaction_k1sfetcau2qbvjbzgju4"
                                    )
                                    .realTimeDecisionId(null)
                                    .type(CardPayment.Element.CardIncrement.Type.CARD_INCREMENT)
                                    .updatedAuthorizationAmount(120L)
                                    .build()
                            )
                            .cardRefund(
                                CardPayment.Element.CardRefund.builder()
                                    .id("card_refund_imgc2xwplh6t4r3gn16e")
                                    .amount(100L)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .cashback(
                                        CardPayment.Element.CardRefund.Cashback.builder()
                                            .amount("-16699")
                                            .currency(
                                                CardPayment.Element.CardRefund.Cashback.Currency.CAD
                                            )
                                            .build()
                                    )
                                    .currency(CardPayment.Element.CardRefund.Currency.CAD)
                                    .interchange(
                                        CardPayment.Element.CardRefund.Interchange.builder()
                                            .amount("0.137465")
                                            .code("271")
                                            .currency(
                                                CardPayment.Element.CardRefund.Interchange.Currency
                                                    .CAD
                                            )
                                            .build()
                                    )
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantName("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkIdentifiers(
                                        CardPayment.Element.CardRefund.NetworkIdentifiers.builder()
                                            .acquirerBusinessId("69650702")
                                            .acquirerReferenceNumber("83163715445437604865089")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .presentmentAmount(100L)
                                    .presentmentCurrency("USD")
                                    .purchaseDetails(
                                        CardPayment.Element.CardRefund.PurchaseDetails.builder()
                                            .carRental(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .builder()
                                                    .carClassCode("car_class_code")
                                                    .checkoutDate(LocalDate.parse("2019-12-27"))
                                                    .dailyRentalRateAmount(0L)
                                                    .dailyRentalRateCurrency(
                                                        "daily_rental_rate_currency"
                                                    )
                                                    .daysRented(0L)
                                                    .extraCharges(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .fuelChargesAmount(0L)
                                                    .fuelChargesCurrency("fuel_charges_currency")
                                                    .insuranceChargesAmount(0L)
                                                    .insuranceChargesCurrency(
                                                        "insurance_charges_currency"
                                                    )
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .oneWayDropOffChargesAmount(0L)
                                                    .oneWayDropOffChargesCurrency(
                                                        "one_way_drop_off_charges_currency"
                                                    )
                                                    .renterName("renter_name")
                                                    .weeklyRentalRateAmount(0L)
                                                    .weeklyRentalRateCurrency(
                                                        "weekly_rental_rate_currency"
                                                    )
                                                    .build()
                                            )
                                            .customerReferenceIdentifier("51201")
                                            .localTaxAmount(null)
                                            .localTaxCurrency("usd")
                                            .lodging(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .builder()
                                                    .checkInDate(LocalDate.parse("2023-07-20"))
                                                    .dailyRoomRateAmount(1000L)
                                                    .dailyRoomRateCurrency("usd")
                                                    .extraCharges(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .folioCashAdvancesAmount(0L)
                                                    .folioCashAdvancesCurrency("usd")
                                                    .foodBeverageChargesAmount(0L)
                                                    .foodBeverageChargesCurrency("usd")
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .prepaidExpensesAmount(0L)
                                                    .prepaidExpensesCurrency("usd")
                                                    .roomNights(1L)
                                                    .totalRoomTaxAmount(100L)
                                                    .totalRoomTaxCurrency("usd")
                                                    .totalTaxAmount(100L)
                                                    .totalTaxCurrency("usd")
                                                    .build()
                                            )
                                            .nationalTaxAmount(null)
                                            .nationalTaxCurrency("usd")
                                            .purchaseIdentifier("10203")
                                            .purchaseIdentifierFormat(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .PurchaseIdentifierFormat
                                                    .FREE_TEXT
                                            )
                                            .travel(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .builder()
                                                    .ancillary(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .builder()
                                                            .connectedTicketDocumentNumber(
                                                                "connected_ticket_document_number"
                                                            )
                                                            .creditReasonIndicator(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .CreditReasonIndicator
                                                                    .NO_CREDIT
                                                            )
                                                            .passengerNameOrDescription(
                                                                "passenger_name_or_description"
                                                            )
                                                            .addService(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .builder()
                                                                    .category(
                                                                        CardPayment.Element
                                                                            .CardRefund
                                                                            .PurchaseDetails
                                                                            .Travel
                                                                            .Ancillary
                                                                            .Service
                                                                            .Category
                                                                            .NONE
                                                                    )
                                                                    .subCategory("sub_category")
                                                                    .build()
                                                            )
                                                            .ticketDocumentNumber(
                                                                "ticket_document_number"
                                                            )
                                                            .build()
                                                    )
                                                    .computerizedReservationSystem(
                                                        "computerized_reservation_system"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .departureDate(LocalDate.parse("2019-12-27"))
                                                    .originationCityAirportCode(
                                                        "origination_city_airport_code"
                                                    )
                                                    .passengerName("passenger_name")
                                                    .restrictedTicketIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .RestrictedTicketIndicator
                                                            .NO_RESTRICTIONS
                                                    )
                                                    .ticketChangeIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TicketChangeIndicator
                                                            .NONE
                                                    )
                                                    .ticketNumber("ticket_number")
                                                    .travelAgencyCode("travel_agency_code")
                                                    .travelAgencyName("travel_agency_name")
                                                    .addTripLeg(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .builder()
                                                            .carrierCode("carrier_code")
                                                            .destinationCityAirportCode(
                                                                "destination_city_airport_code"
                                                            )
                                                            .fareBasisCode("fare_basis_code")
                                                            .flightNumber("flight_number")
                                                            .serviceClass("service_class")
                                                            .stopOverCode(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .TripLeg
                                                                    .StopOverCode
                                                                    .NONE
                                                            )
                                                            .build()
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .transactionId("transaction_uyrp7fld2ium70oa7oi")
                                    .type(CardPayment.Element.CardRefund.Type.CARD_REFUND)
                                    .build()
                            )
                            .cardReversal(
                                CardPayment.Element.CardReversal.builder()
                                    .id("card_reversal_8vr9qy60cgf5d0slpb68")
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(CardPayment.Element.CardReversal.Currency.CAD)
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .network(CardPayment.Element.CardReversal.Network.VISA)
                                    .networkIdentifiers(
                                        CardPayment.Element.CardReversal.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .pendingTransactionId(
                                        "pending_transaction_k1sfetcau2qbvjbzgju4"
                                    )
                                    .reversalAmount(20L)
                                    .reversalReason(
                                        CardPayment.Element.CardReversal.ReversalReason
                                            .REVERSED_BY_CUSTOMER
                                    )
                                    .terminalId("RCN5VNXS")
                                    .type(CardPayment.Element.CardReversal.Type.CARD_REVERSAL)
                                    .updatedAuthorizationAmount(80L)
                                    .build()
                            )
                            .cardSettlement(
                                CardPayment.Element.CardSettlement.builder()
                                    .id("card_settlement_khv5kfeu0vndj291omg6")
                                    .amount(100L)
                                    .cardAuthorization(null)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .cashback(
                                        CardPayment.Element.CardSettlement.Cashback.builder()
                                            .amount("-16699")
                                            .currency(
                                                CardPayment.Element.CardSettlement.Cashback.Currency
                                                    .CAD
                                            )
                                            .build()
                                    )
                                    .currency(CardPayment.Element.CardSettlement.Currency.CAD)
                                    .interchange(
                                        CardPayment.Element.CardSettlement.Interchange.builder()
                                            .amount("0.137465")
                                            .code("271")
                                            .currency(
                                                CardPayment.Element.CardSettlement.Interchange
                                                    .Currency
                                                    .CAD
                                            )
                                            .build()
                                    )
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantName("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkIdentifiers(
                                        CardPayment.Element.CardSettlement.NetworkIdentifiers
                                            .builder()
                                            .acquirerBusinessId("69650702")
                                            .acquirerReferenceNumber("83163715445437604865089")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .pendingTransactionId(null)
                                    .presentmentAmount(100L)
                                    .presentmentCurrency("USD")
                                    .purchaseDetails(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.builder()
                                            .carRental(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .builder()
                                                    .carClassCode("car_class_code")
                                                    .checkoutDate(LocalDate.parse("2019-12-27"))
                                                    .dailyRentalRateAmount(0L)
                                                    .dailyRentalRateCurrency(
                                                        "daily_rental_rate_currency"
                                                    )
                                                    .daysRented(0L)
                                                    .extraCharges(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .fuelChargesAmount(0L)
                                                    .fuelChargesCurrency("fuel_charges_currency")
                                                    .insuranceChargesAmount(0L)
                                                    .insuranceChargesCurrency(
                                                        "insurance_charges_currency"
                                                    )
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .oneWayDropOffChargesAmount(0L)
                                                    .oneWayDropOffChargesCurrency(
                                                        "one_way_drop_off_charges_currency"
                                                    )
                                                    .renterName("renter_name")
                                                    .weeklyRentalRateAmount(0L)
                                                    .weeklyRentalRateCurrency(
                                                        "weekly_rental_rate_currency"
                                                    )
                                                    .build()
                                            )
                                            .customerReferenceIdentifier("51201")
                                            .localTaxAmount(null)
                                            .localTaxCurrency("usd")
                                            .lodging(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .builder()
                                                    .checkInDate(LocalDate.parse("2023-07-20"))
                                                    .dailyRoomRateAmount(1000L)
                                                    .dailyRoomRateCurrency("usd")
                                                    .extraCharges(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .folioCashAdvancesAmount(0L)
                                                    .folioCashAdvancesCurrency("usd")
                                                    .foodBeverageChargesAmount(0L)
                                                    .foodBeverageChargesCurrency("usd")
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .prepaidExpensesAmount(0L)
                                                    .prepaidExpensesCurrency("usd")
                                                    .roomNights(1L)
                                                    .totalRoomTaxAmount(100L)
                                                    .totalRoomTaxCurrency("usd")
                                                    .totalTaxAmount(100L)
                                                    .totalTaxCurrency("usd")
                                                    .build()
                                            )
                                            .nationalTaxAmount(null)
                                            .nationalTaxCurrency("usd")
                                            .purchaseIdentifier("10203")
                                            .purchaseIdentifierFormat(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .PurchaseIdentifierFormat
                                                    .FREE_TEXT
                                            )
                                            .travel(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .builder()
                                                    .ancillary(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .builder()
                                                            .connectedTicketDocumentNumber(
                                                                "connected_ticket_document_number"
                                                            )
                                                            .creditReasonIndicator(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .CreditReasonIndicator
                                                                    .NO_CREDIT
                                                            )
                                                            .passengerNameOrDescription(
                                                                "passenger_name_or_description"
                                                            )
                                                            .addService(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .builder()
                                                                    .category(
                                                                        CardPayment.Element
                                                                            .CardSettlement
                                                                            .PurchaseDetails
                                                                            .Travel
                                                                            .Ancillary
                                                                            .Service
                                                                            .Category
                                                                            .NONE
                                                                    )
                                                                    .subCategory("sub_category")
                                                                    .build()
                                                            )
                                                            .ticketDocumentNumber(
                                                                "ticket_document_number"
                                                            )
                                                            .build()
                                                    )
                                                    .computerizedReservationSystem(
                                                        "computerized_reservation_system"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .departureDate(LocalDate.parse("2019-12-27"))
                                                    .originationCityAirportCode(
                                                        "origination_city_airport_code"
                                                    )
                                                    .passengerName("passenger_name")
                                                    .restrictedTicketIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .RestrictedTicketIndicator
                                                            .NO_RESTRICTIONS
                                                    )
                                                    .ticketChangeIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TicketChangeIndicator
                                                            .NONE
                                                    )
                                                    .ticketNumber("ticket_number")
                                                    .travelAgencyCode("travel_agency_code")
                                                    .travelAgencyName("travel_agency_name")
                                                    .addTripLeg(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .builder()
                                                            .carrierCode("carrier_code")
                                                            .destinationCityAirportCode(
                                                                "destination_city_airport_code"
                                                            )
                                                            .fareBasisCode("fare_basis_code")
                                                            .flightNumber("flight_number")
                                                            .serviceClass("service_class")
                                                            .stopOverCode(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .TripLeg
                                                                    .StopOverCode
                                                                    .NONE
                                                            )
                                                            .build()
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .transactionId("transaction_uyrp7fld2ium70oa7oi")
                                    .type(CardPayment.Element.CardSettlement.Type.CARD_SETTLEMENT)
                                    .build()
                            )
                            .cardValidation(
                                CardPayment.Element.CardValidation.builder()
                                    .id("card_validation_yi4e59jiaz6n9hx8tczv")
                                    .actioner(CardPayment.Element.CardValidation.Actioner.USER)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .currency(CardPayment.Element.CardValidation.Currency.CAD)
                                    .digitalWalletTokenId(null)
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkDetails(
                                        CardPayment.Element.CardValidation.NetworkDetails.builder()
                                            .category(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Category
                                                    .VISA
                                            )
                                            .visa(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .builder()
                                                    .electronicCommerceIndicator(
                                                        CardPayment.Element.CardValidation
                                                            .NetworkDetails
                                                            .Visa
                                                            .ElectronicCommerceIndicator
                                                            .MAIL_PHONE_ORDER
                                                    )
                                                    .pointOfServiceEntryMode(
                                                        CardPayment.Element.CardValidation
                                                            .NetworkDetails
                                                            .Visa
                                                            .PointOfServiceEntryMode
                                                            .UNKNOWN
                                                    )
                                                    .standInProcessingReason(
                                                        CardPayment.Element.CardValidation
                                                            .NetworkDetails
                                                            .Visa
                                                            .StandInProcessingReason
                                                            .ISSUER_ERROR
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .networkIdentifiers(
                                        CardPayment.Element.CardValidation.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .physicalCardId(null)
                                    .realTimeDecisionId(null)
                                    .terminalId("RCN5VNXS")
                                    .type(CardPayment.Element.CardValidation.Type.CARD_VALIDATION)
                                    .verification(
                                        CardPayment.Element.CardValidation.Verification.builder()
                                            .cardVerificationCode(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardVerificationCode
                                                    .builder()
                                                    .result(
                                                        CardPayment.Element.CardValidation
                                                            .Verification
                                                            .CardVerificationCode
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .cardholderAddress(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardholderAddress
                                                    .builder()
                                                    .actualLine1("33 Liberty Street")
                                                    .actualPostalCode("94131")
                                                    .providedLine1("33 Liberty Street")
                                                    .providedPostalCode("94132")
                                                    .result(
                                                        CardPayment.Element.CardValidation
                                                            .Verification
                                                            .CardholderAddress
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .category(CardPayment.Element.Category.CARD_AUTHORIZATION)
                            .createdAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                            .other(JsonValue.from(mapOf<String, Any>()))
                            .build(),
                        CardPayment.Element.builder()
                            .cardAuthorization(
                                CardPayment.Element.CardAuthorization.builder()
                                    .id("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .actioner(CardPayment.Element.CardAuthorization.Actioner.USER)
                                    .amount(100L)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .currency(CardPayment.Element.CardAuthorization.Currency.CAD)
                                    .digitalWalletTokenId(null)
                                    .direction(
                                        CardPayment.Element.CardAuthorization.Direction.SETTLEMENT
                                    )
                                    .expiresAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkDetails(
                                        CardPayment.Element.CardAuthorization.NetworkDetails
                                            .builder()
                                            .category(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Category
                                                    .VISA
                                            )
                                            .visa(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .builder()
                                                    .electronicCommerceIndicator(
                                                        CardPayment.Element.CardAuthorization
                                                            .NetworkDetails
                                                            .Visa
                                                            .ElectronicCommerceIndicator
                                                            .MAIL_PHONE_ORDER
                                                    )
                                                    .pointOfServiceEntryMode(
                                                        CardPayment.Element.CardAuthorization
                                                            .NetworkDetails
                                                            .Visa
                                                            .PointOfServiceEntryMode
                                                            .UNKNOWN
                                                    )
                                                    .standInProcessingReason(
                                                        CardPayment.Element.CardAuthorization
                                                            .NetworkDetails
                                                            .Visa
                                                            .StandInProcessingReason
                                                            .ISSUER_ERROR
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .networkIdentifiers(
                                        CardPayment.Element.CardAuthorization.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .pendingTransactionId(null)
                                    .physicalCardId(null)
                                    .presentmentAmount(100L)
                                    .presentmentCurrency("USD")
                                    .processingCategory(
                                        CardPayment.Element.CardAuthorization.ProcessingCategory
                                            .ACCOUNT_FUNDING
                                    )
                                    .realTimeDecisionId(null)
                                    .terminalId("RCN5VNXS")
                                    .type(
                                        CardPayment.Element.CardAuthorization.Type
                                            .CARD_AUTHORIZATION
                                    )
                                    .verification(
                                        CardPayment.Element.CardAuthorization.Verification.builder()
                                            .cardVerificationCode(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardVerificationCode
                                                    .builder()
                                                    .result(
                                                        CardPayment.Element.CardAuthorization
                                                            .Verification
                                                            .CardVerificationCode
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .cardholderAddress(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardholderAddress
                                                    .builder()
                                                    .actualLine1("33 Liberty Street")
                                                    .actualPostalCode("94131")
                                                    .providedLine1("33 Liberty Street")
                                                    .providedPostalCode("94132")
                                                    .result(
                                                        CardPayment.Element.CardAuthorization
                                                            .Verification
                                                            .CardholderAddress
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .cardAuthorizationExpiration(
                                CardPayment.Element.CardAuthorizationExpiration.builder()
                                    .id("card_authorization_expiration_9xxbjtmixs8sfluzux2e")
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(
                                        CardPayment.Element.CardAuthorizationExpiration.Currency.CAD
                                    )
                                    .expiredAmount(20L)
                                    .network(
                                        CardPayment.Element.CardAuthorizationExpiration.Network.VISA
                                    )
                                    .type(
                                        CardPayment.Element.CardAuthorizationExpiration.Type
                                            .CARD_AUTHORIZATION_EXPIRATION
                                    )
                                    .build()
                            )
                            .cardDecline(
                                CardPayment.Element.CardDecline.builder()
                                    .id("card_decline_bx3o8zd7glq8yvtwg25v")
                                    .actioner(CardPayment.Element.CardDecline.Actioner.USER)
                                    .amount(-1000L)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .currency(CardPayment.Element.CardDecline.Currency.CAD)
                                    .declinedTransactionId(
                                        "declined_transaction_17jbn0yyhvkt4v4ooym8"
                                    )
                                    .digitalWalletTokenId(null)
                                    .direction(CardPayment.Element.CardDecline.Direction.SETTLEMENT)
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState(null)
                                    .networkDetails(
                                        CardPayment.Element.CardDecline.NetworkDetails.builder()
                                            .category(
                                                CardPayment.Element.CardDecline.NetworkDetails
                                                    .Category
                                                    .VISA
                                            )
                                            .visa(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .builder()
                                                    .electronicCommerceIndicator(
                                                        CardPayment.Element.CardDecline
                                                            .NetworkDetails
                                                            .Visa
                                                            .ElectronicCommerceIndicator
                                                            .MAIL_PHONE_ORDER
                                                    )
                                                    .pointOfServiceEntryMode(
                                                        CardPayment.Element.CardDecline
                                                            .NetworkDetails
                                                            .Visa
                                                            .PointOfServiceEntryMode
                                                            .UNKNOWN
                                                    )
                                                    .standInProcessingReason(
                                                        CardPayment.Element.CardDecline
                                                            .NetworkDetails
                                                            .Visa
                                                            .StandInProcessingReason
                                                            .ISSUER_ERROR
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .networkIdentifiers(
                                        CardPayment.Element.CardDecline.NetworkIdentifiers.builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .physicalCardId(null)
                                    .presentmentAmount(-1000L)
                                    .presentmentCurrency("USD")
                                    .processingCategory(
                                        CardPayment.Element.CardDecline.ProcessingCategory
                                            .ACCOUNT_FUNDING
                                    )
                                    .realTimeDecisionId(null)
                                    .realTimeDecisionReason(
                                        CardPayment.Element.CardDecline.RealTimeDecisionReason
                                            .INSUFFICIENT_FUNDS
                                    )
                                    .reason(CardPayment.Element.CardDecline.Reason.CARD_NOT_ACTIVE)
                                    .terminalId("RCN5VNXS")
                                    .verification(
                                        CardPayment.Element.CardDecline.Verification.builder()
                                            .cardVerificationCode(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardVerificationCode
                                                    .builder()
                                                    .result(
                                                        CardPayment.Element.CardDecline.Verification
                                                            .CardVerificationCode
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .cardholderAddress(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardholderAddress
                                                    .builder()
                                                    .actualLine1("33 Liberty Street")
                                                    .actualPostalCode("94131")
                                                    .providedLine1("33 Liberty Street")
                                                    .providedPostalCode("94132")
                                                    .result(
                                                        CardPayment.Element.CardDecline.Verification
                                                            .CardholderAddress
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .cardFuelConfirmation(
                                CardPayment.Element.CardFuelConfirmation.builder()
                                    .id("card_fuel_confirmation_wuy91qate4judq2la80a")
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(CardPayment.Element.CardFuelConfirmation.Currency.CAD)
                                    .network(CardPayment.Element.CardFuelConfirmation.Network.VISA)
                                    .networkIdentifiers(
                                        CardPayment.Element.CardFuelConfirmation.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .pendingTransactionId(
                                        "pending_transaction_k1sfetcau2qbvjbzgju4"
                                    )
                                    .type(
                                        CardPayment.Element.CardFuelConfirmation.Type
                                            .CARD_FUEL_CONFIRMATION
                                    )
                                    .updatedAuthorizationAmount(120L)
                                    .build()
                            )
                            .cardIncrement(
                                CardPayment.Element.CardIncrement.builder()
                                    .id("card_increment_6ztayc58j1od0rpebp3e")
                                    .actioner(CardPayment.Element.CardIncrement.Actioner.USER)
                                    .amount(20L)
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(CardPayment.Element.CardIncrement.Currency.CAD)
                                    .network(CardPayment.Element.CardIncrement.Network.VISA)
                                    .networkIdentifiers(
                                        CardPayment.Element.CardIncrement.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .pendingTransactionId(
                                        "pending_transaction_k1sfetcau2qbvjbzgju4"
                                    )
                                    .realTimeDecisionId(null)
                                    .type(CardPayment.Element.CardIncrement.Type.CARD_INCREMENT)
                                    .updatedAuthorizationAmount(120L)
                                    .build()
                            )
                            .cardRefund(
                                CardPayment.Element.CardRefund.builder()
                                    .id("card_refund_imgc2xwplh6t4r3gn16e")
                                    .amount(100L)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .cashback(
                                        CardPayment.Element.CardRefund.Cashback.builder()
                                            .amount("-16699")
                                            .currency(
                                                CardPayment.Element.CardRefund.Cashback.Currency.CAD
                                            )
                                            .build()
                                    )
                                    .currency(CardPayment.Element.CardRefund.Currency.CAD)
                                    .interchange(
                                        CardPayment.Element.CardRefund.Interchange.builder()
                                            .amount("0.137465")
                                            .code("271")
                                            .currency(
                                                CardPayment.Element.CardRefund.Interchange.Currency
                                                    .CAD
                                            )
                                            .build()
                                    )
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantName("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkIdentifiers(
                                        CardPayment.Element.CardRefund.NetworkIdentifiers.builder()
                                            .acquirerBusinessId("69650702")
                                            .acquirerReferenceNumber("83163715445437604865089")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .presentmentAmount(100L)
                                    .presentmentCurrency("USD")
                                    .purchaseDetails(
                                        CardPayment.Element.CardRefund.PurchaseDetails.builder()
                                            .carRental(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .builder()
                                                    .carClassCode("car_class_code")
                                                    .checkoutDate(LocalDate.parse("2019-12-27"))
                                                    .dailyRentalRateAmount(0L)
                                                    .dailyRentalRateCurrency(
                                                        "daily_rental_rate_currency"
                                                    )
                                                    .daysRented(0L)
                                                    .extraCharges(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .fuelChargesAmount(0L)
                                                    .fuelChargesCurrency("fuel_charges_currency")
                                                    .insuranceChargesAmount(0L)
                                                    .insuranceChargesCurrency(
                                                        "insurance_charges_currency"
                                                    )
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .oneWayDropOffChargesAmount(0L)
                                                    .oneWayDropOffChargesCurrency(
                                                        "one_way_drop_off_charges_currency"
                                                    )
                                                    .renterName("renter_name")
                                                    .weeklyRentalRateAmount(0L)
                                                    .weeklyRentalRateCurrency(
                                                        "weekly_rental_rate_currency"
                                                    )
                                                    .build()
                                            )
                                            .customerReferenceIdentifier("51201")
                                            .localTaxAmount(null)
                                            .localTaxCurrency("usd")
                                            .lodging(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .builder()
                                                    .checkInDate(LocalDate.parse("2023-07-20"))
                                                    .dailyRoomRateAmount(1000L)
                                                    .dailyRoomRateCurrency("usd")
                                                    .extraCharges(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .folioCashAdvancesAmount(0L)
                                                    .folioCashAdvancesCurrency("usd")
                                                    .foodBeverageChargesAmount(0L)
                                                    .foodBeverageChargesCurrency("usd")
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .prepaidExpensesAmount(0L)
                                                    .prepaidExpensesCurrency("usd")
                                                    .roomNights(1L)
                                                    .totalRoomTaxAmount(100L)
                                                    .totalRoomTaxCurrency("usd")
                                                    .totalTaxAmount(100L)
                                                    .totalTaxCurrency("usd")
                                                    .build()
                                            )
                                            .nationalTaxAmount(null)
                                            .nationalTaxCurrency("usd")
                                            .purchaseIdentifier("10203")
                                            .purchaseIdentifierFormat(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .PurchaseIdentifierFormat
                                                    .FREE_TEXT
                                            )
                                            .travel(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .builder()
                                                    .ancillary(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .builder()
                                                            .connectedTicketDocumentNumber(
                                                                "connected_ticket_document_number"
                                                            )
                                                            .creditReasonIndicator(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .CreditReasonIndicator
                                                                    .NO_CREDIT
                                                            )
                                                            .passengerNameOrDescription(
                                                                "passenger_name_or_description"
                                                            )
                                                            .addService(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .builder()
                                                                    .category(
                                                                        CardPayment.Element
                                                                            .CardRefund
                                                                            .PurchaseDetails
                                                                            .Travel
                                                                            .Ancillary
                                                                            .Service
                                                                            .Category
                                                                            .NONE
                                                                    )
                                                                    .subCategory("sub_category")
                                                                    .build()
                                                            )
                                                            .ticketDocumentNumber(
                                                                "ticket_document_number"
                                                            )
                                                            .build()
                                                    )
                                                    .computerizedReservationSystem(
                                                        "computerized_reservation_system"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .departureDate(LocalDate.parse("2019-12-27"))
                                                    .originationCityAirportCode(
                                                        "origination_city_airport_code"
                                                    )
                                                    .passengerName("passenger_name")
                                                    .restrictedTicketIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .RestrictedTicketIndicator
                                                            .NO_RESTRICTIONS
                                                    )
                                                    .ticketChangeIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TicketChangeIndicator
                                                            .NONE
                                                    )
                                                    .ticketNumber("ticket_number")
                                                    .travelAgencyCode("travel_agency_code")
                                                    .travelAgencyName("travel_agency_name")
                                                    .addTripLeg(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .builder()
                                                            .carrierCode("carrier_code")
                                                            .destinationCityAirportCode(
                                                                "destination_city_airport_code"
                                                            )
                                                            .fareBasisCode("fare_basis_code")
                                                            .flightNumber("flight_number")
                                                            .serviceClass("service_class")
                                                            .stopOverCode(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .TripLeg
                                                                    .StopOverCode
                                                                    .NONE
                                                            )
                                                            .build()
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .transactionId("transaction_uyrp7fld2ium70oa7oi")
                                    .type(CardPayment.Element.CardRefund.Type.CARD_REFUND)
                                    .build()
                            )
                            .cardReversal(
                                CardPayment.Element.CardReversal.builder()
                                    .id("card_reversal_8vr9qy60cgf5d0slpb68")
                                    .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                                    .currency(CardPayment.Element.CardReversal.Currency.CAD)
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .network(CardPayment.Element.CardReversal.Network.VISA)
                                    .networkIdentifiers(
                                        CardPayment.Element.CardReversal.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .pendingTransactionId(
                                        "pending_transaction_k1sfetcau2qbvjbzgju4"
                                    )
                                    .reversalAmount(20L)
                                    .reversalReason(
                                        CardPayment.Element.CardReversal.ReversalReason
                                            .REVERSED_BY_CUSTOMER
                                    )
                                    .terminalId("RCN5VNXS")
                                    .type(CardPayment.Element.CardReversal.Type.CARD_REVERSAL)
                                    .updatedAuthorizationAmount(80L)
                                    .build()
                            )
                            .cardSettlement(
                                CardPayment.Element.CardSettlement.builder()
                                    .id("card_settlement_khv5kfeu0vndj291omg6")
                                    .amount(100L)
                                    .cardAuthorization(null)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .cashback(
                                        CardPayment.Element.CardSettlement.Cashback.builder()
                                            .amount("-16699")
                                            .currency(
                                                CardPayment.Element.CardSettlement.Cashback.Currency
                                                    .CAD
                                            )
                                            .build()
                                    )
                                    .currency(CardPayment.Element.CardSettlement.Currency.CAD)
                                    .interchange(
                                        CardPayment.Element.CardSettlement.Interchange.builder()
                                            .amount("0.137465")
                                            .code("271")
                                            .currency(
                                                CardPayment.Element.CardSettlement.Interchange
                                                    .Currency
                                                    .CAD
                                            )
                                            .build()
                                    )
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantName("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkIdentifiers(
                                        CardPayment.Element.CardSettlement.NetworkIdentifiers
                                            .builder()
                                            .acquirerBusinessId("69650702")
                                            .acquirerReferenceNumber("83163715445437604865089")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .pendingTransactionId(null)
                                    .presentmentAmount(100L)
                                    .presentmentCurrency("USD")
                                    .purchaseDetails(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.builder()
                                            .carRental(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .builder()
                                                    .carClassCode("car_class_code")
                                                    .checkoutDate(LocalDate.parse("2019-12-27"))
                                                    .dailyRentalRateAmount(0L)
                                                    .dailyRentalRateCurrency(
                                                        "daily_rental_rate_currency"
                                                    )
                                                    .daysRented(0L)
                                                    .extraCharges(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .fuelChargesAmount(0L)
                                                    .fuelChargesCurrency("fuel_charges_currency")
                                                    .insuranceChargesAmount(0L)
                                                    .insuranceChargesCurrency(
                                                        "insurance_charges_currency"
                                                    )
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .oneWayDropOffChargesAmount(0L)
                                                    .oneWayDropOffChargesCurrency(
                                                        "one_way_drop_off_charges_currency"
                                                    )
                                                    .renterName("renter_name")
                                                    .weeklyRentalRateAmount(0L)
                                                    .weeklyRentalRateCurrency(
                                                        "weekly_rental_rate_currency"
                                                    )
                                                    .build()
                                            )
                                            .customerReferenceIdentifier("51201")
                                            .localTaxAmount(null)
                                            .localTaxCurrency("usd")
                                            .lodging(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .builder()
                                                    .checkInDate(LocalDate.parse("2023-07-20"))
                                                    .dailyRoomRateAmount(1000L)
                                                    .dailyRoomRateCurrency("usd")
                                                    .extraCharges(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .folioCashAdvancesAmount(0L)
                                                    .folioCashAdvancesCurrency("usd")
                                                    .foodBeverageChargesAmount(0L)
                                                    .foodBeverageChargesCurrency("usd")
                                                    .noShowIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .prepaidExpensesAmount(0L)
                                                    .prepaidExpensesCurrency("usd")
                                                    .roomNights(1L)
                                                    .totalRoomTaxAmount(100L)
                                                    .totalRoomTaxCurrency("usd")
                                                    .totalTaxAmount(100L)
                                                    .totalTaxCurrency("usd")
                                                    .build()
                                            )
                                            .nationalTaxAmount(null)
                                            .nationalTaxCurrency("usd")
                                            .purchaseIdentifier("10203")
                                            .purchaseIdentifierFormat(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .PurchaseIdentifierFormat
                                                    .FREE_TEXT
                                            )
                                            .travel(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .builder()
                                                    .ancillary(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .builder()
                                                            .connectedTicketDocumentNumber(
                                                                "connected_ticket_document_number"
                                                            )
                                                            .creditReasonIndicator(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .CreditReasonIndicator
                                                                    .NO_CREDIT
                                                            )
                                                            .passengerNameOrDescription(
                                                                "passenger_name_or_description"
                                                            )
                                                            .addService(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .builder()
                                                                    .category(
                                                                        CardPayment.Element
                                                                            .CardSettlement
                                                                            .PurchaseDetails
                                                                            .Travel
                                                                            .Ancillary
                                                                            .Service
                                                                            .Category
                                                                            .NONE
                                                                    )
                                                                    .subCategory("sub_category")
                                                                    .build()
                                                            )
                                                            .ticketDocumentNumber(
                                                                "ticket_document_number"
                                                            )
                                                            .build()
                                                    )
                                                    .computerizedReservationSystem(
                                                        "computerized_reservation_system"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .departureDate(LocalDate.parse("2019-12-27"))
                                                    .originationCityAirportCode(
                                                        "origination_city_airport_code"
                                                    )
                                                    .passengerName("passenger_name")
                                                    .restrictedTicketIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .RestrictedTicketIndicator
                                                            .NO_RESTRICTIONS
                                                    )
                                                    .ticketChangeIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TicketChangeIndicator
                                                            .NONE
                                                    )
                                                    .ticketNumber("ticket_number")
                                                    .travelAgencyCode("travel_agency_code")
                                                    .travelAgencyName("travel_agency_name")
                                                    .addTripLeg(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .builder()
                                                            .carrierCode("carrier_code")
                                                            .destinationCityAirportCode(
                                                                "destination_city_airport_code"
                                                            )
                                                            .fareBasisCode("fare_basis_code")
                                                            .flightNumber("flight_number")
                                                            .serviceClass("service_class")
                                                            .stopOverCode(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .TripLeg
                                                                    .StopOverCode
                                                                    .NONE
                                                            )
                                                            .build()
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .transactionId("transaction_uyrp7fld2ium70oa7oi")
                                    .type(CardPayment.Element.CardSettlement.Type.CARD_SETTLEMENT)
                                    .build()
                            )
                            .cardValidation(
                                CardPayment.Element.CardValidation.builder()
                                    .id("card_validation_yi4e59jiaz6n9hx8tczv")
                                    .actioner(CardPayment.Element.CardValidation.Actioner.USER)
                                    .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                                    .currency(CardPayment.Element.CardValidation.Currency.CAD)
                                    .digitalWalletTokenId(null)
                                    .merchantAcceptorId("5665270011000168")
                                    .merchantCategoryCode("5734")
                                    .merchantCity("New York")
                                    .merchantCountry("US")
                                    .merchantDescriptor("AMAZON.COM")
                                    .merchantPostalCode("10045")
                                    .merchantState("NY")
                                    .networkDetails(
                                        CardPayment.Element.CardValidation.NetworkDetails.builder()
                                            .category(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Category
                                                    .VISA
                                            )
                                            .visa(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .builder()
                                                    .electronicCommerceIndicator(
                                                        CardPayment.Element.CardValidation
                                                            .NetworkDetails
                                                            .Visa
                                                            .ElectronicCommerceIndicator
                                                            .MAIL_PHONE_ORDER
                                                    )
                                                    .pointOfServiceEntryMode(
                                                        CardPayment.Element.CardValidation
                                                            .NetworkDetails
                                                            .Visa
                                                            .PointOfServiceEntryMode
                                                            .UNKNOWN
                                                    )
                                                    .standInProcessingReason(
                                                        CardPayment.Element.CardValidation
                                                            .NetworkDetails
                                                            .Visa
                                                            .StandInProcessingReason
                                                            .ISSUER_ERROR
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .networkIdentifiers(
                                        CardPayment.Element.CardValidation.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("785867080153")
                                            .traceNumber("487941")
                                            .transactionId("627199945183184")
                                            .build()
                                    )
                                    .networkRiskScore(10L)
                                    .physicalCardId(null)
                                    .realTimeDecisionId(null)
                                    .terminalId("RCN5VNXS")
                                    .type(CardPayment.Element.CardValidation.Type.CARD_VALIDATION)
                                    .verification(
                                        CardPayment.Element.CardValidation.Verification.builder()
                                            .cardVerificationCode(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardVerificationCode
                                                    .builder()
                                                    .result(
                                                        CardPayment.Element.CardValidation
                                                            .Verification
                                                            .CardVerificationCode
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .cardholderAddress(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardholderAddress
                                                    .builder()
                                                    .actualLine1("33 Liberty Street")
                                                    .actualPostalCode("94131")
                                                    .providedLine1("33 Liberty Street")
                                                    .providedPostalCode("94132")
                                                    .result(
                                                        CardPayment.Element.CardValidation
                                                            .Verification
                                                            .CardholderAddress
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .category(CardPayment.Element.Category.CARD_AUTHORIZATION)
                            .createdAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                            .other(JsonValue.from(mapOf<String, Any>()))
                            .build(),
                    )
                )
                .physicalCardId(null)
                .state(
                    CardPayment.State.builder()
                        .authorizedAmount(100L)
                        .fuelConfirmedAmount(0L)
                        .incrementedAmount(20L)
                        .reversedAmount(20L)
                        .settledAmount(100L)
                        .build()
                )
                .type(CardPayment.Type.CARD_PAYMENT)
                .build()
        assertThat(cardPayment).isNotNull
        assertThat(cardPayment.id()).isEqualTo("card_payment_nd3k2kacrqjli8482ave")
        assertThat(cardPayment.accountId()).isEqualTo("account_in71c4amph0vgo2qllky")
        assertThat(cardPayment.cardId()).isEqualTo("card_oubs0hwk5rn6knuecxg2")
        assertThat(cardPayment.createdAt()).isEqualTo(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
        assertThat(cardPayment.digitalWalletTokenId()).isNull()
        assertThat(cardPayment.elements())
            .containsExactly(
                CardPayment.Element.builder()
                    .cardAuthorization(
                        CardPayment.Element.CardAuthorization.builder()
                            .id("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .actioner(CardPayment.Element.CardAuthorization.Actioner.USER)
                            .amount(100L)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .currency(CardPayment.Element.CardAuthorization.Currency.CAD)
                            .digitalWalletTokenId(null)
                            .direction(CardPayment.Element.CardAuthorization.Direction.SETTLEMENT)
                            .expiresAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkDetails(
                                CardPayment.Element.CardAuthorization.NetworkDetails.builder()
                                    .category(
                                        CardPayment.Element.CardAuthorization.NetworkDetails
                                            .Category
                                            .VISA
                                    )
                                    .visa(
                                        CardPayment.Element.CardAuthorization.NetworkDetails.Visa
                                            .builder()
                                            .electronicCommerceIndicator(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .ElectronicCommerceIndicator
                                                    .MAIL_PHONE_ORDER
                                            )
                                            .pointOfServiceEntryMode(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .PointOfServiceEntryMode
                                                    .UNKNOWN
                                            )
                                            .standInProcessingReason(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .StandInProcessingReason
                                                    .ISSUER_ERROR
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .networkIdentifiers(
                                CardPayment.Element.CardAuthorization.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .pendingTransactionId(null)
                            .physicalCardId(null)
                            .presentmentAmount(100L)
                            .presentmentCurrency("USD")
                            .processingCategory(
                                CardPayment.Element.CardAuthorization.ProcessingCategory
                                    .ACCOUNT_FUNDING
                            )
                            .realTimeDecisionId(null)
                            .terminalId("RCN5VNXS")
                            .type(CardPayment.Element.CardAuthorization.Type.CARD_AUTHORIZATION)
                            .verification(
                                CardPayment.Element.CardAuthorization.Verification.builder()
                                    .cardVerificationCode(
                                        CardPayment.Element.CardAuthorization.Verification
                                            .CardVerificationCode
                                            .builder()
                                            .result(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardVerificationCode
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .cardholderAddress(
                                        CardPayment.Element.CardAuthorization.Verification
                                            .CardholderAddress
                                            .builder()
                                            .actualLine1("33 Liberty Street")
                                            .actualPostalCode("94131")
                                            .providedLine1("33 Liberty Street")
                                            .providedPostalCode("94132")
                                            .result(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardholderAddress
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .build()
                    )
                    .cardAuthorizationExpiration(
                        CardPayment.Element.CardAuthorizationExpiration.builder()
                            .id("card_authorization_expiration_9xxbjtmixs8sfluzux2e")
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardAuthorizationExpiration.Currency.CAD)
                            .expiredAmount(20L)
                            .network(CardPayment.Element.CardAuthorizationExpiration.Network.VISA)
                            .type(
                                CardPayment.Element.CardAuthorizationExpiration.Type
                                    .CARD_AUTHORIZATION_EXPIRATION
                            )
                            .build()
                    )
                    .cardDecline(
                        CardPayment.Element.CardDecline.builder()
                            .id("card_decline_bx3o8zd7glq8yvtwg25v")
                            .actioner(CardPayment.Element.CardDecline.Actioner.USER)
                            .amount(-1000L)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .currency(CardPayment.Element.CardDecline.Currency.CAD)
                            .declinedTransactionId("declined_transaction_17jbn0yyhvkt4v4ooym8")
                            .digitalWalletTokenId(null)
                            .direction(CardPayment.Element.CardDecline.Direction.SETTLEMENT)
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState(null)
                            .networkDetails(
                                CardPayment.Element.CardDecline.NetworkDetails.builder()
                                    .category(
                                        CardPayment.Element.CardDecline.NetworkDetails.Category.VISA
                                    )
                                    .visa(
                                        CardPayment.Element.CardDecline.NetworkDetails.Visa
                                            .builder()
                                            .electronicCommerceIndicator(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .ElectronicCommerceIndicator
                                                    .MAIL_PHONE_ORDER
                                            )
                                            .pointOfServiceEntryMode(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .PointOfServiceEntryMode
                                                    .UNKNOWN
                                            )
                                            .standInProcessingReason(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .StandInProcessingReason
                                                    .ISSUER_ERROR
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .networkIdentifiers(
                                CardPayment.Element.CardDecline.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .physicalCardId(null)
                            .presentmentAmount(-1000L)
                            .presentmentCurrency("USD")
                            .processingCategory(
                                CardPayment.Element.CardDecline.ProcessingCategory.ACCOUNT_FUNDING
                            )
                            .realTimeDecisionId(null)
                            .realTimeDecisionReason(
                                CardPayment.Element.CardDecline.RealTimeDecisionReason
                                    .INSUFFICIENT_FUNDS
                            )
                            .reason(CardPayment.Element.CardDecline.Reason.CARD_NOT_ACTIVE)
                            .terminalId("RCN5VNXS")
                            .verification(
                                CardPayment.Element.CardDecline.Verification.builder()
                                    .cardVerificationCode(
                                        CardPayment.Element.CardDecline.Verification
                                            .CardVerificationCode
                                            .builder()
                                            .result(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardVerificationCode
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .cardholderAddress(
                                        CardPayment.Element.CardDecline.Verification
                                            .CardholderAddress
                                            .builder()
                                            .actualLine1("33 Liberty Street")
                                            .actualPostalCode("94131")
                                            .providedLine1("33 Liberty Street")
                                            .providedPostalCode("94132")
                                            .result(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardholderAddress
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .build()
                    )
                    .cardFuelConfirmation(
                        CardPayment.Element.CardFuelConfirmation.builder()
                            .id("card_fuel_confirmation_wuy91qate4judq2la80a")
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardFuelConfirmation.Currency.CAD)
                            .network(CardPayment.Element.CardFuelConfirmation.Network.VISA)
                            .networkIdentifiers(
                                CardPayment.Element.CardFuelConfirmation.NetworkIdentifiers
                                    .builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .pendingTransactionId("pending_transaction_k1sfetcau2qbvjbzgju4")
                            .type(
                                CardPayment.Element.CardFuelConfirmation.Type.CARD_FUEL_CONFIRMATION
                            )
                            .updatedAuthorizationAmount(120L)
                            .build()
                    )
                    .cardIncrement(
                        CardPayment.Element.CardIncrement.builder()
                            .id("card_increment_6ztayc58j1od0rpebp3e")
                            .actioner(CardPayment.Element.CardIncrement.Actioner.USER)
                            .amount(20L)
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardIncrement.Currency.CAD)
                            .network(CardPayment.Element.CardIncrement.Network.VISA)
                            .networkIdentifiers(
                                CardPayment.Element.CardIncrement.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .pendingTransactionId("pending_transaction_k1sfetcau2qbvjbzgju4")
                            .realTimeDecisionId(null)
                            .type(CardPayment.Element.CardIncrement.Type.CARD_INCREMENT)
                            .updatedAuthorizationAmount(120L)
                            .build()
                    )
                    .cardRefund(
                        CardPayment.Element.CardRefund.builder()
                            .id("card_refund_imgc2xwplh6t4r3gn16e")
                            .amount(100L)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .cashback(
                                CardPayment.Element.CardRefund.Cashback.builder()
                                    .amount("-16699")
                                    .currency(CardPayment.Element.CardRefund.Cashback.Currency.CAD)
                                    .build()
                            )
                            .currency(CardPayment.Element.CardRefund.Currency.CAD)
                            .interchange(
                                CardPayment.Element.CardRefund.Interchange.builder()
                                    .amount("0.137465")
                                    .code("271")
                                    .currency(
                                        CardPayment.Element.CardRefund.Interchange.Currency.CAD
                                    )
                                    .build()
                            )
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantName("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkIdentifiers(
                                CardPayment.Element.CardRefund.NetworkIdentifiers.builder()
                                    .acquirerBusinessId("69650702")
                                    .acquirerReferenceNumber("83163715445437604865089")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .presentmentAmount(100L)
                            .presentmentCurrency("USD")
                            .purchaseDetails(
                                CardPayment.Element.CardRefund.PurchaseDetails.builder()
                                    .carRental(
                                        CardPayment.Element.CardRefund.PurchaseDetails.CarRental
                                            .builder()
                                            .carClassCode("car_class_code")
                                            .checkoutDate(LocalDate.parse("2019-12-27"))
                                            .dailyRentalRateAmount(0L)
                                            .dailyRentalRateCurrency("daily_rental_rate_currency")
                                            .daysRented(0L)
                                            .extraCharges(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .fuelChargesAmount(0L)
                                            .fuelChargesCurrency("fuel_charges_currency")
                                            .insuranceChargesAmount(0L)
                                            .insuranceChargesCurrency("insurance_charges_currency")
                                            .noShowIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .oneWayDropOffChargesAmount(0L)
                                            .oneWayDropOffChargesCurrency(
                                                "one_way_drop_off_charges_currency"
                                            )
                                            .renterName("renter_name")
                                            .weeklyRentalRateAmount(0L)
                                            .weeklyRentalRateCurrency("weekly_rental_rate_currency")
                                            .build()
                                    )
                                    .customerReferenceIdentifier("51201")
                                    .localTaxAmount(null)
                                    .localTaxCurrency("usd")
                                    .lodging(
                                        CardPayment.Element.CardRefund.PurchaseDetails.Lodging
                                            .builder()
                                            .checkInDate(LocalDate.parse("2023-07-20"))
                                            .dailyRoomRateAmount(1000L)
                                            .dailyRoomRateCurrency("usd")
                                            .extraCharges(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .folioCashAdvancesAmount(0L)
                                            .folioCashAdvancesCurrency("usd")
                                            .foodBeverageChargesAmount(0L)
                                            .foodBeverageChargesCurrency("usd")
                                            .noShowIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .prepaidExpensesAmount(0L)
                                            .prepaidExpensesCurrency("usd")
                                            .roomNights(1L)
                                            .totalRoomTaxAmount(100L)
                                            .totalRoomTaxCurrency("usd")
                                            .totalTaxAmount(100L)
                                            .totalTaxCurrency("usd")
                                            .build()
                                    )
                                    .nationalTaxAmount(null)
                                    .nationalTaxCurrency("usd")
                                    .purchaseIdentifier("10203")
                                    .purchaseIdentifierFormat(
                                        CardPayment.Element.CardRefund.PurchaseDetails
                                            .PurchaseIdentifierFormat
                                            .FREE_TEXT
                                    )
                                    .travel(
                                        CardPayment.Element.CardRefund.PurchaseDetails.Travel
                                            .builder()
                                            .ancillary(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .Ancillary
                                                    .builder()
                                                    .connectedTicketDocumentNumber(
                                                        "connected_ticket_document_number"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .passengerNameOrDescription(
                                                        "passenger_name_or_description"
                                                    )
                                                    .addService(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .Service
                                                            .builder()
                                                            .category(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .Category
                                                                    .NONE
                                                            )
                                                            .subCategory("sub_category")
                                                            .build()
                                                    )
                                                    .ticketDocumentNumber("ticket_document_number")
                                                    .build()
                                            )
                                            .computerizedReservationSystem(
                                                "computerized_reservation_system"
                                            )
                                            .creditReasonIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .CreditReasonIndicator
                                                    .NO_CREDIT
                                            )
                                            .departureDate(LocalDate.parse("2019-12-27"))
                                            .originationCityAirportCode(
                                                "origination_city_airport_code"
                                            )
                                            .passengerName("passenger_name")
                                            .restrictedTicketIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .RestrictedTicketIndicator
                                                    .NO_RESTRICTIONS
                                            )
                                            .ticketChangeIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .TicketChangeIndicator
                                                    .NONE
                                            )
                                            .ticketNumber("ticket_number")
                                            .travelAgencyCode("travel_agency_code")
                                            .travelAgencyName("travel_agency_name")
                                            .addTripLeg(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .TripLeg
                                                    .builder()
                                                    .carrierCode("carrier_code")
                                                    .destinationCityAirportCode(
                                                        "destination_city_airport_code"
                                                    )
                                                    .fareBasisCode("fare_basis_code")
                                                    .flightNumber("flight_number")
                                                    .serviceClass("service_class")
                                                    .stopOverCode(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .StopOverCode
                                                            .NONE
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .transactionId("transaction_uyrp7fld2ium70oa7oi")
                            .type(CardPayment.Element.CardRefund.Type.CARD_REFUND)
                            .build()
                    )
                    .cardReversal(
                        CardPayment.Element.CardReversal.builder()
                            .id("card_reversal_8vr9qy60cgf5d0slpb68")
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardReversal.Currency.CAD)
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .network(CardPayment.Element.CardReversal.Network.VISA)
                            .networkIdentifiers(
                                CardPayment.Element.CardReversal.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .pendingTransactionId("pending_transaction_k1sfetcau2qbvjbzgju4")
                            .reversalAmount(20L)
                            .reversalReason(
                                CardPayment.Element.CardReversal.ReversalReason.REVERSED_BY_CUSTOMER
                            )
                            .terminalId("RCN5VNXS")
                            .type(CardPayment.Element.CardReversal.Type.CARD_REVERSAL)
                            .updatedAuthorizationAmount(80L)
                            .build()
                    )
                    .cardSettlement(
                        CardPayment.Element.CardSettlement.builder()
                            .id("card_settlement_khv5kfeu0vndj291omg6")
                            .amount(100L)
                            .cardAuthorization(null)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .cashback(
                                CardPayment.Element.CardSettlement.Cashback.builder()
                                    .amount("-16699")
                                    .currency(
                                        CardPayment.Element.CardSettlement.Cashback.Currency.CAD
                                    )
                                    .build()
                            )
                            .currency(CardPayment.Element.CardSettlement.Currency.CAD)
                            .interchange(
                                CardPayment.Element.CardSettlement.Interchange.builder()
                                    .amount("0.137465")
                                    .code("271")
                                    .currency(
                                        CardPayment.Element.CardSettlement.Interchange.Currency.CAD
                                    )
                                    .build()
                            )
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantName("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkIdentifiers(
                                CardPayment.Element.CardSettlement.NetworkIdentifiers.builder()
                                    .acquirerBusinessId("69650702")
                                    .acquirerReferenceNumber("83163715445437604865089")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .pendingTransactionId(null)
                            .presentmentAmount(100L)
                            .presentmentCurrency("USD")
                            .purchaseDetails(
                                CardPayment.Element.CardSettlement.PurchaseDetails.builder()
                                    .carRental(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.CarRental
                                            .builder()
                                            .carClassCode("car_class_code")
                                            .checkoutDate(LocalDate.parse("2019-12-27"))
                                            .dailyRentalRateAmount(0L)
                                            .dailyRentalRateCurrency("daily_rental_rate_currency")
                                            .daysRented(0L)
                                            .extraCharges(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .fuelChargesAmount(0L)
                                            .fuelChargesCurrency("fuel_charges_currency")
                                            .insuranceChargesAmount(0L)
                                            .insuranceChargesCurrency("insurance_charges_currency")
                                            .noShowIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .oneWayDropOffChargesAmount(0L)
                                            .oneWayDropOffChargesCurrency(
                                                "one_way_drop_off_charges_currency"
                                            )
                                            .renterName("renter_name")
                                            .weeklyRentalRateAmount(0L)
                                            .weeklyRentalRateCurrency("weekly_rental_rate_currency")
                                            .build()
                                    )
                                    .customerReferenceIdentifier("51201")
                                    .localTaxAmount(null)
                                    .localTaxCurrency("usd")
                                    .lodging(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.Lodging
                                            .builder()
                                            .checkInDate(LocalDate.parse("2023-07-20"))
                                            .dailyRoomRateAmount(1000L)
                                            .dailyRoomRateCurrency("usd")
                                            .extraCharges(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .folioCashAdvancesAmount(0L)
                                            .folioCashAdvancesCurrency("usd")
                                            .foodBeverageChargesAmount(0L)
                                            .foodBeverageChargesCurrency("usd")
                                            .noShowIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .prepaidExpensesAmount(0L)
                                            .prepaidExpensesCurrency("usd")
                                            .roomNights(1L)
                                            .totalRoomTaxAmount(100L)
                                            .totalRoomTaxCurrency("usd")
                                            .totalTaxAmount(100L)
                                            .totalTaxCurrency("usd")
                                            .build()
                                    )
                                    .nationalTaxAmount(null)
                                    .nationalTaxCurrency("usd")
                                    .purchaseIdentifier("10203")
                                    .purchaseIdentifierFormat(
                                        CardPayment.Element.CardSettlement.PurchaseDetails
                                            .PurchaseIdentifierFormat
                                            .FREE_TEXT
                                    )
                                    .travel(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.Travel
                                            .builder()
                                            .ancillary(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .Ancillary
                                                    .builder()
                                                    .connectedTicketDocumentNumber(
                                                        "connected_ticket_document_number"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .passengerNameOrDescription(
                                                        "passenger_name_or_description"
                                                    )
                                                    .addService(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .Service
                                                            .builder()
                                                            .category(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .Category
                                                                    .NONE
                                                            )
                                                            .subCategory("sub_category")
                                                            .build()
                                                    )
                                                    .ticketDocumentNumber("ticket_document_number")
                                                    .build()
                                            )
                                            .computerizedReservationSystem(
                                                "computerized_reservation_system"
                                            )
                                            .creditReasonIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .CreditReasonIndicator
                                                    .NO_CREDIT
                                            )
                                            .departureDate(LocalDate.parse("2019-12-27"))
                                            .originationCityAirportCode(
                                                "origination_city_airport_code"
                                            )
                                            .passengerName("passenger_name")
                                            .restrictedTicketIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .RestrictedTicketIndicator
                                                    .NO_RESTRICTIONS
                                            )
                                            .ticketChangeIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .TicketChangeIndicator
                                                    .NONE
                                            )
                                            .ticketNumber("ticket_number")
                                            .travelAgencyCode("travel_agency_code")
                                            .travelAgencyName("travel_agency_name")
                                            .addTripLeg(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .TripLeg
                                                    .builder()
                                                    .carrierCode("carrier_code")
                                                    .destinationCityAirportCode(
                                                        "destination_city_airport_code"
                                                    )
                                                    .fareBasisCode("fare_basis_code")
                                                    .flightNumber("flight_number")
                                                    .serviceClass("service_class")
                                                    .stopOverCode(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .StopOverCode
                                                            .NONE
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .transactionId("transaction_uyrp7fld2ium70oa7oi")
                            .type(CardPayment.Element.CardSettlement.Type.CARD_SETTLEMENT)
                            .build()
                    )
                    .cardValidation(
                        CardPayment.Element.CardValidation.builder()
                            .id("card_validation_yi4e59jiaz6n9hx8tczv")
                            .actioner(CardPayment.Element.CardValidation.Actioner.USER)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .currency(CardPayment.Element.CardValidation.Currency.CAD)
                            .digitalWalletTokenId(null)
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkDetails(
                                CardPayment.Element.CardValidation.NetworkDetails.builder()
                                    .category(
                                        CardPayment.Element.CardValidation.NetworkDetails.Category
                                            .VISA
                                    )
                                    .visa(
                                        CardPayment.Element.CardValidation.NetworkDetails.Visa
                                            .builder()
                                            .electronicCommerceIndicator(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .ElectronicCommerceIndicator
                                                    .MAIL_PHONE_ORDER
                                            )
                                            .pointOfServiceEntryMode(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .PointOfServiceEntryMode
                                                    .UNKNOWN
                                            )
                                            .standInProcessingReason(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .StandInProcessingReason
                                                    .ISSUER_ERROR
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .networkIdentifiers(
                                CardPayment.Element.CardValidation.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .physicalCardId(null)
                            .realTimeDecisionId(null)
                            .terminalId("RCN5VNXS")
                            .type(CardPayment.Element.CardValidation.Type.CARD_VALIDATION)
                            .verification(
                                CardPayment.Element.CardValidation.Verification.builder()
                                    .cardVerificationCode(
                                        CardPayment.Element.CardValidation.Verification
                                            .CardVerificationCode
                                            .builder()
                                            .result(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardVerificationCode
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .cardholderAddress(
                                        CardPayment.Element.CardValidation.Verification
                                            .CardholderAddress
                                            .builder()
                                            .actualLine1("33 Liberty Street")
                                            .actualPostalCode("94131")
                                            .providedLine1("33 Liberty Street")
                                            .providedPostalCode("94132")
                                            .result(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardholderAddress
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .build()
                    )
                    .category(CardPayment.Element.Category.CARD_AUTHORIZATION)
                    .createdAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                    .other(JsonValue.from(mapOf<String, Any>()))
                    .build(),
                CardPayment.Element.builder()
                    .cardAuthorization(
                        CardPayment.Element.CardAuthorization.builder()
                            .id("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .actioner(CardPayment.Element.CardAuthorization.Actioner.USER)
                            .amount(100L)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .currency(CardPayment.Element.CardAuthorization.Currency.CAD)
                            .digitalWalletTokenId(null)
                            .direction(CardPayment.Element.CardAuthorization.Direction.SETTLEMENT)
                            .expiresAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkDetails(
                                CardPayment.Element.CardAuthorization.NetworkDetails.builder()
                                    .category(
                                        CardPayment.Element.CardAuthorization.NetworkDetails
                                            .Category
                                            .VISA
                                    )
                                    .visa(
                                        CardPayment.Element.CardAuthorization.NetworkDetails.Visa
                                            .builder()
                                            .electronicCommerceIndicator(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .ElectronicCommerceIndicator
                                                    .MAIL_PHONE_ORDER
                                            )
                                            .pointOfServiceEntryMode(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .PointOfServiceEntryMode
                                                    .UNKNOWN
                                            )
                                            .standInProcessingReason(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .StandInProcessingReason
                                                    .ISSUER_ERROR
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .networkIdentifiers(
                                CardPayment.Element.CardAuthorization.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .pendingTransactionId(null)
                            .physicalCardId(null)
                            .presentmentAmount(100L)
                            .presentmentCurrency("USD")
                            .processingCategory(
                                CardPayment.Element.CardAuthorization.ProcessingCategory
                                    .ACCOUNT_FUNDING
                            )
                            .realTimeDecisionId(null)
                            .terminalId("RCN5VNXS")
                            .type(CardPayment.Element.CardAuthorization.Type.CARD_AUTHORIZATION)
                            .verification(
                                CardPayment.Element.CardAuthorization.Verification.builder()
                                    .cardVerificationCode(
                                        CardPayment.Element.CardAuthorization.Verification
                                            .CardVerificationCode
                                            .builder()
                                            .result(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardVerificationCode
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .cardholderAddress(
                                        CardPayment.Element.CardAuthorization.Verification
                                            .CardholderAddress
                                            .builder()
                                            .actualLine1("33 Liberty Street")
                                            .actualPostalCode("94131")
                                            .providedLine1("33 Liberty Street")
                                            .providedPostalCode("94132")
                                            .result(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardholderAddress
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .build()
                    )
                    .cardAuthorizationExpiration(
                        CardPayment.Element.CardAuthorizationExpiration.builder()
                            .id("card_authorization_expiration_9xxbjtmixs8sfluzux2e")
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardAuthorizationExpiration.Currency.CAD)
                            .expiredAmount(20L)
                            .network(CardPayment.Element.CardAuthorizationExpiration.Network.VISA)
                            .type(
                                CardPayment.Element.CardAuthorizationExpiration.Type
                                    .CARD_AUTHORIZATION_EXPIRATION
                            )
                            .build()
                    )
                    .cardDecline(
                        CardPayment.Element.CardDecline.builder()
                            .id("card_decline_bx3o8zd7glq8yvtwg25v")
                            .actioner(CardPayment.Element.CardDecline.Actioner.USER)
                            .amount(-1000L)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .currency(CardPayment.Element.CardDecline.Currency.CAD)
                            .declinedTransactionId("declined_transaction_17jbn0yyhvkt4v4ooym8")
                            .digitalWalletTokenId(null)
                            .direction(CardPayment.Element.CardDecline.Direction.SETTLEMENT)
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState(null)
                            .networkDetails(
                                CardPayment.Element.CardDecline.NetworkDetails.builder()
                                    .category(
                                        CardPayment.Element.CardDecline.NetworkDetails.Category.VISA
                                    )
                                    .visa(
                                        CardPayment.Element.CardDecline.NetworkDetails.Visa
                                            .builder()
                                            .electronicCommerceIndicator(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .ElectronicCommerceIndicator
                                                    .MAIL_PHONE_ORDER
                                            )
                                            .pointOfServiceEntryMode(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .PointOfServiceEntryMode
                                                    .UNKNOWN
                                            )
                                            .standInProcessingReason(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .StandInProcessingReason
                                                    .ISSUER_ERROR
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .networkIdentifiers(
                                CardPayment.Element.CardDecline.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .physicalCardId(null)
                            .presentmentAmount(-1000L)
                            .presentmentCurrency("USD")
                            .processingCategory(
                                CardPayment.Element.CardDecline.ProcessingCategory.ACCOUNT_FUNDING
                            )
                            .realTimeDecisionId(null)
                            .realTimeDecisionReason(
                                CardPayment.Element.CardDecline.RealTimeDecisionReason
                                    .INSUFFICIENT_FUNDS
                            )
                            .reason(CardPayment.Element.CardDecline.Reason.CARD_NOT_ACTIVE)
                            .terminalId("RCN5VNXS")
                            .verification(
                                CardPayment.Element.CardDecline.Verification.builder()
                                    .cardVerificationCode(
                                        CardPayment.Element.CardDecline.Verification
                                            .CardVerificationCode
                                            .builder()
                                            .result(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardVerificationCode
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .cardholderAddress(
                                        CardPayment.Element.CardDecline.Verification
                                            .CardholderAddress
                                            .builder()
                                            .actualLine1("33 Liberty Street")
                                            .actualPostalCode("94131")
                                            .providedLine1("33 Liberty Street")
                                            .providedPostalCode("94132")
                                            .result(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardholderAddress
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .build()
                    )
                    .cardFuelConfirmation(
                        CardPayment.Element.CardFuelConfirmation.builder()
                            .id("card_fuel_confirmation_wuy91qate4judq2la80a")
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardFuelConfirmation.Currency.CAD)
                            .network(CardPayment.Element.CardFuelConfirmation.Network.VISA)
                            .networkIdentifiers(
                                CardPayment.Element.CardFuelConfirmation.NetworkIdentifiers
                                    .builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .pendingTransactionId("pending_transaction_k1sfetcau2qbvjbzgju4")
                            .type(
                                CardPayment.Element.CardFuelConfirmation.Type.CARD_FUEL_CONFIRMATION
                            )
                            .updatedAuthorizationAmount(120L)
                            .build()
                    )
                    .cardIncrement(
                        CardPayment.Element.CardIncrement.builder()
                            .id("card_increment_6ztayc58j1od0rpebp3e")
                            .actioner(CardPayment.Element.CardIncrement.Actioner.USER)
                            .amount(20L)
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardIncrement.Currency.CAD)
                            .network(CardPayment.Element.CardIncrement.Network.VISA)
                            .networkIdentifiers(
                                CardPayment.Element.CardIncrement.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .pendingTransactionId("pending_transaction_k1sfetcau2qbvjbzgju4")
                            .realTimeDecisionId(null)
                            .type(CardPayment.Element.CardIncrement.Type.CARD_INCREMENT)
                            .updatedAuthorizationAmount(120L)
                            .build()
                    )
                    .cardRefund(
                        CardPayment.Element.CardRefund.builder()
                            .id("card_refund_imgc2xwplh6t4r3gn16e")
                            .amount(100L)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .cashback(
                                CardPayment.Element.CardRefund.Cashback.builder()
                                    .amount("-16699")
                                    .currency(CardPayment.Element.CardRefund.Cashback.Currency.CAD)
                                    .build()
                            )
                            .currency(CardPayment.Element.CardRefund.Currency.CAD)
                            .interchange(
                                CardPayment.Element.CardRefund.Interchange.builder()
                                    .amount("0.137465")
                                    .code("271")
                                    .currency(
                                        CardPayment.Element.CardRefund.Interchange.Currency.CAD
                                    )
                                    .build()
                            )
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantName("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkIdentifiers(
                                CardPayment.Element.CardRefund.NetworkIdentifiers.builder()
                                    .acquirerBusinessId("69650702")
                                    .acquirerReferenceNumber("83163715445437604865089")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .presentmentAmount(100L)
                            .presentmentCurrency("USD")
                            .purchaseDetails(
                                CardPayment.Element.CardRefund.PurchaseDetails.builder()
                                    .carRental(
                                        CardPayment.Element.CardRefund.PurchaseDetails.CarRental
                                            .builder()
                                            .carClassCode("car_class_code")
                                            .checkoutDate(LocalDate.parse("2019-12-27"))
                                            .dailyRentalRateAmount(0L)
                                            .dailyRentalRateCurrency("daily_rental_rate_currency")
                                            .daysRented(0L)
                                            .extraCharges(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .fuelChargesAmount(0L)
                                            .fuelChargesCurrency("fuel_charges_currency")
                                            .insuranceChargesAmount(0L)
                                            .insuranceChargesCurrency("insurance_charges_currency")
                                            .noShowIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .oneWayDropOffChargesAmount(0L)
                                            .oneWayDropOffChargesCurrency(
                                                "one_way_drop_off_charges_currency"
                                            )
                                            .renterName("renter_name")
                                            .weeklyRentalRateAmount(0L)
                                            .weeklyRentalRateCurrency("weekly_rental_rate_currency")
                                            .build()
                                    )
                                    .customerReferenceIdentifier("51201")
                                    .localTaxAmount(null)
                                    .localTaxCurrency("usd")
                                    .lodging(
                                        CardPayment.Element.CardRefund.PurchaseDetails.Lodging
                                            .builder()
                                            .checkInDate(LocalDate.parse("2023-07-20"))
                                            .dailyRoomRateAmount(1000L)
                                            .dailyRoomRateCurrency("usd")
                                            .extraCharges(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .folioCashAdvancesAmount(0L)
                                            .folioCashAdvancesCurrency("usd")
                                            .foodBeverageChargesAmount(0L)
                                            .foodBeverageChargesCurrency("usd")
                                            .noShowIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .prepaidExpensesAmount(0L)
                                            .prepaidExpensesCurrency("usd")
                                            .roomNights(1L)
                                            .totalRoomTaxAmount(100L)
                                            .totalRoomTaxCurrency("usd")
                                            .totalTaxAmount(100L)
                                            .totalTaxCurrency("usd")
                                            .build()
                                    )
                                    .nationalTaxAmount(null)
                                    .nationalTaxCurrency("usd")
                                    .purchaseIdentifier("10203")
                                    .purchaseIdentifierFormat(
                                        CardPayment.Element.CardRefund.PurchaseDetails
                                            .PurchaseIdentifierFormat
                                            .FREE_TEXT
                                    )
                                    .travel(
                                        CardPayment.Element.CardRefund.PurchaseDetails.Travel
                                            .builder()
                                            .ancillary(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .Ancillary
                                                    .builder()
                                                    .connectedTicketDocumentNumber(
                                                        "connected_ticket_document_number"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .passengerNameOrDescription(
                                                        "passenger_name_or_description"
                                                    )
                                                    .addService(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .Service
                                                            .builder()
                                                            .category(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .Category
                                                                    .NONE
                                                            )
                                                            .subCategory("sub_category")
                                                            .build()
                                                    )
                                                    .ticketDocumentNumber("ticket_document_number")
                                                    .build()
                                            )
                                            .computerizedReservationSystem(
                                                "computerized_reservation_system"
                                            )
                                            .creditReasonIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .CreditReasonIndicator
                                                    .NO_CREDIT
                                            )
                                            .departureDate(LocalDate.parse("2019-12-27"))
                                            .originationCityAirportCode(
                                                "origination_city_airport_code"
                                            )
                                            .passengerName("passenger_name")
                                            .restrictedTicketIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .RestrictedTicketIndicator
                                                    .NO_RESTRICTIONS
                                            )
                                            .ticketChangeIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .TicketChangeIndicator
                                                    .NONE
                                            )
                                            .ticketNumber("ticket_number")
                                            .travelAgencyCode("travel_agency_code")
                                            .travelAgencyName("travel_agency_name")
                                            .addTripLeg(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .TripLeg
                                                    .builder()
                                                    .carrierCode("carrier_code")
                                                    .destinationCityAirportCode(
                                                        "destination_city_airport_code"
                                                    )
                                                    .fareBasisCode("fare_basis_code")
                                                    .flightNumber("flight_number")
                                                    .serviceClass("service_class")
                                                    .stopOverCode(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .StopOverCode
                                                            .NONE
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .transactionId("transaction_uyrp7fld2ium70oa7oi")
                            .type(CardPayment.Element.CardRefund.Type.CARD_REFUND)
                            .build()
                    )
                    .cardReversal(
                        CardPayment.Element.CardReversal.builder()
                            .id("card_reversal_8vr9qy60cgf5d0slpb68")
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardReversal.Currency.CAD)
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .network(CardPayment.Element.CardReversal.Network.VISA)
                            .networkIdentifiers(
                                CardPayment.Element.CardReversal.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .pendingTransactionId("pending_transaction_k1sfetcau2qbvjbzgju4")
                            .reversalAmount(20L)
                            .reversalReason(
                                CardPayment.Element.CardReversal.ReversalReason.REVERSED_BY_CUSTOMER
                            )
                            .terminalId("RCN5VNXS")
                            .type(CardPayment.Element.CardReversal.Type.CARD_REVERSAL)
                            .updatedAuthorizationAmount(80L)
                            .build()
                    )
                    .cardSettlement(
                        CardPayment.Element.CardSettlement.builder()
                            .id("card_settlement_khv5kfeu0vndj291omg6")
                            .amount(100L)
                            .cardAuthorization(null)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .cashback(
                                CardPayment.Element.CardSettlement.Cashback.builder()
                                    .amount("-16699")
                                    .currency(
                                        CardPayment.Element.CardSettlement.Cashback.Currency.CAD
                                    )
                                    .build()
                            )
                            .currency(CardPayment.Element.CardSettlement.Currency.CAD)
                            .interchange(
                                CardPayment.Element.CardSettlement.Interchange.builder()
                                    .amount("0.137465")
                                    .code("271")
                                    .currency(
                                        CardPayment.Element.CardSettlement.Interchange.Currency.CAD
                                    )
                                    .build()
                            )
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantName("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkIdentifiers(
                                CardPayment.Element.CardSettlement.NetworkIdentifiers.builder()
                                    .acquirerBusinessId("69650702")
                                    .acquirerReferenceNumber("83163715445437604865089")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .pendingTransactionId(null)
                            .presentmentAmount(100L)
                            .presentmentCurrency("USD")
                            .purchaseDetails(
                                CardPayment.Element.CardSettlement.PurchaseDetails.builder()
                                    .carRental(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.CarRental
                                            .builder()
                                            .carClassCode("car_class_code")
                                            .checkoutDate(LocalDate.parse("2019-12-27"))
                                            .dailyRentalRateAmount(0L)
                                            .dailyRentalRateCurrency("daily_rental_rate_currency")
                                            .daysRented(0L)
                                            .extraCharges(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .fuelChargesAmount(0L)
                                            .fuelChargesCurrency("fuel_charges_currency")
                                            .insuranceChargesAmount(0L)
                                            .insuranceChargesCurrency("insurance_charges_currency")
                                            .noShowIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .oneWayDropOffChargesAmount(0L)
                                            .oneWayDropOffChargesCurrency(
                                                "one_way_drop_off_charges_currency"
                                            )
                                            .renterName("renter_name")
                                            .weeklyRentalRateAmount(0L)
                                            .weeklyRentalRateCurrency("weekly_rental_rate_currency")
                                            .build()
                                    )
                                    .customerReferenceIdentifier("51201")
                                    .localTaxAmount(null)
                                    .localTaxCurrency("usd")
                                    .lodging(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.Lodging
                                            .builder()
                                            .checkInDate(LocalDate.parse("2023-07-20"))
                                            .dailyRoomRateAmount(1000L)
                                            .dailyRoomRateCurrency("usd")
                                            .extraCharges(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .folioCashAdvancesAmount(0L)
                                            .folioCashAdvancesCurrency("usd")
                                            .foodBeverageChargesAmount(0L)
                                            .foodBeverageChargesCurrency("usd")
                                            .noShowIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .prepaidExpensesAmount(0L)
                                            .prepaidExpensesCurrency("usd")
                                            .roomNights(1L)
                                            .totalRoomTaxAmount(100L)
                                            .totalRoomTaxCurrency("usd")
                                            .totalTaxAmount(100L)
                                            .totalTaxCurrency("usd")
                                            .build()
                                    )
                                    .nationalTaxAmount(null)
                                    .nationalTaxCurrency("usd")
                                    .purchaseIdentifier("10203")
                                    .purchaseIdentifierFormat(
                                        CardPayment.Element.CardSettlement.PurchaseDetails
                                            .PurchaseIdentifierFormat
                                            .FREE_TEXT
                                    )
                                    .travel(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.Travel
                                            .builder()
                                            .ancillary(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .Ancillary
                                                    .builder()
                                                    .connectedTicketDocumentNumber(
                                                        "connected_ticket_document_number"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .passengerNameOrDescription(
                                                        "passenger_name_or_description"
                                                    )
                                                    .addService(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .Service
                                                            .builder()
                                                            .category(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .Category
                                                                    .NONE
                                                            )
                                                            .subCategory("sub_category")
                                                            .build()
                                                    )
                                                    .ticketDocumentNumber("ticket_document_number")
                                                    .build()
                                            )
                                            .computerizedReservationSystem(
                                                "computerized_reservation_system"
                                            )
                                            .creditReasonIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .CreditReasonIndicator
                                                    .NO_CREDIT
                                            )
                                            .departureDate(LocalDate.parse("2019-12-27"))
                                            .originationCityAirportCode(
                                                "origination_city_airport_code"
                                            )
                                            .passengerName("passenger_name")
                                            .restrictedTicketIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .RestrictedTicketIndicator
                                                    .NO_RESTRICTIONS
                                            )
                                            .ticketChangeIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .TicketChangeIndicator
                                                    .NONE
                                            )
                                            .ticketNumber("ticket_number")
                                            .travelAgencyCode("travel_agency_code")
                                            .travelAgencyName("travel_agency_name")
                                            .addTripLeg(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .TripLeg
                                                    .builder()
                                                    .carrierCode("carrier_code")
                                                    .destinationCityAirportCode(
                                                        "destination_city_airport_code"
                                                    )
                                                    .fareBasisCode("fare_basis_code")
                                                    .flightNumber("flight_number")
                                                    .serviceClass("service_class")
                                                    .stopOverCode(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .StopOverCode
                                                            .NONE
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .transactionId("transaction_uyrp7fld2ium70oa7oi")
                            .type(CardPayment.Element.CardSettlement.Type.CARD_SETTLEMENT)
                            .build()
                    )
                    .cardValidation(
                        CardPayment.Element.CardValidation.builder()
                            .id("card_validation_yi4e59jiaz6n9hx8tczv")
                            .actioner(CardPayment.Element.CardValidation.Actioner.USER)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .currency(CardPayment.Element.CardValidation.Currency.CAD)
                            .digitalWalletTokenId(null)
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkDetails(
                                CardPayment.Element.CardValidation.NetworkDetails.builder()
                                    .category(
                                        CardPayment.Element.CardValidation.NetworkDetails.Category
                                            .VISA
                                    )
                                    .visa(
                                        CardPayment.Element.CardValidation.NetworkDetails.Visa
                                            .builder()
                                            .electronicCommerceIndicator(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .ElectronicCommerceIndicator
                                                    .MAIL_PHONE_ORDER
                                            )
                                            .pointOfServiceEntryMode(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .PointOfServiceEntryMode
                                                    .UNKNOWN
                                            )
                                            .standInProcessingReason(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .StandInProcessingReason
                                                    .ISSUER_ERROR
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .networkIdentifiers(
                                CardPayment.Element.CardValidation.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .physicalCardId(null)
                            .realTimeDecisionId(null)
                            .terminalId("RCN5VNXS")
                            .type(CardPayment.Element.CardValidation.Type.CARD_VALIDATION)
                            .verification(
                                CardPayment.Element.CardValidation.Verification.builder()
                                    .cardVerificationCode(
                                        CardPayment.Element.CardValidation.Verification
                                            .CardVerificationCode
                                            .builder()
                                            .result(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardVerificationCode
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .cardholderAddress(
                                        CardPayment.Element.CardValidation.Verification
                                            .CardholderAddress
                                            .builder()
                                            .actualLine1("33 Liberty Street")
                                            .actualPostalCode("94131")
                                            .providedLine1("33 Liberty Street")
                                            .providedPostalCode("94132")
                                            .result(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardholderAddress
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .build()
                    )
                    .category(CardPayment.Element.Category.CARD_AUTHORIZATION)
                    .createdAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                    .other(JsonValue.from(mapOf<String, Any>()))
                    .build(),
                CardPayment.Element.builder()
                    .cardAuthorization(
                        CardPayment.Element.CardAuthorization.builder()
                            .id("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .actioner(CardPayment.Element.CardAuthorization.Actioner.USER)
                            .amount(100L)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .currency(CardPayment.Element.CardAuthorization.Currency.CAD)
                            .digitalWalletTokenId(null)
                            .direction(CardPayment.Element.CardAuthorization.Direction.SETTLEMENT)
                            .expiresAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkDetails(
                                CardPayment.Element.CardAuthorization.NetworkDetails.builder()
                                    .category(
                                        CardPayment.Element.CardAuthorization.NetworkDetails
                                            .Category
                                            .VISA
                                    )
                                    .visa(
                                        CardPayment.Element.CardAuthorization.NetworkDetails.Visa
                                            .builder()
                                            .electronicCommerceIndicator(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .ElectronicCommerceIndicator
                                                    .MAIL_PHONE_ORDER
                                            )
                                            .pointOfServiceEntryMode(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .PointOfServiceEntryMode
                                                    .UNKNOWN
                                            )
                                            .standInProcessingReason(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .StandInProcessingReason
                                                    .ISSUER_ERROR
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .networkIdentifiers(
                                CardPayment.Element.CardAuthorization.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .pendingTransactionId(null)
                            .physicalCardId(null)
                            .presentmentAmount(100L)
                            .presentmentCurrency("USD")
                            .processingCategory(
                                CardPayment.Element.CardAuthorization.ProcessingCategory
                                    .ACCOUNT_FUNDING
                            )
                            .realTimeDecisionId(null)
                            .terminalId("RCN5VNXS")
                            .type(CardPayment.Element.CardAuthorization.Type.CARD_AUTHORIZATION)
                            .verification(
                                CardPayment.Element.CardAuthorization.Verification.builder()
                                    .cardVerificationCode(
                                        CardPayment.Element.CardAuthorization.Verification
                                            .CardVerificationCode
                                            .builder()
                                            .result(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardVerificationCode
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .cardholderAddress(
                                        CardPayment.Element.CardAuthorization.Verification
                                            .CardholderAddress
                                            .builder()
                                            .actualLine1("33 Liberty Street")
                                            .actualPostalCode("94131")
                                            .providedLine1("33 Liberty Street")
                                            .providedPostalCode("94132")
                                            .result(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardholderAddress
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .build()
                    )
                    .cardAuthorizationExpiration(
                        CardPayment.Element.CardAuthorizationExpiration.builder()
                            .id("card_authorization_expiration_9xxbjtmixs8sfluzux2e")
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardAuthorizationExpiration.Currency.CAD)
                            .expiredAmount(20L)
                            .network(CardPayment.Element.CardAuthorizationExpiration.Network.VISA)
                            .type(
                                CardPayment.Element.CardAuthorizationExpiration.Type
                                    .CARD_AUTHORIZATION_EXPIRATION
                            )
                            .build()
                    )
                    .cardDecline(
                        CardPayment.Element.CardDecline.builder()
                            .id("card_decline_bx3o8zd7glq8yvtwg25v")
                            .actioner(CardPayment.Element.CardDecline.Actioner.USER)
                            .amount(-1000L)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .currency(CardPayment.Element.CardDecline.Currency.CAD)
                            .declinedTransactionId("declined_transaction_17jbn0yyhvkt4v4ooym8")
                            .digitalWalletTokenId(null)
                            .direction(CardPayment.Element.CardDecline.Direction.SETTLEMENT)
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState(null)
                            .networkDetails(
                                CardPayment.Element.CardDecline.NetworkDetails.builder()
                                    .category(
                                        CardPayment.Element.CardDecline.NetworkDetails.Category.VISA
                                    )
                                    .visa(
                                        CardPayment.Element.CardDecline.NetworkDetails.Visa
                                            .builder()
                                            .electronicCommerceIndicator(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .ElectronicCommerceIndicator
                                                    .MAIL_PHONE_ORDER
                                            )
                                            .pointOfServiceEntryMode(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .PointOfServiceEntryMode
                                                    .UNKNOWN
                                            )
                                            .standInProcessingReason(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .StandInProcessingReason
                                                    .ISSUER_ERROR
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .networkIdentifiers(
                                CardPayment.Element.CardDecline.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .physicalCardId(null)
                            .presentmentAmount(-1000L)
                            .presentmentCurrency("USD")
                            .processingCategory(
                                CardPayment.Element.CardDecline.ProcessingCategory.ACCOUNT_FUNDING
                            )
                            .realTimeDecisionId(null)
                            .realTimeDecisionReason(
                                CardPayment.Element.CardDecline.RealTimeDecisionReason
                                    .INSUFFICIENT_FUNDS
                            )
                            .reason(CardPayment.Element.CardDecline.Reason.CARD_NOT_ACTIVE)
                            .terminalId("RCN5VNXS")
                            .verification(
                                CardPayment.Element.CardDecline.Verification.builder()
                                    .cardVerificationCode(
                                        CardPayment.Element.CardDecline.Verification
                                            .CardVerificationCode
                                            .builder()
                                            .result(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardVerificationCode
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .cardholderAddress(
                                        CardPayment.Element.CardDecline.Verification
                                            .CardholderAddress
                                            .builder()
                                            .actualLine1("33 Liberty Street")
                                            .actualPostalCode("94131")
                                            .providedLine1("33 Liberty Street")
                                            .providedPostalCode("94132")
                                            .result(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardholderAddress
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .build()
                    )
                    .cardFuelConfirmation(
                        CardPayment.Element.CardFuelConfirmation.builder()
                            .id("card_fuel_confirmation_wuy91qate4judq2la80a")
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardFuelConfirmation.Currency.CAD)
                            .network(CardPayment.Element.CardFuelConfirmation.Network.VISA)
                            .networkIdentifiers(
                                CardPayment.Element.CardFuelConfirmation.NetworkIdentifiers
                                    .builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .pendingTransactionId("pending_transaction_k1sfetcau2qbvjbzgju4")
                            .type(
                                CardPayment.Element.CardFuelConfirmation.Type.CARD_FUEL_CONFIRMATION
                            )
                            .updatedAuthorizationAmount(120L)
                            .build()
                    )
                    .cardIncrement(
                        CardPayment.Element.CardIncrement.builder()
                            .id("card_increment_6ztayc58j1od0rpebp3e")
                            .actioner(CardPayment.Element.CardIncrement.Actioner.USER)
                            .amount(20L)
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardIncrement.Currency.CAD)
                            .network(CardPayment.Element.CardIncrement.Network.VISA)
                            .networkIdentifiers(
                                CardPayment.Element.CardIncrement.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .pendingTransactionId("pending_transaction_k1sfetcau2qbvjbzgju4")
                            .realTimeDecisionId(null)
                            .type(CardPayment.Element.CardIncrement.Type.CARD_INCREMENT)
                            .updatedAuthorizationAmount(120L)
                            .build()
                    )
                    .cardRefund(
                        CardPayment.Element.CardRefund.builder()
                            .id("card_refund_imgc2xwplh6t4r3gn16e")
                            .amount(100L)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .cashback(
                                CardPayment.Element.CardRefund.Cashback.builder()
                                    .amount("-16699")
                                    .currency(CardPayment.Element.CardRefund.Cashback.Currency.CAD)
                                    .build()
                            )
                            .currency(CardPayment.Element.CardRefund.Currency.CAD)
                            .interchange(
                                CardPayment.Element.CardRefund.Interchange.builder()
                                    .amount("0.137465")
                                    .code("271")
                                    .currency(
                                        CardPayment.Element.CardRefund.Interchange.Currency.CAD
                                    )
                                    .build()
                            )
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantName("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkIdentifiers(
                                CardPayment.Element.CardRefund.NetworkIdentifiers.builder()
                                    .acquirerBusinessId("69650702")
                                    .acquirerReferenceNumber("83163715445437604865089")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .presentmentAmount(100L)
                            .presentmentCurrency("USD")
                            .purchaseDetails(
                                CardPayment.Element.CardRefund.PurchaseDetails.builder()
                                    .carRental(
                                        CardPayment.Element.CardRefund.PurchaseDetails.CarRental
                                            .builder()
                                            .carClassCode("car_class_code")
                                            .checkoutDate(LocalDate.parse("2019-12-27"))
                                            .dailyRentalRateAmount(0L)
                                            .dailyRentalRateCurrency("daily_rental_rate_currency")
                                            .daysRented(0L)
                                            .extraCharges(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .fuelChargesAmount(0L)
                                            .fuelChargesCurrency("fuel_charges_currency")
                                            .insuranceChargesAmount(0L)
                                            .insuranceChargesCurrency("insurance_charges_currency")
                                            .noShowIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .oneWayDropOffChargesAmount(0L)
                                            .oneWayDropOffChargesCurrency(
                                                "one_way_drop_off_charges_currency"
                                            )
                                            .renterName("renter_name")
                                            .weeklyRentalRateAmount(0L)
                                            .weeklyRentalRateCurrency("weekly_rental_rate_currency")
                                            .build()
                                    )
                                    .customerReferenceIdentifier("51201")
                                    .localTaxAmount(null)
                                    .localTaxCurrency("usd")
                                    .lodging(
                                        CardPayment.Element.CardRefund.PurchaseDetails.Lodging
                                            .builder()
                                            .checkInDate(LocalDate.parse("2023-07-20"))
                                            .dailyRoomRateAmount(1000L)
                                            .dailyRoomRateCurrency("usd")
                                            .extraCharges(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .folioCashAdvancesAmount(0L)
                                            .folioCashAdvancesCurrency("usd")
                                            .foodBeverageChargesAmount(0L)
                                            .foodBeverageChargesCurrency("usd")
                                            .noShowIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .prepaidExpensesAmount(0L)
                                            .prepaidExpensesCurrency("usd")
                                            .roomNights(1L)
                                            .totalRoomTaxAmount(100L)
                                            .totalRoomTaxCurrency("usd")
                                            .totalTaxAmount(100L)
                                            .totalTaxCurrency("usd")
                                            .build()
                                    )
                                    .nationalTaxAmount(null)
                                    .nationalTaxCurrency("usd")
                                    .purchaseIdentifier("10203")
                                    .purchaseIdentifierFormat(
                                        CardPayment.Element.CardRefund.PurchaseDetails
                                            .PurchaseIdentifierFormat
                                            .FREE_TEXT
                                    )
                                    .travel(
                                        CardPayment.Element.CardRefund.PurchaseDetails.Travel
                                            .builder()
                                            .ancillary(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .Ancillary
                                                    .builder()
                                                    .connectedTicketDocumentNumber(
                                                        "connected_ticket_document_number"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .passengerNameOrDescription(
                                                        "passenger_name_or_description"
                                                    )
                                                    .addService(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .Service
                                                            .builder()
                                                            .category(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .Category
                                                                    .NONE
                                                            )
                                                            .subCategory("sub_category")
                                                            .build()
                                                    )
                                                    .ticketDocumentNumber("ticket_document_number")
                                                    .build()
                                            )
                                            .computerizedReservationSystem(
                                                "computerized_reservation_system"
                                            )
                                            .creditReasonIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .CreditReasonIndicator
                                                    .NO_CREDIT
                                            )
                                            .departureDate(LocalDate.parse("2019-12-27"))
                                            .originationCityAirportCode(
                                                "origination_city_airport_code"
                                            )
                                            .passengerName("passenger_name")
                                            .restrictedTicketIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .RestrictedTicketIndicator
                                                    .NO_RESTRICTIONS
                                            )
                                            .ticketChangeIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .TicketChangeIndicator
                                                    .NONE
                                            )
                                            .ticketNumber("ticket_number")
                                            .travelAgencyCode("travel_agency_code")
                                            .travelAgencyName("travel_agency_name")
                                            .addTripLeg(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .TripLeg
                                                    .builder()
                                                    .carrierCode("carrier_code")
                                                    .destinationCityAirportCode(
                                                        "destination_city_airport_code"
                                                    )
                                                    .fareBasisCode("fare_basis_code")
                                                    .flightNumber("flight_number")
                                                    .serviceClass("service_class")
                                                    .stopOverCode(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .StopOverCode
                                                            .NONE
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .transactionId("transaction_uyrp7fld2ium70oa7oi")
                            .type(CardPayment.Element.CardRefund.Type.CARD_REFUND)
                            .build()
                    )
                    .cardReversal(
                        CardPayment.Element.CardReversal.builder()
                            .id("card_reversal_8vr9qy60cgf5d0slpb68")
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardReversal.Currency.CAD)
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .network(CardPayment.Element.CardReversal.Network.VISA)
                            .networkIdentifiers(
                                CardPayment.Element.CardReversal.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .pendingTransactionId("pending_transaction_k1sfetcau2qbvjbzgju4")
                            .reversalAmount(20L)
                            .reversalReason(
                                CardPayment.Element.CardReversal.ReversalReason.REVERSED_BY_CUSTOMER
                            )
                            .terminalId("RCN5VNXS")
                            .type(CardPayment.Element.CardReversal.Type.CARD_REVERSAL)
                            .updatedAuthorizationAmount(80L)
                            .build()
                    )
                    .cardSettlement(
                        CardPayment.Element.CardSettlement.builder()
                            .id("card_settlement_khv5kfeu0vndj291omg6")
                            .amount(100L)
                            .cardAuthorization(null)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .cashback(
                                CardPayment.Element.CardSettlement.Cashback.builder()
                                    .amount("-16699")
                                    .currency(
                                        CardPayment.Element.CardSettlement.Cashback.Currency.CAD
                                    )
                                    .build()
                            )
                            .currency(CardPayment.Element.CardSettlement.Currency.CAD)
                            .interchange(
                                CardPayment.Element.CardSettlement.Interchange.builder()
                                    .amount("0.137465")
                                    .code("271")
                                    .currency(
                                        CardPayment.Element.CardSettlement.Interchange.Currency.CAD
                                    )
                                    .build()
                            )
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantName("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkIdentifiers(
                                CardPayment.Element.CardSettlement.NetworkIdentifiers.builder()
                                    .acquirerBusinessId("69650702")
                                    .acquirerReferenceNumber("83163715445437604865089")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .pendingTransactionId(null)
                            .presentmentAmount(100L)
                            .presentmentCurrency("USD")
                            .purchaseDetails(
                                CardPayment.Element.CardSettlement.PurchaseDetails.builder()
                                    .carRental(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.CarRental
                                            .builder()
                                            .carClassCode("car_class_code")
                                            .checkoutDate(LocalDate.parse("2019-12-27"))
                                            .dailyRentalRateAmount(0L)
                                            .dailyRentalRateCurrency("daily_rental_rate_currency")
                                            .daysRented(0L)
                                            .extraCharges(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .fuelChargesAmount(0L)
                                            .fuelChargesCurrency("fuel_charges_currency")
                                            .insuranceChargesAmount(0L)
                                            .insuranceChargesCurrency("insurance_charges_currency")
                                            .noShowIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .oneWayDropOffChargesAmount(0L)
                                            .oneWayDropOffChargesCurrency(
                                                "one_way_drop_off_charges_currency"
                                            )
                                            .renterName("renter_name")
                                            .weeklyRentalRateAmount(0L)
                                            .weeklyRentalRateCurrency("weekly_rental_rate_currency")
                                            .build()
                                    )
                                    .customerReferenceIdentifier("51201")
                                    .localTaxAmount(null)
                                    .localTaxCurrency("usd")
                                    .lodging(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.Lodging
                                            .builder()
                                            .checkInDate(LocalDate.parse("2023-07-20"))
                                            .dailyRoomRateAmount(1000L)
                                            .dailyRoomRateCurrency("usd")
                                            .extraCharges(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .folioCashAdvancesAmount(0L)
                                            .folioCashAdvancesCurrency("usd")
                                            .foodBeverageChargesAmount(0L)
                                            .foodBeverageChargesCurrency("usd")
                                            .noShowIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .prepaidExpensesAmount(0L)
                                            .prepaidExpensesCurrency("usd")
                                            .roomNights(1L)
                                            .totalRoomTaxAmount(100L)
                                            .totalRoomTaxCurrency("usd")
                                            .totalTaxAmount(100L)
                                            .totalTaxCurrency("usd")
                                            .build()
                                    )
                                    .nationalTaxAmount(null)
                                    .nationalTaxCurrency("usd")
                                    .purchaseIdentifier("10203")
                                    .purchaseIdentifierFormat(
                                        CardPayment.Element.CardSettlement.PurchaseDetails
                                            .PurchaseIdentifierFormat
                                            .FREE_TEXT
                                    )
                                    .travel(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.Travel
                                            .builder()
                                            .ancillary(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .Ancillary
                                                    .builder()
                                                    .connectedTicketDocumentNumber(
                                                        "connected_ticket_document_number"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .passengerNameOrDescription(
                                                        "passenger_name_or_description"
                                                    )
                                                    .addService(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .Service
                                                            .builder()
                                                            .category(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .Category
                                                                    .NONE
                                                            )
                                                            .subCategory("sub_category")
                                                            .build()
                                                    )
                                                    .ticketDocumentNumber("ticket_document_number")
                                                    .build()
                                            )
                                            .computerizedReservationSystem(
                                                "computerized_reservation_system"
                                            )
                                            .creditReasonIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .CreditReasonIndicator
                                                    .NO_CREDIT
                                            )
                                            .departureDate(LocalDate.parse("2019-12-27"))
                                            .originationCityAirportCode(
                                                "origination_city_airport_code"
                                            )
                                            .passengerName("passenger_name")
                                            .restrictedTicketIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .RestrictedTicketIndicator
                                                    .NO_RESTRICTIONS
                                            )
                                            .ticketChangeIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .TicketChangeIndicator
                                                    .NONE
                                            )
                                            .ticketNumber("ticket_number")
                                            .travelAgencyCode("travel_agency_code")
                                            .travelAgencyName("travel_agency_name")
                                            .addTripLeg(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .TripLeg
                                                    .builder()
                                                    .carrierCode("carrier_code")
                                                    .destinationCityAirportCode(
                                                        "destination_city_airport_code"
                                                    )
                                                    .fareBasisCode("fare_basis_code")
                                                    .flightNumber("flight_number")
                                                    .serviceClass("service_class")
                                                    .stopOverCode(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .StopOverCode
                                                            .NONE
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .transactionId("transaction_uyrp7fld2ium70oa7oi")
                            .type(CardPayment.Element.CardSettlement.Type.CARD_SETTLEMENT)
                            .build()
                    )
                    .cardValidation(
                        CardPayment.Element.CardValidation.builder()
                            .id("card_validation_yi4e59jiaz6n9hx8tczv")
                            .actioner(CardPayment.Element.CardValidation.Actioner.USER)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .currency(CardPayment.Element.CardValidation.Currency.CAD)
                            .digitalWalletTokenId(null)
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkDetails(
                                CardPayment.Element.CardValidation.NetworkDetails.builder()
                                    .category(
                                        CardPayment.Element.CardValidation.NetworkDetails.Category
                                            .VISA
                                    )
                                    .visa(
                                        CardPayment.Element.CardValidation.NetworkDetails.Visa
                                            .builder()
                                            .electronicCommerceIndicator(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .ElectronicCommerceIndicator
                                                    .MAIL_PHONE_ORDER
                                            )
                                            .pointOfServiceEntryMode(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .PointOfServiceEntryMode
                                                    .UNKNOWN
                                            )
                                            .standInProcessingReason(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .StandInProcessingReason
                                                    .ISSUER_ERROR
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .networkIdentifiers(
                                CardPayment.Element.CardValidation.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .physicalCardId(null)
                            .realTimeDecisionId(null)
                            .terminalId("RCN5VNXS")
                            .type(CardPayment.Element.CardValidation.Type.CARD_VALIDATION)
                            .verification(
                                CardPayment.Element.CardValidation.Verification.builder()
                                    .cardVerificationCode(
                                        CardPayment.Element.CardValidation.Verification
                                            .CardVerificationCode
                                            .builder()
                                            .result(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardVerificationCode
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .cardholderAddress(
                                        CardPayment.Element.CardValidation.Verification
                                            .CardholderAddress
                                            .builder()
                                            .actualLine1("33 Liberty Street")
                                            .actualPostalCode("94131")
                                            .providedLine1("33 Liberty Street")
                                            .providedPostalCode("94132")
                                            .result(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardholderAddress
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .build()
                    )
                    .category(CardPayment.Element.Category.CARD_AUTHORIZATION)
                    .createdAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                    .other(JsonValue.from(mapOf<String, Any>()))
                    .build(),
                CardPayment.Element.builder()
                    .cardAuthorization(
                        CardPayment.Element.CardAuthorization.builder()
                            .id("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .actioner(CardPayment.Element.CardAuthorization.Actioner.USER)
                            .amount(100L)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .currency(CardPayment.Element.CardAuthorization.Currency.CAD)
                            .digitalWalletTokenId(null)
                            .direction(CardPayment.Element.CardAuthorization.Direction.SETTLEMENT)
                            .expiresAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkDetails(
                                CardPayment.Element.CardAuthorization.NetworkDetails.builder()
                                    .category(
                                        CardPayment.Element.CardAuthorization.NetworkDetails
                                            .Category
                                            .VISA
                                    )
                                    .visa(
                                        CardPayment.Element.CardAuthorization.NetworkDetails.Visa
                                            .builder()
                                            .electronicCommerceIndicator(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .ElectronicCommerceIndicator
                                                    .MAIL_PHONE_ORDER
                                            )
                                            .pointOfServiceEntryMode(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .PointOfServiceEntryMode
                                                    .UNKNOWN
                                            )
                                            .standInProcessingReason(
                                                CardPayment.Element.CardAuthorization.NetworkDetails
                                                    .Visa
                                                    .StandInProcessingReason
                                                    .ISSUER_ERROR
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .networkIdentifiers(
                                CardPayment.Element.CardAuthorization.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .pendingTransactionId(null)
                            .physicalCardId(null)
                            .presentmentAmount(100L)
                            .presentmentCurrency("USD")
                            .processingCategory(
                                CardPayment.Element.CardAuthorization.ProcessingCategory
                                    .ACCOUNT_FUNDING
                            )
                            .realTimeDecisionId(null)
                            .terminalId("RCN5VNXS")
                            .type(CardPayment.Element.CardAuthorization.Type.CARD_AUTHORIZATION)
                            .verification(
                                CardPayment.Element.CardAuthorization.Verification.builder()
                                    .cardVerificationCode(
                                        CardPayment.Element.CardAuthorization.Verification
                                            .CardVerificationCode
                                            .builder()
                                            .result(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardVerificationCode
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .cardholderAddress(
                                        CardPayment.Element.CardAuthorization.Verification
                                            .CardholderAddress
                                            .builder()
                                            .actualLine1("33 Liberty Street")
                                            .actualPostalCode("94131")
                                            .providedLine1("33 Liberty Street")
                                            .providedPostalCode("94132")
                                            .result(
                                                CardPayment.Element.CardAuthorization.Verification
                                                    .CardholderAddress
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .build()
                    )
                    .cardAuthorizationExpiration(
                        CardPayment.Element.CardAuthorizationExpiration.builder()
                            .id("card_authorization_expiration_9xxbjtmixs8sfluzux2e")
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardAuthorizationExpiration.Currency.CAD)
                            .expiredAmount(20L)
                            .network(CardPayment.Element.CardAuthorizationExpiration.Network.VISA)
                            .type(
                                CardPayment.Element.CardAuthorizationExpiration.Type
                                    .CARD_AUTHORIZATION_EXPIRATION
                            )
                            .build()
                    )
                    .cardDecline(
                        CardPayment.Element.CardDecline.builder()
                            .id("card_decline_bx3o8zd7glq8yvtwg25v")
                            .actioner(CardPayment.Element.CardDecline.Actioner.USER)
                            .amount(-1000L)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .currency(CardPayment.Element.CardDecline.Currency.CAD)
                            .declinedTransactionId("declined_transaction_17jbn0yyhvkt4v4ooym8")
                            .digitalWalletTokenId(null)
                            .direction(CardPayment.Element.CardDecline.Direction.SETTLEMENT)
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState(null)
                            .networkDetails(
                                CardPayment.Element.CardDecline.NetworkDetails.builder()
                                    .category(
                                        CardPayment.Element.CardDecline.NetworkDetails.Category.VISA
                                    )
                                    .visa(
                                        CardPayment.Element.CardDecline.NetworkDetails.Visa
                                            .builder()
                                            .electronicCommerceIndicator(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .ElectronicCommerceIndicator
                                                    .MAIL_PHONE_ORDER
                                            )
                                            .pointOfServiceEntryMode(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .PointOfServiceEntryMode
                                                    .UNKNOWN
                                            )
                                            .standInProcessingReason(
                                                CardPayment.Element.CardDecline.NetworkDetails.Visa
                                                    .StandInProcessingReason
                                                    .ISSUER_ERROR
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .networkIdentifiers(
                                CardPayment.Element.CardDecline.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .physicalCardId(null)
                            .presentmentAmount(-1000L)
                            .presentmentCurrency("USD")
                            .processingCategory(
                                CardPayment.Element.CardDecline.ProcessingCategory.ACCOUNT_FUNDING
                            )
                            .realTimeDecisionId(null)
                            .realTimeDecisionReason(
                                CardPayment.Element.CardDecline.RealTimeDecisionReason
                                    .INSUFFICIENT_FUNDS
                            )
                            .reason(CardPayment.Element.CardDecline.Reason.CARD_NOT_ACTIVE)
                            .terminalId("RCN5VNXS")
                            .verification(
                                CardPayment.Element.CardDecline.Verification.builder()
                                    .cardVerificationCode(
                                        CardPayment.Element.CardDecline.Verification
                                            .CardVerificationCode
                                            .builder()
                                            .result(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardVerificationCode
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .cardholderAddress(
                                        CardPayment.Element.CardDecline.Verification
                                            .CardholderAddress
                                            .builder()
                                            .actualLine1("33 Liberty Street")
                                            .actualPostalCode("94131")
                                            .providedLine1("33 Liberty Street")
                                            .providedPostalCode("94132")
                                            .result(
                                                CardPayment.Element.CardDecline.Verification
                                                    .CardholderAddress
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .build()
                    )
                    .cardFuelConfirmation(
                        CardPayment.Element.CardFuelConfirmation.builder()
                            .id("card_fuel_confirmation_wuy91qate4judq2la80a")
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardFuelConfirmation.Currency.CAD)
                            .network(CardPayment.Element.CardFuelConfirmation.Network.VISA)
                            .networkIdentifiers(
                                CardPayment.Element.CardFuelConfirmation.NetworkIdentifiers
                                    .builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .pendingTransactionId("pending_transaction_k1sfetcau2qbvjbzgju4")
                            .type(
                                CardPayment.Element.CardFuelConfirmation.Type.CARD_FUEL_CONFIRMATION
                            )
                            .updatedAuthorizationAmount(120L)
                            .build()
                    )
                    .cardIncrement(
                        CardPayment.Element.CardIncrement.builder()
                            .id("card_increment_6ztayc58j1od0rpebp3e")
                            .actioner(CardPayment.Element.CardIncrement.Actioner.USER)
                            .amount(20L)
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardIncrement.Currency.CAD)
                            .network(CardPayment.Element.CardIncrement.Network.VISA)
                            .networkIdentifiers(
                                CardPayment.Element.CardIncrement.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .pendingTransactionId("pending_transaction_k1sfetcau2qbvjbzgju4")
                            .realTimeDecisionId(null)
                            .type(CardPayment.Element.CardIncrement.Type.CARD_INCREMENT)
                            .updatedAuthorizationAmount(120L)
                            .build()
                    )
                    .cardRefund(
                        CardPayment.Element.CardRefund.builder()
                            .id("card_refund_imgc2xwplh6t4r3gn16e")
                            .amount(100L)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .cashback(
                                CardPayment.Element.CardRefund.Cashback.builder()
                                    .amount("-16699")
                                    .currency(CardPayment.Element.CardRefund.Cashback.Currency.CAD)
                                    .build()
                            )
                            .currency(CardPayment.Element.CardRefund.Currency.CAD)
                            .interchange(
                                CardPayment.Element.CardRefund.Interchange.builder()
                                    .amount("0.137465")
                                    .code("271")
                                    .currency(
                                        CardPayment.Element.CardRefund.Interchange.Currency.CAD
                                    )
                                    .build()
                            )
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantName("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkIdentifiers(
                                CardPayment.Element.CardRefund.NetworkIdentifiers.builder()
                                    .acquirerBusinessId("69650702")
                                    .acquirerReferenceNumber("83163715445437604865089")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .presentmentAmount(100L)
                            .presentmentCurrency("USD")
                            .purchaseDetails(
                                CardPayment.Element.CardRefund.PurchaseDetails.builder()
                                    .carRental(
                                        CardPayment.Element.CardRefund.PurchaseDetails.CarRental
                                            .builder()
                                            .carClassCode("car_class_code")
                                            .checkoutDate(LocalDate.parse("2019-12-27"))
                                            .dailyRentalRateAmount(0L)
                                            .dailyRentalRateCurrency("daily_rental_rate_currency")
                                            .daysRented(0L)
                                            .extraCharges(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .fuelChargesAmount(0L)
                                            .fuelChargesCurrency("fuel_charges_currency")
                                            .insuranceChargesAmount(0L)
                                            .insuranceChargesCurrency("insurance_charges_currency")
                                            .noShowIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .oneWayDropOffChargesAmount(0L)
                                            .oneWayDropOffChargesCurrency(
                                                "one_way_drop_off_charges_currency"
                                            )
                                            .renterName("renter_name")
                                            .weeklyRentalRateAmount(0L)
                                            .weeklyRentalRateCurrency("weekly_rental_rate_currency")
                                            .build()
                                    )
                                    .customerReferenceIdentifier("51201")
                                    .localTaxAmount(null)
                                    .localTaxCurrency("usd")
                                    .lodging(
                                        CardPayment.Element.CardRefund.PurchaseDetails.Lodging
                                            .builder()
                                            .checkInDate(LocalDate.parse("2023-07-20"))
                                            .dailyRoomRateAmount(1000L)
                                            .dailyRoomRateCurrency("usd")
                                            .extraCharges(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .folioCashAdvancesAmount(0L)
                                            .folioCashAdvancesCurrency("usd")
                                            .foodBeverageChargesAmount(0L)
                                            .foodBeverageChargesCurrency("usd")
                                            .noShowIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .prepaidExpensesAmount(0L)
                                            .prepaidExpensesCurrency("usd")
                                            .roomNights(1L)
                                            .totalRoomTaxAmount(100L)
                                            .totalRoomTaxCurrency("usd")
                                            .totalTaxAmount(100L)
                                            .totalTaxCurrency("usd")
                                            .build()
                                    )
                                    .nationalTaxAmount(null)
                                    .nationalTaxCurrency("usd")
                                    .purchaseIdentifier("10203")
                                    .purchaseIdentifierFormat(
                                        CardPayment.Element.CardRefund.PurchaseDetails
                                            .PurchaseIdentifierFormat
                                            .FREE_TEXT
                                    )
                                    .travel(
                                        CardPayment.Element.CardRefund.PurchaseDetails.Travel
                                            .builder()
                                            .ancillary(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .Ancillary
                                                    .builder()
                                                    .connectedTicketDocumentNumber(
                                                        "connected_ticket_document_number"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .passengerNameOrDescription(
                                                        "passenger_name_or_description"
                                                    )
                                                    .addService(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .Service
                                                            .builder()
                                                            .category(
                                                                CardPayment.Element.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .Category
                                                                    .NONE
                                                            )
                                                            .subCategory("sub_category")
                                                            .build()
                                                    )
                                                    .ticketDocumentNumber("ticket_document_number")
                                                    .build()
                                            )
                                            .computerizedReservationSystem(
                                                "computerized_reservation_system"
                                            )
                                            .creditReasonIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .CreditReasonIndicator
                                                    .NO_CREDIT
                                            )
                                            .departureDate(LocalDate.parse("2019-12-27"))
                                            .originationCityAirportCode(
                                                "origination_city_airport_code"
                                            )
                                            .passengerName("passenger_name")
                                            .restrictedTicketIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .RestrictedTicketIndicator
                                                    .NO_RESTRICTIONS
                                            )
                                            .ticketChangeIndicator(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .TicketChangeIndicator
                                                    .NONE
                                            )
                                            .ticketNumber("ticket_number")
                                            .travelAgencyCode("travel_agency_code")
                                            .travelAgencyName("travel_agency_name")
                                            .addTripLeg(
                                                CardPayment.Element.CardRefund.PurchaseDetails
                                                    .Travel
                                                    .TripLeg
                                                    .builder()
                                                    .carrierCode("carrier_code")
                                                    .destinationCityAirportCode(
                                                        "destination_city_airport_code"
                                                    )
                                                    .fareBasisCode("fare_basis_code")
                                                    .flightNumber("flight_number")
                                                    .serviceClass("service_class")
                                                    .stopOverCode(
                                                        CardPayment.Element.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .StopOverCode
                                                            .NONE
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .transactionId("transaction_uyrp7fld2ium70oa7oi")
                            .type(CardPayment.Element.CardRefund.Type.CARD_REFUND)
                            .build()
                    )
                    .cardReversal(
                        CardPayment.Element.CardReversal.builder()
                            .id("card_reversal_8vr9qy60cgf5d0slpb68")
                            .cardAuthorizationId("card_authorization_6iqxap6ivd0fo5eu3i8x")
                            .currency(CardPayment.Element.CardReversal.Currency.CAD)
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .network(CardPayment.Element.CardReversal.Network.VISA)
                            .networkIdentifiers(
                                CardPayment.Element.CardReversal.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .pendingTransactionId("pending_transaction_k1sfetcau2qbvjbzgju4")
                            .reversalAmount(20L)
                            .reversalReason(
                                CardPayment.Element.CardReversal.ReversalReason.REVERSED_BY_CUSTOMER
                            )
                            .terminalId("RCN5VNXS")
                            .type(CardPayment.Element.CardReversal.Type.CARD_REVERSAL)
                            .updatedAuthorizationAmount(80L)
                            .build()
                    )
                    .cardSettlement(
                        CardPayment.Element.CardSettlement.builder()
                            .id("card_settlement_khv5kfeu0vndj291omg6")
                            .amount(100L)
                            .cardAuthorization(null)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .cashback(
                                CardPayment.Element.CardSettlement.Cashback.builder()
                                    .amount("-16699")
                                    .currency(
                                        CardPayment.Element.CardSettlement.Cashback.Currency.CAD
                                    )
                                    .build()
                            )
                            .currency(CardPayment.Element.CardSettlement.Currency.CAD)
                            .interchange(
                                CardPayment.Element.CardSettlement.Interchange.builder()
                                    .amount("0.137465")
                                    .code("271")
                                    .currency(
                                        CardPayment.Element.CardSettlement.Interchange.Currency.CAD
                                    )
                                    .build()
                            )
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantName("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkIdentifiers(
                                CardPayment.Element.CardSettlement.NetworkIdentifiers.builder()
                                    .acquirerBusinessId("69650702")
                                    .acquirerReferenceNumber("83163715445437604865089")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .pendingTransactionId(null)
                            .presentmentAmount(100L)
                            .presentmentCurrency("USD")
                            .purchaseDetails(
                                CardPayment.Element.CardSettlement.PurchaseDetails.builder()
                                    .carRental(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.CarRental
                                            .builder()
                                            .carClassCode("car_class_code")
                                            .checkoutDate(LocalDate.parse("2019-12-27"))
                                            .dailyRentalRateAmount(0L)
                                            .dailyRentalRateCurrency("daily_rental_rate_currency")
                                            .daysRented(0L)
                                            .extraCharges(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .fuelChargesAmount(0L)
                                            .fuelChargesCurrency("fuel_charges_currency")
                                            .insuranceChargesAmount(0L)
                                            .insuranceChargesCurrency("insurance_charges_currency")
                                            .noShowIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .oneWayDropOffChargesAmount(0L)
                                            .oneWayDropOffChargesCurrency(
                                                "one_way_drop_off_charges_currency"
                                            )
                                            .renterName("renter_name")
                                            .weeklyRentalRateAmount(0L)
                                            .weeklyRentalRateCurrency("weekly_rental_rate_currency")
                                            .build()
                                    )
                                    .customerReferenceIdentifier("51201")
                                    .localTaxAmount(null)
                                    .localTaxCurrency("usd")
                                    .lodging(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.Lodging
                                            .builder()
                                            .checkInDate(LocalDate.parse("2023-07-20"))
                                            .dailyRoomRateAmount(1000L)
                                            .dailyRoomRateCurrency("usd")
                                            .extraCharges(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .folioCashAdvancesAmount(0L)
                                            .folioCashAdvancesCurrency("usd")
                                            .foodBeverageChargesAmount(0L)
                                            .foodBeverageChargesCurrency("usd")
                                            .noShowIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .prepaidExpensesAmount(0L)
                                            .prepaidExpensesCurrency("usd")
                                            .roomNights(1L)
                                            .totalRoomTaxAmount(100L)
                                            .totalRoomTaxCurrency("usd")
                                            .totalTaxAmount(100L)
                                            .totalTaxCurrency("usd")
                                            .build()
                                    )
                                    .nationalTaxAmount(null)
                                    .nationalTaxCurrency("usd")
                                    .purchaseIdentifier("10203")
                                    .purchaseIdentifierFormat(
                                        CardPayment.Element.CardSettlement.PurchaseDetails
                                            .PurchaseIdentifierFormat
                                            .FREE_TEXT
                                    )
                                    .travel(
                                        CardPayment.Element.CardSettlement.PurchaseDetails.Travel
                                            .builder()
                                            .ancillary(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .Ancillary
                                                    .builder()
                                                    .connectedTicketDocumentNumber(
                                                        "connected_ticket_document_number"
                                                    )
                                                    .creditReasonIndicator(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .passengerNameOrDescription(
                                                        "passenger_name_or_description"
                                                    )
                                                    .addService(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .Service
                                                            .builder()
                                                            .category(
                                                                CardPayment.Element.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .Category
                                                                    .NONE
                                                            )
                                                            .subCategory("sub_category")
                                                            .build()
                                                    )
                                                    .ticketDocumentNumber("ticket_document_number")
                                                    .build()
                                            )
                                            .computerizedReservationSystem(
                                                "computerized_reservation_system"
                                            )
                                            .creditReasonIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .CreditReasonIndicator
                                                    .NO_CREDIT
                                            )
                                            .departureDate(LocalDate.parse("2019-12-27"))
                                            .originationCityAirportCode(
                                                "origination_city_airport_code"
                                            )
                                            .passengerName("passenger_name")
                                            .restrictedTicketIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .RestrictedTicketIndicator
                                                    .NO_RESTRICTIONS
                                            )
                                            .ticketChangeIndicator(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .TicketChangeIndicator
                                                    .NONE
                                            )
                                            .ticketNumber("ticket_number")
                                            .travelAgencyCode("travel_agency_code")
                                            .travelAgencyName("travel_agency_name")
                                            .addTripLeg(
                                                CardPayment.Element.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .TripLeg
                                                    .builder()
                                                    .carrierCode("carrier_code")
                                                    .destinationCityAirportCode(
                                                        "destination_city_airport_code"
                                                    )
                                                    .fareBasisCode("fare_basis_code")
                                                    .flightNumber("flight_number")
                                                    .serviceClass("service_class")
                                                    .stopOverCode(
                                                        CardPayment.Element.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .StopOverCode
                                                            .NONE
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .transactionId("transaction_uyrp7fld2ium70oa7oi")
                            .type(CardPayment.Element.CardSettlement.Type.CARD_SETTLEMENT)
                            .build()
                    )
                    .cardValidation(
                        CardPayment.Element.CardValidation.builder()
                            .id("card_validation_yi4e59jiaz6n9hx8tczv")
                            .actioner(CardPayment.Element.CardValidation.Actioner.USER)
                            .cardPaymentId("card_payment_nd3k2kacrqjli8482ave")
                            .currency(CardPayment.Element.CardValidation.Currency.CAD)
                            .digitalWalletTokenId(null)
                            .merchantAcceptorId("5665270011000168")
                            .merchantCategoryCode("5734")
                            .merchantCity("New York")
                            .merchantCountry("US")
                            .merchantDescriptor("AMAZON.COM")
                            .merchantPostalCode("10045")
                            .merchantState("NY")
                            .networkDetails(
                                CardPayment.Element.CardValidation.NetworkDetails.builder()
                                    .category(
                                        CardPayment.Element.CardValidation.NetworkDetails.Category
                                            .VISA
                                    )
                                    .visa(
                                        CardPayment.Element.CardValidation.NetworkDetails.Visa
                                            .builder()
                                            .electronicCommerceIndicator(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .ElectronicCommerceIndicator
                                                    .MAIL_PHONE_ORDER
                                            )
                                            .pointOfServiceEntryMode(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .PointOfServiceEntryMode
                                                    .UNKNOWN
                                            )
                                            .standInProcessingReason(
                                                CardPayment.Element.CardValidation.NetworkDetails
                                                    .Visa
                                                    .StandInProcessingReason
                                                    .ISSUER_ERROR
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .networkIdentifiers(
                                CardPayment.Element.CardValidation.NetworkIdentifiers.builder()
                                    .retrievalReferenceNumber("785867080153")
                                    .traceNumber("487941")
                                    .transactionId("627199945183184")
                                    .build()
                            )
                            .networkRiskScore(10L)
                            .physicalCardId(null)
                            .realTimeDecisionId(null)
                            .terminalId("RCN5VNXS")
                            .type(CardPayment.Element.CardValidation.Type.CARD_VALIDATION)
                            .verification(
                                CardPayment.Element.CardValidation.Verification.builder()
                                    .cardVerificationCode(
                                        CardPayment.Element.CardValidation.Verification
                                            .CardVerificationCode
                                            .builder()
                                            .result(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardVerificationCode
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .cardholderAddress(
                                        CardPayment.Element.CardValidation.Verification
                                            .CardholderAddress
                                            .builder()
                                            .actualLine1("33 Liberty Street")
                                            .actualPostalCode("94131")
                                            .providedLine1("33 Liberty Street")
                                            .providedPostalCode("94132")
                                            .result(
                                                CardPayment.Element.CardValidation.Verification
                                                    .CardholderAddress
                                                    .Result
                                                    .NOT_CHECKED
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .build()
                    )
                    .category(CardPayment.Element.Category.CARD_AUTHORIZATION)
                    .createdAt(OffsetDateTime.parse("2020-01-31T23:59:59Z"))
                    .other(JsonValue.from(mapOf<String, Any>()))
                    .build()
            )
        assertThat(cardPayment.physicalCardId()).isNull()
        assertThat(cardPayment.state())
            .isEqualTo(
                CardPayment.State.builder()
                    .authorizedAmount(100L)
                    .fuelConfirmedAmount(0L)
                    .incrementedAmount(20L)
                    .reversedAmount(20L)
                    .settledAmount(100L)
                    .build()
            )
        assertThat(cardPayment.type()).isEqualTo(CardPayment.Type.CARD_PAYMENT)
    }
}
