package com.increase.api.models

import java.time.LocalDate
import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

class TransactionTest {

    @Test
    fun createTransaction() {
        val transaction =
            Transaction.builder()
                .id("string")
                .accountId("string")
                .amount(123L)
                .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                .currency(Transaction.Currency.CAD)
                .description("string")
                .routeId("string")
                .routeType(Transaction.RouteType.ACCOUNT_NUMBER)
                .source(
                    Transaction.Source.builder()
                        .accountTransferIntention(
                            Transaction.Source.AccountTransferIntention.builder()
                                .amount(123L)
                                .currency(Transaction.Source.AccountTransferIntention.Currency.CAD)
                                .description("string")
                                .destinationAccountId("string")
                                .sourceAccountId("string")
                                .transferId("string")
                                .build()
                        )
                        .achTransferIntention(
                            Transaction.Source.AchTransferIntention.builder()
                                .accountNumber("string")
                                .amount(123L)
                                .routingNumber("string")
                                .statementDescriptor("string")
                                .transferId("string")
                                .build()
                        )
                        .achTransferRejection(
                            Transaction.Source.AchTransferRejection.builder()
                                .transferId("string")
                                .build()
                        )
                        .achTransferReturn(
                            Transaction.Source.AchTransferReturn.builder()
                                .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .rawReturnReasonCode("string")
                                .returnReasonCode(
                                    Transaction.Source.AchTransferReturn.ReturnReasonCode
                                        .INSUFFICIENT_FUND
                                )
                                .transactionId("string")
                                .transferId("string")
                                .build()
                        )
                        .cardDisputeAcceptance(
                            Transaction.Source.CardDisputeAcceptance.builder()
                                .acceptedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .cardDisputeId("string")
                                .transactionId("string")
                                .build()
                        )
                        .cardRefund(
                            Transaction.Source.CardRefund.builder()
                                .id("string")
                                .amount(123L)
                                .cardPaymentId("string")
                                .currency(Transaction.Source.CardRefund.Currency.CAD)
                                .merchantAcceptorId("string")
                                .merchantCategoryCode("string")
                                .merchantCity("string")
                                .merchantCountry("string")
                                .merchantName("string")
                                .merchantState("string")
                                .purchaseDetails(
                                    Transaction.Source.CardRefund.PurchaseDetails.builder()
                                        .carRental(
                                            Transaction.Source.CardRefund.PurchaseDetails.CarRental
                                                .builder()
                                                .carClassCode("string")
                                                .checkoutDate(LocalDate.parse("2019-12-27"))
                                                .dailyRentalRateAmount(123L)
                                                .dailyRentalRateCurrency("string")
                                                .daysRented(123L)
                                                .extraCharges(
                                                    Transaction.Source.CardRefund.PurchaseDetails
                                                        .CarRental
                                                        .ExtraCharges
                                                        .NO_EXTRA_CHARGE
                                                )
                                                .fuelChargesAmount(123L)
                                                .fuelChargesCurrency("string")
                                                .insuranceChargesAmount(123L)
                                                .insuranceChargesCurrency("string")
                                                .noShowIndicator(
                                                    Transaction.Source.CardRefund.PurchaseDetails
                                                        .CarRental
                                                        .NoShowIndicator
                                                        .NOT_APPLICABLE
                                                )
                                                .oneWayDropOffChargesAmount(123L)
                                                .oneWayDropOffChargesCurrency("string")
                                                .renterName("string")
                                                .weeklyRentalRateAmount(123L)
                                                .weeklyRentalRateCurrency("string")
                                                .build()
                                        )
                                        .customerReferenceIdentifier("string")
                                        .localTaxAmount(123L)
                                        .localTaxCurrency("string")
                                        .lodging(
                                            Transaction.Source.CardRefund.PurchaseDetails.Lodging
                                                .builder()
                                                .checkInDate(LocalDate.parse("2019-12-27"))
                                                .dailyRoomRateAmount(123L)
                                                .dailyRoomRateCurrency("string")
                                                .extraCharges(
                                                    Transaction.Source.CardRefund.PurchaseDetails
                                                        .Lodging
                                                        .ExtraCharges
                                                        .NO_EXTRA_CHARGE
                                                )
                                                .folioCashAdvancesAmount(123L)
                                                .folioCashAdvancesCurrency("string")
                                                .foodBeverageChargesAmount(123L)
                                                .foodBeverageChargesCurrency("string")
                                                .noShowIndicator(
                                                    Transaction.Source.CardRefund.PurchaseDetails
                                                        .Lodging
                                                        .NoShowIndicator
                                                        .NOT_APPLICABLE
                                                )
                                                .prepaidExpensesAmount(123L)
                                                .prepaidExpensesCurrency("string")
                                                .roomNights(123L)
                                                .totalRoomTaxAmount(123L)
                                                .totalRoomTaxCurrency("string")
                                                .totalTaxAmount(123L)
                                                .totalTaxCurrency("string")
                                                .build()
                                        )
                                        .nationalTaxAmount(123L)
                                        .nationalTaxCurrency("string")
                                        .purchaseIdentifier("string")
                                        .purchaseIdentifierFormat(
                                            Transaction.Source.CardRefund.PurchaseDetails
                                                .PurchaseIdentifierFormat
                                                .FREE_TEXT
                                        )
                                        .travel(
                                            Transaction.Source.CardRefund.PurchaseDetails.Travel
                                                .builder()
                                                .ancillary(
                                                    Transaction.Source.CardRefund.PurchaseDetails
                                                        .Travel
                                                        .Ancillary
                                                        .builder()
                                                        .connectedTicketDocumentNumber("string")
                                                        .creditReasonIndicator(
                                                            Transaction.Source.CardRefund
                                                                .PurchaseDetails
                                                                .Travel
                                                                .Ancillary
                                                                .CreditReasonIndicator
                                                                .NO_CREDIT
                                                        )
                                                        .passengerNameOrDescription("string")
                                                        .services(
                                                            listOf(
                                                                Transaction.Source.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .builder()
                                                                    .category(
                                                                        Transaction.Source
                                                                            .CardRefund
                                                                            .PurchaseDetails
                                                                            .Travel
                                                                            .Ancillary
                                                                            .Service
                                                                            .Category
                                                                            .NONE
                                                                    )
                                                                    .subCategory("string")
                                                                    .build()
                                                            )
                                                        )
                                                        .ticketDocumentNumber("string")
                                                        .build()
                                                )
                                                .computerizedReservationSystem("string")
                                                .creditReasonIndicator(
                                                    Transaction.Source.CardRefund.PurchaseDetails
                                                        .Travel
                                                        .CreditReasonIndicator
                                                        .NO_CREDIT
                                                )
                                                .departureDate(LocalDate.parse("2019-12-27"))
                                                .originationCityAirportCode("string")
                                                .passengerName("string")
                                                .restrictedTicketIndicator(
                                                    Transaction.Source.CardRefund.PurchaseDetails
                                                        .Travel
                                                        .RestrictedTicketIndicator
                                                        .NO_RESTRICTIONS
                                                )
                                                .ticketChangeIndicator(
                                                    Transaction.Source.CardRefund.PurchaseDetails
                                                        .Travel
                                                        .TicketChangeIndicator
                                                        .NONE
                                                )
                                                .ticketNumber("string")
                                                .travelAgencyCode("string")
                                                .travelAgencyName("string")
                                                .tripLegs(
                                                    listOf(
                                                        Transaction.Source.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .builder()
                                                            .carrierCode("string")
                                                            .destinationCityAirportCode("string")
                                                            .fareBasisCode("string")
                                                            .flightNumber("string")
                                                            .serviceClass("string")
                                                            .stopOverCode(
                                                                Transaction.Source.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .TripLeg
                                                                    .StopOverCode
                                                                    .NONE
                                                            )
                                                            .build()
                                                    )
                                                )
                                                .build()
                                        )
                                        .build()
                                )
                                .transactionId("string")
                                .type(Transaction.Source.CardRefund.Type.CARD_REFUND)
                                .build()
                        )
                        .cardRevenuePayment(
                            Transaction.Source.CardRevenuePayment.builder()
                                .amount(123L)
                                .currency(Transaction.Source.CardRevenuePayment.Currency.CAD)
                                .periodEnd(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .periodStart(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .transactedOnAccountId("string")
                                .build()
                        )
                        .cardSettlement(
                            Transaction.Source.CardSettlement.builder()
                                .id("string")
                                .amount(123L)
                                .cardAuthorization("string")
                                .cardPaymentId("string")
                                .currency(Transaction.Source.CardSettlement.Currency.CAD)
                                .merchantAcceptorId("string")
                                .merchantCategoryCode("string")
                                .merchantCity("string")
                                .merchantCountry("string")
                                .merchantName("string")
                                .merchantState("string")
                                .pendingTransactionId("string")
                                .presentmentAmount(123L)
                                .presentmentCurrency("string")
                                .purchaseDetails(
                                    Transaction.Source.CardSettlement.PurchaseDetails.builder()
                                        .carRental(
                                            Transaction.Source.CardSettlement.PurchaseDetails
                                                .CarRental
                                                .builder()
                                                .carClassCode("string")
                                                .checkoutDate(LocalDate.parse("2019-12-27"))
                                                .dailyRentalRateAmount(123L)
                                                .dailyRentalRateCurrency("string")
                                                .daysRented(123L)
                                                .extraCharges(
                                                    Transaction.Source.CardSettlement
                                                        .PurchaseDetails
                                                        .CarRental
                                                        .ExtraCharges
                                                        .NO_EXTRA_CHARGE
                                                )
                                                .fuelChargesAmount(123L)
                                                .fuelChargesCurrency("string")
                                                .insuranceChargesAmount(123L)
                                                .insuranceChargesCurrency("string")
                                                .noShowIndicator(
                                                    Transaction.Source.CardSettlement
                                                        .PurchaseDetails
                                                        .CarRental
                                                        .NoShowIndicator
                                                        .NOT_APPLICABLE
                                                )
                                                .oneWayDropOffChargesAmount(123L)
                                                .oneWayDropOffChargesCurrency("string")
                                                .renterName("string")
                                                .weeklyRentalRateAmount(123L)
                                                .weeklyRentalRateCurrency("string")
                                                .build()
                                        )
                                        .customerReferenceIdentifier("string")
                                        .localTaxAmount(123L)
                                        .localTaxCurrency("string")
                                        .lodging(
                                            Transaction.Source.CardSettlement.PurchaseDetails
                                                .Lodging
                                                .builder()
                                                .checkInDate(LocalDate.parse("2019-12-27"))
                                                .dailyRoomRateAmount(123L)
                                                .dailyRoomRateCurrency("string")
                                                .extraCharges(
                                                    Transaction.Source.CardSettlement
                                                        .PurchaseDetails
                                                        .Lodging
                                                        .ExtraCharges
                                                        .NO_EXTRA_CHARGE
                                                )
                                                .folioCashAdvancesAmount(123L)
                                                .folioCashAdvancesCurrency("string")
                                                .foodBeverageChargesAmount(123L)
                                                .foodBeverageChargesCurrency("string")
                                                .noShowIndicator(
                                                    Transaction.Source.CardSettlement
                                                        .PurchaseDetails
                                                        .Lodging
                                                        .NoShowIndicator
                                                        .NOT_APPLICABLE
                                                )
                                                .prepaidExpensesAmount(123L)
                                                .prepaidExpensesCurrency("string")
                                                .roomNights(123L)
                                                .totalRoomTaxAmount(123L)
                                                .totalRoomTaxCurrency("string")
                                                .totalTaxAmount(123L)
                                                .totalTaxCurrency("string")
                                                .build()
                                        )
                                        .nationalTaxAmount(123L)
                                        .nationalTaxCurrency("string")
                                        .purchaseIdentifier("string")
                                        .purchaseIdentifierFormat(
                                            Transaction.Source.CardSettlement.PurchaseDetails
                                                .PurchaseIdentifierFormat
                                                .FREE_TEXT
                                        )
                                        .travel(
                                            Transaction.Source.CardSettlement.PurchaseDetails.Travel
                                                .builder()
                                                .ancillary(
                                                    Transaction.Source.CardSettlement
                                                        .PurchaseDetails
                                                        .Travel
                                                        .Ancillary
                                                        .builder()
                                                        .connectedTicketDocumentNumber("string")
                                                        .creditReasonIndicator(
                                                            Transaction.Source.CardSettlement
                                                                .PurchaseDetails
                                                                .Travel
                                                                .Ancillary
                                                                .CreditReasonIndicator
                                                                .NO_CREDIT
                                                        )
                                                        .passengerNameOrDescription("string")
                                                        .services(
                                                            listOf(
                                                                Transaction.Source.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .Service
                                                                    .builder()
                                                                    .category(
                                                                        Transaction.Source
                                                                            .CardSettlement
                                                                            .PurchaseDetails
                                                                            .Travel
                                                                            .Ancillary
                                                                            .Service
                                                                            .Category
                                                                            .NONE
                                                                    )
                                                                    .subCategory("string")
                                                                    .build()
                                                            )
                                                        )
                                                        .ticketDocumentNumber("string")
                                                        .build()
                                                )
                                                .computerizedReservationSystem("string")
                                                .creditReasonIndicator(
                                                    Transaction.Source.CardSettlement
                                                        .PurchaseDetails
                                                        .Travel
                                                        .CreditReasonIndicator
                                                        .NO_CREDIT
                                                )
                                                .departureDate(LocalDate.parse("2019-12-27"))
                                                .originationCityAirportCode("string")
                                                .passengerName("string")
                                                .restrictedTicketIndicator(
                                                    Transaction.Source.CardSettlement
                                                        .PurchaseDetails
                                                        .Travel
                                                        .RestrictedTicketIndicator
                                                        .NO_RESTRICTIONS
                                                )
                                                .ticketChangeIndicator(
                                                    Transaction.Source.CardSettlement
                                                        .PurchaseDetails
                                                        .Travel
                                                        .TicketChangeIndicator
                                                        .NONE
                                                )
                                                .ticketNumber("string")
                                                .travelAgencyCode("string")
                                                .travelAgencyName("string")
                                                .tripLegs(
                                                    listOf(
                                                        Transaction.Source.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TripLeg
                                                            .builder()
                                                            .carrierCode("string")
                                                            .destinationCityAirportCode("string")
                                                            .fareBasisCode("string")
                                                            .flightNumber("string")
                                                            .serviceClass("string")
                                                            .stopOverCode(
                                                                Transaction.Source.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .TripLeg
                                                                    .StopOverCode
                                                                    .NONE
                                                            )
                                                            .build()
                                                    )
                                                )
                                                .build()
                                        )
                                        .build()
                                )
                                .transactionId("string")
                                .type(Transaction.Source.CardSettlement.Type.CARD_SETTLEMENT)
                                .build()
                        )
                        .category(Transaction.Source.Category.ACCOUNT_TRANSFER_INTENTION)
                        .checkDepositAcceptance(
                            Transaction.Source.CheckDepositAcceptance.builder()
                                .accountNumber("string")
                                .amount(123L)
                                .auxiliaryOnUs("string")
                                .checkDepositId("string")
                                .currency(Transaction.Source.CheckDepositAcceptance.Currency.CAD)
                                .routingNumber("string")
                                .serialNumber("string")
                                .build()
                        )
                        .checkDepositReturn(
                            Transaction.Source.CheckDepositReturn.builder()
                                .amount(123L)
                                .checkDepositId("string")
                                .currency(Transaction.Source.CheckDepositReturn.Currency.CAD)
                                .returnReason(
                                    Transaction.Source.CheckDepositReturn.ReturnReason
                                        .ACH_CONVERSION_NOT_SUPPORTED
                                )
                                .returnedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .transactionId("string")
                                .build()
                        )
                        .checkTransferDeposit(
                            Transaction.Source.CheckTransferDeposit.builder()
                                .backImageFileId("string")
                                .bankOfFirstDepositRoutingNumber("string")
                                .depositedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .frontImageFileId("string")
                                .transactionId("string")
                                .type(
                                    Transaction.Source.CheckTransferDeposit.Type
                                        .CHECK_TRANSFER_DEPOSIT
                                )
                                .build()
                        )
                        .checkTransferIntention(
                            Transaction.Source.CheckTransferIntention.builder()
                                .addressCity("string")
                                .addressLine1("string")
                                .addressLine2("string")
                                .addressState("string")
                                .addressZip("string")
                                .amount(123L)
                                .currency(Transaction.Source.CheckTransferIntention.Currency.CAD)
                                .recipientName("string")
                                .transferId("string")
                                .build()
                        )
                        .checkTransferStopPaymentRequest(
                            Transaction.Source.CheckTransferStopPaymentRequest.builder()
                                .reason(
                                    Transaction.Source.CheckTransferStopPaymentRequest.Reason
                                        .MAIL_DELIVERY_FAILED
                                )
                                .requestedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .transferId("string")
                                .type(
                                    Transaction.Source.CheckTransferStopPaymentRequest.Type
                                        .CHECK_TRANSFER_STOP_PAYMENT_REQUEST
                                )
                                .build()
                        )
                        .feePayment(
                            Transaction.Source.FeePayment.builder()
                                .amount(123L)
                                .currency(Transaction.Source.FeePayment.Currency.CAD)
                                .feePeriodStart(LocalDate.parse("2019-12-27"))
                                .build()
                        )
                        .inboundAchTransfer(
                            Transaction.Source.InboundAchTransfer.builder()
                                .amount(123L)
                                .originatorCompanyDescriptiveDate("string")
                                .originatorCompanyDiscretionaryData("string")
                                .originatorCompanyEntryDescription("string")
                                .originatorCompanyId("string")
                                .originatorCompanyName("string")
                                .receiverIdNumber("string")
                                .receiverName("string")
                                .traceNumber("string")
                                .transferId("string")
                                .build()
                        )
                        .inboundCheck(
                            Transaction.Source.InboundCheck.builder()
                                .amount(123L)
                                .bankOfFirstDepositRoutingNumber("string")
                                .checkFrontImageFileId("string")
                                .checkNumber("string")
                                .checkRearImageFileId("string")
                                .currency(Transaction.Source.InboundCheck.Currency.CAD)
                                .build()
                        )
                        .inboundInternationalAchTransfer(
                            Transaction.Source.InboundInternationalAchTransfer.builder()
                                .amount(123L)
                                .destinationCountryCode("string")
                                .destinationCurrencyCode("string")
                                .foreignExchangeIndicator(
                                    Transaction.Source.InboundInternationalAchTransfer
                                        .ForeignExchangeIndicator
                                        .FIXED_TO_VARIABLE
                                )
                                .foreignExchangeReference("string")
                                .foreignExchangeReferenceIndicator(
                                    Transaction.Source.InboundInternationalAchTransfer
                                        .ForeignExchangeReferenceIndicator
                                        .FOREIGN_EXCHANGE_RATE
                                )
                                .foreignPaymentAmount(123L)
                                .foreignTraceNumber("string")
                                .internationalTransactionTypeCode(
                                    Transaction.Source.InboundInternationalAchTransfer
                                        .InternationalTransactionTypeCode
                                        .ANNUITY
                                )
                                .originatingCurrencyCode("string")
                                .originatingDepositoryFinancialInstitutionBranchCountry("string")
                                .originatingDepositoryFinancialInstitutionId("string")
                                .originatingDepositoryFinancialInstitutionIdQualifier(
                                    Transaction.Source.InboundInternationalAchTransfer
                                        .OriginatingDepositoryFinancialInstitutionIdQualifier
                                        .NATIONAL_CLEARING_SYSTEM_NUMBER
                                )
                                .originatingDepositoryFinancialInstitutionName("string")
                                .originatorCity("string")
                                .originatorCompanyEntryDescription("string")
                                .originatorCountry("string")
                                .originatorIdentification("string")
                                .originatorName("string")
                                .originatorPostalCode("string")
                                .originatorStateOrProvince("string")
                                .originatorStreetAddress("string")
                                .paymentRelatedInformation("string")
                                .paymentRelatedInformation2("string")
                                .receiverCity("string")
                                .receiverCountry("string")
                                .receiverIdentificationNumber("string")
                                .receiverPostalCode("string")
                                .receiverStateOrProvince("string")
                                .receiverStreetAddress("string")
                                .receivingCompanyOrIndividualName("string")
                                .receivingDepositoryFinancialInstitutionCountry("string")
                                .receivingDepositoryFinancialInstitutionId("string")
                                .receivingDepositoryFinancialInstitutionIdQualifier(
                                    Transaction.Source.InboundInternationalAchTransfer
                                        .ReceivingDepositoryFinancialInstitutionIdQualifier
                                        .NATIONAL_CLEARING_SYSTEM_NUMBER
                                )
                                .receivingDepositoryFinancialInstitutionName("string")
                                .traceNumber("string")
                                .build()
                        )
                        .inboundRealTimePaymentsTransferConfirmation(
                            Transaction.Source.InboundRealTimePaymentsTransferConfirmation.builder()
                                .amount(123L)
                                .creditorName("string")
                                .currency(
                                    Transaction.Source.InboundRealTimePaymentsTransferConfirmation
                                        .Currency
                                        .CAD
                                )
                                .debtorAccountNumber("string")
                                .debtorName("string")
                                .debtorRoutingNumber("string")
                                .remittanceInformation("string")
                                .transactionIdentification("string")
                                .build()
                        )
                        .inboundWireDrawdownPayment(
                            Transaction.Source.InboundWireDrawdownPayment.builder()
                                .amount(123L)
                                .beneficiaryAddressLine1("string")
                                .beneficiaryAddressLine2("string")
                                .beneficiaryAddressLine3("string")
                                .beneficiaryName("string")
                                .beneficiaryReference("string")
                                .description("string")
                                .inputMessageAccountabilityData("string")
                                .originatorAddressLine1("string")
                                .originatorAddressLine2("string")
                                .originatorAddressLine3("string")
                                .originatorName("string")
                                .originatorToBeneficiaryInformation("string")
                                .originatorToBeneficiaryInformationLine1("string")
                                .originatorToBeneficiaryInformationLine2("string")
                                .originatorToBeneficiaryInformationLine3("string")
                                .originatorToBeneficiaryInformationLine4("string")
                                .build()
                        )
                        .inboundWireDrawdownPaymentReversal(
                            Transaction.Source.InboundWireDrawdownPaymentReversal.builder()
                                .amount(123L)
                                .description("string")
                                .inputCycleDate(LocalDate.parse("2019-12-27"))
                                .inputMessageAccountabilityData("string")
                                .inputSequenceNumber("string")
                                .inputSource("string")
                                .previousMessageInputCycleDate(LocalDate.parse("2019-12-27"))
                                .previousMessageInputMessageAccountabilityData("string")
                                .previousMessageInputSequenceNumber("string")
                                .previousMessageInputSource("string")
                                .build()
                        )
                        .inboundWireReversal(
                            Transaction.Source.InboundWireReversal.builder()
                                .amount(123L)
                                .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .description("string")
                                .financialInstitutionToFinancialInstitutionInformation("string")
                                .inputCycleDate(LocalDate.parse("2019-12-27"))
                                .inputMessageAccountabilityData("string")
                                .inputSequenceNumber("string")
                                .inputSource("string")
                                .previousMessageInputCycleDate(LocalDate.parse("2019-12-27"))
                                .previousMessageInputMessageAccountabilityData("string")
                                .previousMessageInputSequenceNumber("string")
                                .previousMessageInputSource("string")
                                .receiverFinancialInstitutionInformation("string")
                                .transactionId("string")
                                .wireTransferId("string")
                                .build()
                        )
                        .inboundWireTransfer(
                            Transaction.Source.InboundWireTransfer.builder()
                                .amount(123L)
                                .beneficiaryAddressLine1("string")
                                .beneficiaryAddressLine2("string")
                                .beneficiaryAddressLine3("string")
                                .beneficiaryName("string")
                                .beneficiaryReference("string")
                                .description("string")
                                .inputMessageAccountabilityData("string")
                                .originatorAddressLine1("string")
                                .originatorAddressLine2("string")
                                .originatorAddressLine3("string")
                                .originatorName("string")
                                .originatorToBeneficiaryInformation("string")
                                .originatorToBeneficiaryInformationLine1("string")
                                .originatorToBeneficiaryInformationLine2("string")
                                .originatorToBeneficiaryInformationLine3("string")
                                .originatorToBeneficiaryInformationLine4("string")
                                .build()
                        )
                        .interestPayment(
                            Transaction.Source.InterestPayment.builder()
                                .accruedOnAccountId("string")
                                .amount(123L)
                                .currency(Transaction.Source.InterestPayment.Currency.CAD)
                                .periodEnd(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .periodStart(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                .build()
                        )
                        .internalSource(
                            Transaction.Source.InternalSource.builder()
                                .amount(123L)
                                .currency(Transaction.Source.InternalSource.Currency.CAD)
                                .reason(Transaction.Source.InternalSource.Reason.ACCOUNT_CLOSURE)
                                .build()
                        )
                        .realTimePaymentsTransferAcknowledgement(
                            Transaction.Source.RealTimePaymentsTransferAcknowledgement.builder()
                                .amount(123L)
                                .destinationAccountNumber("string")
                                .destinationRoutingNumber("string")
                                .remittanceInformation("string")
                                .transferId("string")
                                .build()
                        )
                        .sampleFunds(
                            Transaction.Source.SampleFunds.builder().originator("string").build()
                        )
                        .wireTransferIntention(
                            Transaction.Source.WireTransferIntention.builder()
                                .accountNumber("string")
                                .amount(123L)
                                .messageToRecipient("string")
                                .routingNumber("string")
                                .transferId("string")
                                .build()
                        )
                        .wireTransferRejection(
                            Transaction.Source.WireTransferRejection.builder()
                                .transferId("string")
                                .build()
                        )
                        .build()
                )
                .type(Transaction.Type.TRANSACTION)
                .build()
        assertThat(transaction).isNotNull
        assertThat(transaction.id()).isEqualTo("string")
        assertThat(transaction.accountId()).isEqualTo("string")
        assertThat(transaction.amount()).isEqualTo(123L)
        assertThat(transaction.createdAt())
            .isEqualTo(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
        assertThat(transaction.currency()).isEqualTo(Transaction.Currency.CAD)
        assertThat(transaction.description()).isEqualTo("string")
        assertThat(transaction.routeId()).isEqualTo("string")
        assertThat(transaction.routeType()).isEqualTo(Transaction.RouteType.ACCOUNT_NUMBER)
        assertThat(transaction.source())
            .isEqualTo(
                Transaction.Source.builder()
                    .accountTransferIntention(
                        Transaction.Source.AccountTransferIntention.builder()
                            .amount(123L)
                            .currency(Transaction.Source.AccountTransferIntention.Currency.CAD)
                            .description("string")
                            .destinationAccountId("string")
                            .sourceAccountId("string")
                            .transferId("string")
                            .build()
                    )
                    .achTransferIntention(
                        Transaction.Source.AchTransferIntention.builder()
                            .accountNumber("string")
                            .amount(123L)
                            .routingNumber("string")
                            .statementDescriptor("string")
                            .transferId("string")
                            .build()
                    )
                    .achTransferRejection(
                        Transaction.Source.AchTransferRejection.builder()
                            .transferId("string")
                            .build()
                    )
                    .achTransferReturn(
                        Transaction.Source.AchTransferReturn.builder()
                            .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .rawReturnReasonCode("string")
                            .returnReasonCode(
                                Transaction.Source.AchTransferReturn.ReturnReasonCode
                                    .INSUFFICIENT_FUND
                            )
                            .transactionId("string")
                            .transferId("string")
                            .build()
                    )
                    .cardDisputeAcceptance(
                        Transaction.Source.CardDisputeAcceptance.builder()
                            .acceptedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .cardDisputeId("string")
                            .transactionId("string")
                            .build()
                    )
                    .cardRefund(
                        Transaction.Source.CardRefund.builder()
                            .id("string")
                            .amount(123L)
                            .cardPaymentId("string")
                            .currency(Transaction.Source.CardRefund.Currency.CAD)
                            .merchantAcceptorId("string")
                            .merchantCategoryCode("string")
                            .merchantCity("string")
                            .merchantCountry("string")
                            .merchantName("string")
                            .merchantState("string")
                            .purchaseDetails(
                                Transaction.Source.CardRefund.PurchaseDetails.builder()
                                    .carRental(
                                        Transaction.Source.CardRefund.PurchaseDetails.CarRental
                                            .builder()
                                            .carClassCode("string")
                                            .checkoutDate(LocalDate.parse("2019-12-27"))
                                            .dailyRentalRateAmount(123L)
                                            .dailyRentalRateCurrency("string")
                                            .daysRented(123L)
                                            .extraCharges(
                                                Transaction.Source.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .fuelChargesAmount(123L)
                                            .fuelChargesCurrency("string")
                                            .insuranceChargesAmount(123L)
                                            .insuranceChargesCurrency("string")
                                            .noShowIndicator(
                                                Transaction.Source.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .oneWayDropOffChargesAmount(123L)
                                            .oneWayDropOffChargesCurrency("string")
                                            .renterName("string")
                                            .weeklyRentalRateAmount(123L)
                                            .weeklyRentalRateCurrency("string")
                                            .build()
                                    )
                                    .customerReferenceIdentifier("string")
                                    .localTaxAmount(123L)
                                    .localTaxCurrency("string")
                                    .lodging(
                                        Transaction.Source.CardRefund.PurchaseDetails.Lodging
                                            .builder()
                                            .checkInDate(LocalDate.parse("2019-12-27"))
                                            .dailyRoomRateAmount(123L)
                                            .dailyRoomRateCurrency("string")
                                            .extraCharges(
                                                Transaction.Source.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .folioCashAdvancesAmount(123L)
                                            .folioCashAdvancesCurrency("string")
                                            .foodBeverageChargesAmount(123L)
                                            .foodBeverageChargesCurrency("string")
                                            .noShowIndicator(
                                                Transaction.Source.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .prepaidExpensesAmount(123L)
                                            .prepaidExpensesCurrency("string")
                                            .roomNights(123L)
                                            .totalRoomTaxAmount(123L)
                                            .totalRoomTaxCurrency("string")
                                            .totalTaxAmount(123L)
                                            .totalTaxCurrency("string")
                                            .build()
                                    )
                                    .nationalTaxAmount(123L)
                                    .nationalTaxCurrency("string")
                                    .purchaseIdentifier("string")
                                    .purchaseIdentifierFormat(
                                        Transaction.Source.CardRefund.PurchaseDetails
                                            .PurchaseIdentifierFormat
                                            .FREE_TEXT
                                    )
                                    .travel(
                                        Transaction.Source.CardRefund.PurchaseDetails.Travel
                                            .builder()
                                            .ancillary(
                                                Transaction.Source.CardRefund.PurchaseDetails.Travel
                                                    .Ancillary
                                                    .builder()
                                                    .connectedTicketDocumentNumber("string")
                                                    .creditReasonIndicator(
                                                        Transaction.Source.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .passengerNameOrDescription("string")
                                                    .services(
                                                        listOf(
                                                            Transaction.Source.CardRefund
                                                                .PurchaseDetails
                                                                .Travel
                                                                .Ancillary
                                                                .Service
                                                                .builder()
                                                                .category(
                                                                    Transaction.Source.CardRefund
                                                                        .PurchaseDetails
                                                                        .Travel
                                                                        .Ancillary
                                                                        .Service
                                                                        .Category
                                                                        .NONE
                                                                )
                                                                .subCategory("string")
                                                                .build()
                                                        )
                                                    )
                                                    .ticketDocumentNumber("string")
                                                    .build()
                                            )
                                            .computerizedReservationSystem("string")
                                            .creditReasonIndicator(
                                                Transaction.Source.CardRefund.PurchaseDetails.Travel
                                                    .CreditReasonIndicator
                                                    .NO_CREDIT
                                            )
                                            .departureDate(LocalDate.parse("2019-12-27"))
                                            .originationCityAirportCode("string")
                                            .passengerName("string")
                                            .restrictedTicketIndicator(
                                                Transaction.Source.CardRefund.PurchaseDetails.Travel
                                                    .RestrictedTicketIndicator
                                                    .NO_RESTRICTIONS
                                            )
                                            .ticketChangeIndicator(
                                                Transaction.Source.CardRefund.PurchaseDetails.Travel
                                                    .TicketChangeIndicator
                                                    .NONE
                                            )
                                            .ticketNumber("string")
                                            .travelAgencyCode("string")
                                            .travelAgencyName("string")
                                            .tripLegs(
                                                listOf(
                                                    Transaction.Source.CardRefund.PurchaseDetails
                                                        .Travel
                                                        .TripLeg
                                                        .builder()
                                                        .carrierCode("string")
                                                        .destinationCityAirportCode("string")
                                                        .fareBasisCode("string")
                                                        .flightNumber("string")
                                                        .serviceClass("string")
                                                        .stopOverCode(
                                                            Transaction.Source.CardRefund
                                                                .PurchaseDetails
                                                                .Travel
                                                                .TripLeg
                                                                .StopOverCode
                                                                .NONE
                                                        )
                                                        .build()
                                                )
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .transactionId("string")
                            .type(Transaction.Source.CardRefund.Type.CARD_REFUND)
                            .build()
                    )
                    .cardRevenuePayment(
                        Transaction.Source.CardRevenuePayment.builder()
                            .amount(123L)
                            .currency(Transaction.Source.CardRevenuePayment.Currency.CAD)
                            .periodEnd(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .periodStart(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .transactedOnAccountId("string")
                            .build()
                    )
                    .cardSettlement(
                        Transaction.Source.CardSettlement.builder()
                            .id("string")
                            .amount(123L)
                            .cardAuthorization("string")
                            .cardPaymentId("string")
                            .currency(Transaction.Source.CardSettlement.Currency.CAD)
                            .merchantAcceptorId("string")
                            .merchantCategoryCode("string")
                            .merchantCity("string")
                            .merchantCountry("string")
                            .merchantName("string")
                            .merchantState("string")
                            .pendingTransactionId("string")
                            .presentmentAmount(123L)
                            .presentmentCurrency("string")
                            .purchaseDetails(
                                Transaction.Source.CardSettlement.PurchaseDetails.builder()
                                    .carRental(
                                        Transaction.Source.CardSettlement.PurchaseDetails.CarRental
                                            .builder()
                                            .carClassCode("string")
                                            .checkoutDate(LocalDate.parse("2019-12-27"))
                                            .dailyRentalRateAmount(123L)
                                            .dailyRentalRateCurrency("string")
                                            .daysRented(123L)
                                            .extraCharges(
                                                Transaction.Source.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .fuelChargesAmount(123L)
                                            .fuelChargesCurrency("string")
                                            .insuranceChargesAmount(123L)
                                            .insuranceChargesCurrency("string")
                                            .noShowIndicator(
                                                Transaction.Source.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .oneWayDropOffChargesAmount(123L)
                                            .oneWayDropOffChargesCurrency("string")
                                            .renterName("string")
                                            .weeklyRentalRateAmount(123L)
                                            .weeklyRentalRateCurrency("string")
                                            .build()
                                    )
                                    .customerReferenceIdentifier("string")
                                    .localTaxAmount(123L)
                                    .localTaxCurrency("string")
                                    .lodging(
                                        Transaction.Source.CardSettlement.PurchaseDetails.Lodging
                                            .builder()
                                            .checkInDate(LocalDate.parse("2019-12-27"))
                                            .dailyRoomRateAmount(123L)
                                            .dailyRoomRateCurrency("string")
                                            .extraCharges(
                                                Transaction.Source.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .ExtraCharges
                                                    .NO_EXTRA_CHARGE
                                            )
                                            .folioCashAdvancesAmount(123L)
                                            .folioCashAdvancesCurrency("string")
                                            .foodBeverageChargesAmount(123L)
                                            .foodBeverageChargesCurrency("string")
                                            .noShowIndicator(
                                                Transaction.Source.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .NoShowIndicator
                                                    .NOT_APPLICABLE
                                            )
                                            .prepaidExpensesAmount(123L)
                                            .prepaidExpensesCurrency("string")
                                            .roomNights(123L)
                                            .totalRoomTaxAmount(123L)
                                            .totalRoomTaxCurrency("string")
                                            .totalTaxAmount(123L)
                                            .totalTaxCurrency("string")
                                            .build()
                                    )
                                    .nationalTaxAmount(123L)
                                    .nationalTaxCurrency("string")
                                    .purchaseIdentifier("string")
                                    .purchaseIdentifierFormat(
                                        Transaction.Source.CardSettlement.PurchaseDetails
                                            .PurchaseIdentifierFormat
                                            .FREE_TEXT
                                    )
                                    .travel(
                                        Transaction.Source.CardSettlement.PurchaseDetails.Travel
                                            .builder()
                                            .ancillary(
                                                Transaction.Source.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .Ancillary
                                                    .builder()
                                                    .connectedTicketDocumentNumber("string")
                                                    .creditReasonIndicator(
                                                        Transaction.Source.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .passengerNameOrDescription("string")
                                                    .services(
                                                        listOf(
                                                            Transaction.Source.CardSettlement
                                                                .PurchaseDetails
                                                                .Travel
                                                                .Ancillary
                                                                .Service
                                                                .builder()
                                                                .category(
                                                                    Transaction.Source
                                                                        .CardSettlement
                                                                        .PurchaseDetails
                                                                        .Travel
                                                                        .Ancillary
                                                                        .Service
                                                                        .Category
                                                                        .NONE
                                                                )
                                                                .subCategory("string")
                                                                .build()
                                                        )
                                                    )
                                                    .ticketDocumentNumber("string")
                                                    .build()
                                            )
                                            .computerizedReservationSystem("string")
                                            .creditReasonIndicator(
                                                Transaction.Source.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .CreditReasonIndicator
                                                    .NO_CREDIT
                                            )
                                            .departureDate(LocalDate.parse("2019-12-27"))
                                            .originationCityAirportCode("string")
                                            .passengerName("string")
                                            .restrictedTicketIndicator(
                                                Transaction.Source.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .RestrictedTicketIndicator
                                                    .NO_RESTRICTIONS
                                            )
                                            .ticketChangeIndicator(
                                                Transaction.Source.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .TicketChangeIndicator
                                                    .NONE
                                            )
                                            .ticketNumber("string")
                                            .travelAgencyCode("string")
                                            .travelAgencyName("string")
                                            .tripLegs(
                                                listOf(
                                                    Transaction.Source.CardSettlement
                                                        .PurchaseDetails
                                                        .Travel
                                                        .TripLeg
                                                        .builder()
                                                        .carrierCode("string")
                                                        .destinationCityAirportCode("string")
                                                        .fareBasisCode("string")
                                                        .flightNumber("string")
                                                        .serviceClass("string")
                                                        .stopOverCode(
                                                            Transaction.Source.CardSettlement
                                                                .PurchaseDetails
                                                                .Travel
                                                                .TripLeg
                                                                .StopOverCode
                                                                .NONE
                                                        )
                                                        .build()
                                                )
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .transactionId("string")
                            .type(Transaction.Source.CardSettlement.Type.CARD_SETTLEMENT)
                            .build()
                    )
                    .category(Transaction.Source.Category.ACCOUNT_TRANSFER_INTENTION)
                    .checkDepositAcceptance(
                        Transaction.Source.CheckDepositAcceptance.builder()
                            .accountNumber("string")
                            .amount(123L)
                            .auxiliaryOnUs("string")
                            .checkDepositId("string")
                            .currency(Transaction.Source.CheckDepositAcceptance.Currency.CAD)
                            .routingNumber("string")
                            .serialNumber("string")
                            .build()
                    )
                    .checkDepositReturn(
                        Transaction.Source.CheckDepositReturn.builder()
                            .amount(123L)
                            .checkDepositId("string")
                            .currency(Transaction.Source.CheckDepositReturn.Currency.CAD)
                            .returnReason(
                                Transaction.Source.CheckDepositReturn.ReturnReason
                                    .ACH_CONVERSION_NOT_SUPPORTED
                            )
                            .returnedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .transactionId("string")
                            .build()
                    )
                    .checkTransferDeposit(
                        Transaction.Source.CheckTransferDeposit.builder()
                            .backImageFileId("string")
                            .bankOfFirstDepositRoutingNumber("string")
                            .depositedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .frontImageFileId("string")
                            .transactionId("string")
                            .type(
                                Transaction.Source.CheckTransferDeposit.Type.CHECK_TRANSFER_DEPOSIT
                            )
                            .build()
                    )
                    .checkTransferIntention(
                        Transaction.Source.CheckTransferIntention.builder()
                            .addressCity("string")
                            .addressLine1("string")
                            .addressLine2("string")
                            .addressState("string")
                            .addressZip("string")
                            .amount(123L)
                            .currency(Transaction.Source.CheckTransferIntention.Currency.CAD)
                            .recipientName("string")
                            .transferId("string")
                            .build()
                    )
                    .checkTransferStopPaymentRequest(
                        Transaction.Source.CheckTransferStopPaymentRequest.builder()
                            .reason(
                                Transaction.Source.CheckTransferStopPaymentRequest.Reason
                                    .MAIL_DELIVERY_FAILED
                            )
                            .requestedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .transferId("string")
                            .type(
                                Transaction.Source.CheckTransferStopPaymentRequest.Type
                                    .CHECK_TRANSFER_STOP_PAYMENT_REQUEST
                            )
                            .build()
                    )
                    .feePayment(
                        Transaction.Source.FeePayment.builder()
                            .amount(123L)
                            .currency(Transaction.Source.FeePayment.Currency.CAD)
                            .feePeriodStart(LocalDate.parse("2019-12-27"))
                            .build()
                    )
                    .inboundAchTransfer(
                        Transaction.Source.InboundAchTransfer.builder()
                            .amount(123L)
                            .originatorCompanyDescriptiveDate("string")
                            .originatorCompanyDiscretionaryData("string")
                            .originatorCompanyEntryDescription("string")
                            .originatorCompanyId("string")
                            .originatorCompanyName("string")
                            .receiverIdNumber("string")
                            .receiverName("string")
                            .traceNumber("string")
                            .transferId("string")
                            .build()
                    )
                    .inboundCheck(
                        Transaction.Source.InboundCheck.builder()
                            .amount(123L)
                            .bankOfFirstDepositRoutingNumber("string")
                            .checkFrontImageFileId("string")
                            .checkNumber("string")
                            .checkRearImageFileId("string")
                            .currency(Transaction.Source.InboundCheck.Currency.CAD)
                            .build()
                    )
                    .inboundInternationalAchTransfer(
                        Transaction.Source.InboundInternationalAchTransfer.builder()
                            .amount(123L)
                            .destinationCountryCode("string")
                            .destinationCurrencyCode("string")
                            .foreignExchangeIndicator(
                                Transaction.Source.InboundInternationalAchTransfer
                                    .ForeignExchangeIndicator
                                    .FIXED_TO_VARIABLE
                            )
                            .foreignExchangeReference("string")
                            .foreignExchangeReferenceIndicator(
                                Transaction.Source.InboundInternationalAchTransfer
                                    .ForeignExchangeReferenceIndicator
                                    .FOREIGN_EXCHANGE_RATE
                            )
                            .foreignPaymentAmount(123L)
                            .foreignTraceNumber("string")
                            .internationalTransactionTypeCode(
                                Transaction.Source.InboundInternationalAchTransfer
                                    .InternationalTransactionTypeCode
                                    .ANNUITY
                            )
                            .originatingCurrencyCode("string")
                            .originatingDepositoryFinancialInstitutionBranchCountry("string")
                            .originatingDepositoryFinancialInstitutionId("string")
                            .originatingDepositoryFinancialInstitutionIdQualifier(
                                Transaction.Source.InboundInternationalAchTransfer
                                    .OriginatingDepositoryFinancialInstitutionIdQualifier
                                    .NATIONAL_CLEARING_SYSTEM_NUMBER
                            )
                            .originatingDepositoryFinancialInstitutionName("string")
                            .originatorCity("string")
                            .originatorCompanyEntryDescription("string")
                            .originatorCountry("string")
                            .originatorIdentification("string")
                            .originatorName("string")
                            .originatorPostalCode("string")
                            .originatorStateOrProvince("string")
                            .originatorStreetAddress("string")
                            .paymentRelatedInformation("string")
                            .paymentRelatedInformation2("string")
                            .receiverCity("string")
                            .receiverCountry("string")
                            .receiverIdentificationNumber("string")
                            .receiverPostalCode("string")
                            .receiverStateOrProvince("string")
                            .receiverStreetAddress("string")
                            .receivingCompanyOrIndividualName("string")
                            .receivingDepositoryFinancialInstitutionCountry("string")
                            .receivingDepositoryFinancialInstitutionId("string")
                            .receivingDepositoryFinancialInstitutionIdQualifier(
                                Transaction.Source.InboundInternationalAchTransfer
                                    .ReceivingDepositoryFinancialInstitutionIdQualifier
                                    .NATIONAL_CLEARING_SYSTEM_NUMBER
                            )
                            .receivingDepositoryFinancialInstitutionName("string")
                            .traceNumber("string")
                            .build()
                    )
                    .inboundRealTimePaymentsTransferConfirmation(
                        Transaction.Source.InboundRealTimePaymentsTransferConfirmation.builder()
                            .amount(123L)
                            .creditorName("string")
                            .currency(
                                Transaction.Source.InboundRealTimePaymentsTransferConfirmation
                                    .Currency
                                    .CAD
                            )
                            .debtorAccountNumber("string")
                            .debtorName("string")
                            .debtorRoutingNumber("string")
                            .remittanceInformation("string")
                            .transactionIdentification("string")
                            .build()
                    )
                    .inboundWireDrawdownPayment(
                        Transaction.Source.InboundWireDrawdownPayment.builder()
                            .amount(123L)
                            .beneficiaryAddressLine1("string")
                            .beneficiaryAddressLine2("string")
                            .beneficiaryAddressLine3("string")
                            .beneficiaryName("string")
                            .beneficiaryReference("string")
                            .description("string")
                            .inputMessageAccountabilityData("string")
                            .originatorAddressLine1("string")
                            .originatorAddressLine2("string")
                            .originatorAddressLine3("string")
                            .originatorName("string")
                            .originatorToBeneficiaryInformation("string")
                            .originatorToBeneficiaryInformationLine1("string")
                            .originatorToBeneficiaryInformationLine2("string")
                            .originatorToBeneficiaryInformationLine3("string")
                            .originatorToBeneficiaryInformationLine4("string")
                            .build()
                    )
                    .inboundWireDrawdownPaymentReversal(
                        Transaction.Source.InboundWireDrawdownPaymentReversal.builder()
                            .amount(123L)
                            .description("string")
                            .inputCycleDate(LocalDate.parse("2019-12-27"))
                            .inputMessageAccountabilityData("string")
                            .inputSequenceNumber("string")
                            .inputSource("string")
                            .previousMessageInputCycleDate(LocalDate.parse("2019-12-27"))
                            .previousMessageInputMessageAccountabilityData("string")
                            .previousMessageInputSequenceNumber("string")
                            .previousMessageInputSource("string")
                            .build()
                    )
                    .inboundWireReversal(
                        Transaction.Source.InboundWireReversal.builder()
                            .amount(123L)
                            .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .description("string")
                            .financialInstitutionToFinancialInstitutionInformation("string")
                            .inputCycleDate(LocalDate.parse("2019-12-27"))
                            .inputMessageAccountabilityData("string")
                            .inputSequenceNumber("string")
                            .inputSource("string")
                            .previousMessageInputCycleDate(LocalDate.parse("2019-12-27"))
                            .previousMessageInputMessageAccountabilityData("string")
                            .previousMessageInputSequenceNumber("string")
                            .previousMessageInputSource("string")
                            .receiverFinancialInstitutionInformation("string")
                            .transactionId("string")
                            .wireTransferId("string")
                            .build()
                    )
                    .inboundWireTransfer(
                        Transaction.Source.InboundWireTransfer.builder()
                            .amount(123L)
                            .beneficiaryAddressLine1("string")
                            .beneficiaryAddressLine2("string")
                            .beneficiaryAddressLine3("string")
                            .beneficiaryName("string")
                            .beneficiaryReference("string")
                            .description("string")
                            .inputMessageAccountabilityData("string")
                            .originatorAddressLine1("string")
                            .originatorAddressLine2("string")
                            .originatorAddressLine3("string")
                            .originatorName("string")
                            .originatorToBeneficiaryInformation("string")
                            .originatorToBeneficiaryInformationLine1("string")
                            .originatorToBeneficiaryInformationLine2("string")
                            .originatorToBeneficiaryInformationLine3("string")
                            .originatorToBeneficiaryInformationLine4("string")
                            .build()
                    )
                    .interestPayment(
                        Transaction.Source.InterestPayment.builder()
                            .accruedOnAccountId("string")
                            .amount(123L)
                            .currency(Transaction.Source.InterestPayment.Currency.CAD)
                            .periodEnd(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .periodStart(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .build()
                    )
                    .internalSource(
                        Transaction.Source.InternalSource.builder()
                            .amount(123L)
                            .currency(Transaction.Source.InternalSource.Currency.CAD)
                            .reason(Transaction.Source.InternalSource.Reason.ACCOUNT_CLOSURE)
                            .build()
                    )
                    .realTimePaymentsTransferAcknowledgement(
                        Transaction.Source.RealTimePaymentsTransferAcknowledgement.builder()
                            .amount(123L)
                            .destinationAccountNumber("string")
                            .destinationRoutingNumber("string")
                            .remittanceInformation("string")
                            .transferId("string")
                            .build()
                    )
                    .sampleFunds(
                        Transaction.Source.SampleFunds.builder().originator("string").build()
                    )
                    .wireTransferIntention(
                        Transaction.Source.WireTransferIntention.builder()
                            .accountNumber("string")
                            .amount(123L)
                            .messageToRecipient("string")
                            .routingNumber("string")
                            .transferId("string")
                            .build()
                    )
                    .wireTransferRejection(
                        Transaction.Source.WireTransferRejection.builder()
                            .transferId("string")
                            .build()
                    )
                    .build()
            )
        assertThat(transaction.type()).isEqualTo(Transaction.Type.TRANSACTION)
    }
}
