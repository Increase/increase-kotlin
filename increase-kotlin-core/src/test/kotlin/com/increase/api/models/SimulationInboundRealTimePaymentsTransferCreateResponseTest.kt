// File generated from our OpenAPI spec by Stainless.

package com.increase.api.models

import java.time.LocalDate
import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

class SimulationInboundRealTimePaymentsTransferCreateResponseTest {

    @Test
    fun createSimulationInboundRealTimePaymentsTransferCreateResponse() {
        val simulationInboundRealTimePaymentsTransferCreateResponse =
            SimulationInboundRealTimePaymentsTransferCreateResponse.builder()
                .declinedTransaction(
                    DeclinedTransaction.builder()
                        .id("id")
                        .accountId("account_id")
                        .amount(123L)
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .currency(DeclinedTransaction.Currency.CAD)
                        .description("description")
                        .routeId("route_id")
                        .routeType(DeclinedTransaction.RouteType.ACCOUNT_NUMBER)
                        .source(
                            DeclinedTransaction.Source.builder()
                                .achDecline(
                                    DeclinedTransaction.Source.AchDecline.builder()
                                        .id("id")
                                        .amount(123L)
                                        .inboundAchTransferId("inbound_ach_transfer_id")
                                        .originatorCompanyDescriptiveDate(
                                            "originator_company_descriptive_date"
                                        )
                                        .originatorCompanyDiscretionaryData(
                                            "originator_company_discretionary_data"
                                        )
                                        .originatorCompanyId("originator_company_id")
                                        .originatorCompanyName("originator_company_name")
                                        .reason(
                                            DeclinedTransaction.Source.AchDecline.Reason
                                                .ACH_ROUTE_CANCELED
                                        )
                                        .receiverIdNumber("receiver_id_number")
                                        .receiverName("receiver_name")
                                        .traceNumber("trace_number")
                                        .type(
                                            DeclinedTransaction.Source.AchDecline.Type.ACH_DECLINE
                                        )
                                        .build()
                                )
                                .cardDecline(
                                    DeclinedTransaction.Source.CardDecline.builder()
                                        .id("id")
                                        .actioner(
                                            DeclinedTransaction.Source.CardDecline.Actioner.USER
                                        )
                                        .amount(123L)
                                        .cardPaymentId("card_payment_id")
                                        .currency(
                                            DeclinedTransaction.Source.CardDecline.Currency.CAD
                                        )
                                        .declinedTransactionId("declined_transaction_id")
                                        .digitalWalletTokenId("digital_wallet_token_id")
                                        .merchantAcceptorId("merchant_acceptor_id")
                                        .merchantCategoryCode("merchant_category_code")
                                        .merchantCity("merchant_city")
                                        .merchantCountry("merchant_country")
                                        .merchantDescriptor("merchant_descriptor")
                                        .merchantState("merchant_state")
                                        .networkDetails(
                                            DeclinedTransaction.Source.CardDecline.NetworkDetails
                                                .builder()
                                                .category(
                                                    DeclinedTransaction.Source.CardDecline
                                                        .NetworkDetails
                                                        .Category
                                                        .VISA
                                                )
                                                .visa(
                                                    DeclinedTransaction.Source.CardDecline
                                                        .NetworkDetails
                                                        .Visa
                                                        .builder()
                                                        .electronicCommerceIndicator(
                                                            DeclinedTransaction.Source.CardDecline
                                                                .NetworkDetails
                                                                .Visa
                                                                .ElectronicCommerceIndicator
                                                                .MAIL_PHONE_ORDER
                                                        )
                                                        .pointOfServiceEntryMode(
                                                            DeclinedTransaction.Source.CardDecline
                                                                .NetworkDetails
                                                                .Visa
                                                                .PointOfServiceEntryMode
                                                                .UNKNOWN
                                                        )
                                                        .build()
                                                )
                                                .build()
                                        )
                                        .networkIdentifiers(
                                            DeclinedTransaction.Source.CardDecline
                                                .NetworkIdentifiers
                                                .builder()
                                                .retrievalReferenceNumber(
                                                    "retrieval_reference_number"
                                                )
                                                .traceNumber("trace_number")
                                                .transactionId("transaction_id")
                                                .build()
                                        )
                                        .networkRiskScore(123L)
                                        .physicalCardId("physical_card_id")
                                        .presentmentAmount(123L)
                                        .presentmentCurrency("presentment_currency")
                                        .processingCategory(
                                            DeclinedTransaction.Source.CardDecline
                                                .ProcessingCategory
                                                .ACCOUNT_FUNDING
                                        )
                                        .realTimeDecisionId("real_time_decision_id")
                                        .reason(
                                            DeclinedTransaction.Source.CardDecline.Reason
                                                .CARD_NOT_ACTIVE
                                        )
                                        .verification(
                                            DeclinedTransaction.Source.CardDecline.Verification
                                                .builder()
                                                .cardVerificationCode(
                                                    DeclinedTransaction.Source.CardDecline
                                                        .Verification
                                                        .CardVerificationCode
                                                        .builder()
                                                        .result(
                                                            DeclinedTransaction.Source.CardDecline
                                                                .Verification
                                                                .CardVerificationCode
                                                                .Result
                                                                .NOT_CHECKED
                                                        )
                                                        .build()
                                                )
                                                .cardholderAddress(
                                                    DeclinedTransaction.Source.CardDecline
                                                        .Verification
                                                        .CardholderAddress
                                                        .builder()
                                                        .actualLine1("actual_line1")
                                                        .actualPostalCode("actual_postal_code")
                                                        .providedLine1("provided_line1")
                                                        .providedPostalCode("provided_postal_code")
                                                        .result(
                                                            DeclinedTransaction.Source.CardDecline
                                                                .Verification
                                                                .CardholderAddress
                                                                .Result
                                                                .NOT_CHECKED
                                                        )
                                                        .build()
                                                )
                                                .build()
                                        )
                                        .build()
                                )
                                .category(DeclinedTransaction.Source.Category.ACH_DECLINE)
                                .checkDecline(
                                    DeclinedTransaction.Source.CheckDecline.builder()
                                        .amount(123L)
                                        .auxiliaryOnUs("auxiliary_on_us")
                                        .backImageFileId("back_image_file_id")
                                        .checkTransferId("check_transfer_id")
                                        .frontImageFileId("front_image_file_id")
                                        .inboundCheckDepositId("inbound_check_deposit_id")
                                        .reason(
                                            DeclinedTransaction.Source.CheckDecline.Reason
                                                .ACH_ROUTE_DISABLED
                                        )
                                        .build()
                                )
                                .checkDepositRejection(
                                    DeclinedTransaction.Source.CheckDepositRejection.builder()
                                        .amount(123L)
                                        .checkDepositId("check_deposit_id")
                                        .currency(
                                            DeclinedTransaction.Source.CheckDepositRejection
                                                .Currency
                                                .CAD
                                        )
                                        .reason(
                                            DeclinedTransaction.Source.CheckDepositRejection.Reason
                                                .INCOMPLETE_IMAGE
                                        )
                                        .rejectedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .build()
                                )
                                .inboundRealTimePaymentsTransferDecline(
                                    DeclinedTransaction.Source
                                        .InboundRealTimePaymentsTransferDecline
                                        .builder()
                                        .amount(123L)
                                        .creditorName("creditor_name")
                                        .currency(
                                            DeclinedTransaction.Source
                                                .InboundRealTimePaymentsTransferDecline
                                                .Currency
                                                .CAD
                                        )
                                        .debtorAccountNumber("debtor_account_number")
                                        .debtorName("debtor_name")
                                        .debtorRoutingNumber("debtor_routing_number")
                                        .reason(
                                            DeclinedTransaction.Source
                                                .InboundRealTimePaymentsTransferDecline
                                                .Reason
                                                .ACCOUNT_NUMBER_CANCELED
                                        )
                                        .remittanceInformation("remittance_information")
                                        .transactionIdentification("transaction_identification")
                                        .build()
                                )
                                .internationalAchDecline(
                                    DeclinedTransaction.Source.InternationalAchDecline.builder()
                                        .amount(123L)
                                        .destinationCountryCode("destination_country_code")
                                        .destinationCurrencyCode("destination_currency_code")
                                        .foreignExchangeIndicator(
                                            DeclinedTransaction.Source.InternationalAchDecline
                                                .ForeignExchangeIndicator
                                                .FIXED_TO_VARIABLE
                                        )
                                        .foreignExchangeReference("foreign_exchange_reference")
                                        .foreignExchangeReferenceIndicator(
                                            DeclinedTransaction.Source.InternationalAchDecline
                                                .ForeignExchangeReferenceIndicator
                                                .FOREIGN_EXCHANGE_RATE
                                        )
                                        .foreignPaymentAmount(123L)
                                        .foreignTraceNumber("foreign_trace_number")
                                        .internationalTransactionTypeCode(
                                            DeclinedTransaction.Source.InternationalAchDecline
                                                .InternationalTransactionTypeCode
                                                .ANNUITY
                                        )
                                        .originatingCurrencyCode("originating_currency_code")
                                        .originatingDepositoryFinancialInstitutionBranchCountry(
                                            "originating_depository_financial_institution_branch_country"
                                        )
                                        .originatingDepositoryFinancialInstitutionId(
                                            "originating_depository_financial_institution_id"
                                        )
                                        .originatingDepositoryFinancialInstitutionIdQualifier(
                                            DeclinedTransaction.Source.InternationalAchDecline
                                                .OriginatingDepositoryFinancialInstitutionIdQualifier
                                                .NATIONAL_CLEARING_SYSTEM_NUMBER
                                        )
                                        .originatingDepositoryFinancialInstitutionName(
                                            "originating_depository_financial_institution_name"
                                        )
                                        .originatorCity("originator_city")
                                        .originatorCompanyEntryDescription(
                                            "originator_company_entry_description"
                                        )
                                        .originatorCountry("originator_country")
                                        .originatorIdentification("originator_identification")
                                        .originatorName("originator_name")
                                        .originatorPostalCode("originator_postal_code")
                                        .originatorStateOrProvince("originator_state_or_province")
                                        .originatorStreetAddress("originator_street_address")
                                        .paymentRelatedInformation("payment_related_information")
                                        .paymentRelatedInformation2("payment_related_information2")
                                        .receiverCity("receiver_city")
                                        .receiverCountry("receiver_country")
                                        .receiverIdentificationNumber(
                                            "receiver_identification_number"
                                        )
                                        .receiverPostalCode("receiver_postal_code")
                                        .receiverStateOrProvince("receiver_state_or_province")
                                        .receiverStreetAddress("receiver_street_address")
                                        .receivingCompanyOrIndividualName(
                                            "receiving_company_or_individual_name"
                                        )
                                        .receivingDepositoryFinancialInstitutionCountry(
                                            "receiving_depository_financial_institution_country"
                                        )
                                        .receivingDepositoryFinancialInstitutionId(
                                            "receiving_depository_financial_institution_id"
                                        )
                                        .receivingDepositoryFinancialInstitutionIdQualifier(
                                            DeclinedTransaction.Source.InternationalAchDecline
                                                .ReceivingDepositoryFinancialInstitutionIdQualifier
                                                .NATIONAL_CLEARING_SYSTEM_NUMBER
                                        )
                                        .receivingDepositoryFinancialInstitutionName(
                                            "receiving_depository_financial_institution_name"
                                        )
                                        .traceNumber("trace_number")
                                        .build()
                                )
                                .wireDecline(
                                    DeclinedTransaction.Source.WireDecline.builder()
                                        .inboundWireTransferId("inbound_wire_transfer_id")
                                        .reason(
                                            DeclinedTransaction.Source.WireDecline.Reason
                                                .ACCOUNT_NUMBER_CANCELED
                                        )
                                        .build()
                                )
                                .build()
                        )
                        .type(DeclinedTransaction.Type.DECLINED_TRANSACTION)
                        .build()
                )
                .transaction(
                    Transaction.builder()
                        .id("id")
                        .accountId("account_id")
                        .amount(123L)
                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                        .currency(Transaction.Currency.CAD)
                        .description("description")
                        .routeId("route_id")
                        .routeType(Transaction.RouteType.ACCOUNT_NUMBER)
                        .source(
                            Transaction.Source.builder()
                                .accountTransferIntention(
                                    Transaction.Source.AccountTransferIntention.builder()
                                        .amount(123L)
                                        .currency(
                                            Transaction.Source.AccountTransferIntention.Currency.CAD
                                        )
                                        .description("description")
                                        .destinationAccountId("destination_account_id")
                                        .sourceAccountId("source_account_id")
                                        .transferId("transfer_id")
                                        .build()
                                )
                                .achTransferIntention(
                                    Transaction.Source.AchTransferIntention.builder()
                                        .accountNumber("account_number")
                                        .amount(123L)
                                        .routingNumber("routing_number")
                                        .statementDescriptor("statement_descriptor")
                                        .transferId("transfer_id")
                                        .build()
                                )
                                .achTransferRejection(
                                    Transaction.Source.AchTransferRejection.builder()
                                        .transferId("transfer_id")
                                        .build()
                                )
                                .achTransferReturn(
                                    Transaction.Source.AchTransferReturn.builder()
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .rawReturnReasonCode("raw_return_reason_code")
                                        .returnReasonCode(
                                            Transaction.Source.AchTransferReturn.ReturnReasonCode
                                                .INSUFFICIENT_FUND
                                        )
                                        .traceNumber("trace_number")
                                        .transactionId("transaction_id")
                                        .transferId("transfer_id")
                                        .build()
                                )
                                .cardDisputeAcceptance(
                                    Transaction.Source.CardDisputeAcceptance.builder()
                                        .acceptedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .cardDisputeId("card_dispute_id")
                                        .transactionId("transaction_id")
                                        .build()
                                )
                                .cardDisputeLoss(
                                    Transaction.Source.CardDisputeLoss.builder()
                                        .cardDisputeId("card_dispute_id")
                                        .explanation("explanation")
                                        .lostAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .transactionId("transaction_id")
                                        .build()
                                )
                                .cardRefund(
                                    Transaction.Source.CardRefund.builder()
                                        .id("id")
                                        .amount(123L)
                                        .cardPaymentId("card_payment_id")
                                        .currency(Transaction.Source.CardRefund.Currency.CAD)
                                        .merchantAcceptorId("merchant_acceptor_id")
                                        .merchantCategoryCode("merchant_category_code")
                                        .merchantCity("merchant_city")
                                        .merchantCountry("merchant_country")
                                        .merchantName("merchant_name")
                                        .merchantState("merchant_state")
                                        .networkIdentifiers(
                                            Transaction.Source.CardRefund.NetworkIdentifiers
                                                .builder()
                                                .acquirerBusinessId("acquirer_business_id")
                                                .acquirerReferenceNumber(
                                                    "acquirer_reference_number"
                                                )
                                                .transactionId("transaction_id")
                                                .build()
                                        )
                                        .presentmentAmount(123L)
                                        .presentmentCurrency("presentment_currency")
                                        .purchaseDetails(
                                            Transaction.Source.CardRefund.PurchaseDetails.builder()
                                                .carRental(
                                                    Transaction.Source.CardRefund.PurchaseDetails
                                                        .CarRental
                                                        .builder()
                                                        .carClassCode("car_class_code")
                                                        .checkoutDate(LocalDate.parse("2019-12-27"))
                                                        .dailyRentalRateAmount(123L)
                                                        .dailyRentalRateCurrency(
                                                            "daily_rental_rate_currency"
                                                        )
                                                        .daysRented(123L)
                                                        .extraCharges(
                                                            Transaction.Source.CardRefund
                                                                .PurchaseDetails
                                                                .CarRental
                                                                .ExtraCharges
                                                                .NO_EXTRA_CHARGE
                                                        )
                                                        .fuelChargesAmount(123L)
                                                        .fuelChargesCurrency(
                                                            "fuel_charges_currency"
                                                        )
                                                        .insuranceChargesAmount(123L)
                                                        .insuranceChargesCurrency(
                                                            "insurance_charges_currency"
                                                        )
                                                        .noShowIndicator(
                                                            Transaction.Source.CardRefund
                                                                .PurchaseDetails
                                                                .CarRental
                                                                .NoShowIndicator
                                                                .NOT_APPLICABLE
                                                        )
                                                        .oneWayDropOffChargesAmount(123L)
                                                        .oneWayDropOffChargesCurrency(
                                                            "one_way_drop_off_charges_currency"
                                                        )
                                                        .renterName("renter_name")
                                                        .weeklyRentalRateAmount(123L)
                                                        .weeklyRentalRateCurrency(
                                                            "weekly_rental_rate_currency"
                                                        )
                                                        .build()
                                                )
                                                .customerReferenceIdentifier(
                                                    "customer_reference_identifier"
                                                )
                                                .localTaxAmount(123L)
                                                .localTaxCurrency("local_tax_currency")
                                                .lodging(
                                                    Transaction.Source.CardRefund.PurchaseDetails
                                                        .Lodging
                                                        .builder()
                                                        .checkInDate(LocalDate.parse("2019-12-27"))
                                                        .dailyRoomRateAmount(123L)
                                                        .dailyRoomRateCurrency(
                                                            "daily_room_rate_currency"
                                                        )
                                                        .extraCharges(
                                                            Transaction.Source.CardRefund
                                                                .PurchaseDetails
                                                                .Lodging
                                                                .ExtraCharges
                                                                .NO_EXTRA_CHARGE
                                                        )
                                                        .folioCashAdvancesAmount(123L)
                                                        .folioCashAdvancesCurrency(
                                                            "folio_cash_advances_currency"
                                                        )
                                                        .foodBeverageChargesAmount(123L)
                                                        .foodBeverageChargesCurrency(
                                                            "food_beverage_charges_currency"
                                                        )
                                                        .noShowIndicator(
                                                            Transaction.Source.CardRefund
                                                                .PurchaseDetails
                                                                .Lodging
                                                                .NoShowIndicator
                                                                .NOT_APPLICABLE
                                                        )
                                                        .prepaidExpensesAmount(123L)
                                                        .prepaidExpensesCurrency(
                                                            "prepaid_expenses_currency"
                                                        )
                                                        .roomNights(123L)
                                                        .totalRoomTaxAmount(123L)
                                                        .totalRoomTaxCurrency(
                                                            "total_room_tax_currency"
                                                        )
                                                        .totalTaxAmount(123L)
                                                        .totalTaxCurrency("total_tax_currency")
                                                        .build()
                                                )
                                                .nationalTaxAmount(123L)
                                                .nationalTaxCurrency("national_tax_currency")
                                                .purchaseIdentifier("purchase_identifier")
                                                .purchaseIdentifierFormat(
                                                    Transaction.Source.CardRefund.PurchaseDetails
                                                        .PurchaseIdentifierFormat
                                                        .FREE_TEXT
                                                )
                                                .travel(
                                                    Transaction.Source.CardRefund.PurchaseDetails
                                                        .Travel
                                                        .builder()
                                                        .ancillary(
                                                            Transaction.Source.CardRefund
                                                                .PurchaseDetails
                                                                .Travel
                                                                .Ancillary
                                                                .builder()
                                                                .connectedTicketDocumentNumber(
                                                                    "connected_ticket_document_number"
                                                                )
                                                                .creditReasonIndicator(
                                                                    Transaction.Source.CardRefund
                                                                        .PurchaseDetails
                                                                        .Travel
                                                                        .Ancillary
                                                                        .CreditReasonIndicator
                                                                        .NO_CREDIT
                                                                )
                                                                .passengerNameOrDescription(
                                                                    "passenger_name_or_description"
                                                                )
                                                                .services(
                                                                    listOf(
                                                                        Transaction.Source
                                                                            .CardRefund
                                                                            .PurchaseDetails
                                                                            .Travel
                                                                            .Ancillary
                                                                            .Service
                                                                            .builder()
                                                                            .category(
                                                                                Transaction.Source
                                                                                    .CardRefund
                                                                                    .PurchaseDetails
                                                                                    .Travel
                                                                                    .Ancillary
                                                                                    .Service
                                                                                    .Category
                                                                                    .NONE
                                                                            )
                                                                            .subCategory(
                                                                                "sub_category"
                                                                            )
                                                                            .build()
                                                                    )
                                                                )
                                                                .ticketDocumentNumber(
                                                                    "ticket_document_number"
                                                                )
                                                                .build()
                                                        )
                                                        .computerizedReservationSystem(
                                                            "computerized_reservation_system"
                                                        )
                                                        .creditReasonIndicator(
                                                            Transaction.Source.CardRefund
                                                                .PurchaseDetails
                                                                .Travel
                                                                .CreditReasonIndicator
                                                                .NO_CREDIT
                                                        )
                                                        .departureDate(
                                                            LocalDate.parse("2019-12-27")
                                                        )
                                                        .originationCityAirportCode(
                                                            "origination_city_airport_code"
                                                        )
                                                        .passengerName("passenger_name")
                                                        .restrictedTicketIndicator(
                                                            Transaction.Source.CardRefund
                                                                .PurchaseDetails
                                                                .Travel
                                                                .RestrictedTicketIndicator
                                                                .NO_RESTRICTIONS
                                                        )
                                                        .ticketChangeIndicator(
                                                            Transaction.Source.CardRefund
                                                                .PurchaseDetails
                                                                .Travel
                                                                .TicketChangeIndicator
                                                                .NONE
                                                        )
                                                        .ticketNumber("ticket_number")
                                                        .travelAgencyCode("travel_agency_code")
                                                        .travelAgencyName("travel_agency_name")
                                                        .tripLegs(
                                                            listOf(
                                                                Transaction.Source.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .TripLeg
                                                                    .builder()
                                                                    .carrierCode("carrier_code")
                                                                    .destinationCityAirportCode(
                                                                        "destination_city_airport_code"
                                                                    )
                                                                    .fareBasisCode(
                                                                        "fare_basis_code"
                                                                    )
                                                                    .flightNumber("flight_number")
                                                                    .serviceClass("service_class")
                                                                    .stopOverCode(
                                                                        Transaction.Source
                                                                            .CardRefund
                                                                            .PurchaseDetails
                                                                            .Travel
                                                                            .TripLeg
                                                                            .StopOverCode
                                                                            .NONE
                                                                    )
                                                                    .build()
                                                            )
                                                        )
                                                        .build()
                                                )
                                                .build()
                                        )
                                        .transactionId("transaction_id")
                                        .type(Transaction.Source.CardRefund.Type.CARD_REFUND)
                                        .build()
                                )
                                .cardRevenuePayment(
                                    Transaction.Source.CardRevenuePayment.builder()
                                        .amount(123L)
                                        .currency(
                                            Transaction.Source.CardRevenuePayment.Currency.CAD
                                        )
                                        .periodEnd(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .periodStart(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .transactedOnAccountId("transacted_on_account_id")
                                        .build()
                                )
                                .cardSettlement(
                                    Transaction.Source.CardSettlement.builder()
                                        .id("id")
                                        .amount(123L)
                                        .cardAuthorization("card_authorization")
                                        .cardPaymentId("card_payment_id")
                                        .currency(Transaction.Source.CardSettlement.Currency.CAD)
                                        .merchantAcceptorId("merchant_acceptor_id")
                                        .merchantCategoryCode("merchant_category_code")
                                        .merchantCity("merchant_city")
                                        .merchantCountry("merchant_country")
                                        .merchantName("merchant_name")
                                        .merchantState("merchant_state")
                                        .networkIdentifiers(
                                            Transaction.Source.CardSettlement.NetworkIdentifiers
                                                .builder()
                                                .acquirerBusinessId("acquirer_business_id")
                                                .acquirerReferenceNumber(
                                                    "acquirer_reference_number"
                                                )
                                                .transactionId("transaction_id")
                                                .build()
                                        )
                                        .pendingTransactionId("pending_transaction_id")
                                        .presentmentAmount(123L)
                                        .presentmentCurrency("presentment_currency")
                                        .purchaseDetails(
                                            Transaction.Source.CardSettlement.PurchaseDetails
                                                .builder()
                                                .carRental(
                                                    Transaction.Source.CardSettlement
                                                        .PurchaseDetails
                                                        .CarRental
                                                        .builder()
                                                        .carClassCode("car_class_code")
                                                        .checkoutDate(LocalDate.parse("2019-12-27"))
                                                        .dailyRentalRateAmount(123L)
                                                        .dailyRentalRateCurrency(
                                                            "daily_rental_rate_currency"
                                                        )
                                                        .daysRented(123L)
                                                        .extraCharges(
                                                            Transaction.Source.CardSettlement
                                                                .PurchaseDetails
                                                                .CarRental
                                                                .ExtraCharges
                                                                .NO_EXTRA_CHARGE
                                                        )
                                                        .fuelChargesAmount(123L)
                                                        .fuelChargesCurrency(
                                                            "fuel_charges_currency"
                                                        )
                                                        .insuranceChargesAmount(123L)
                                                        .insuranceChargesCurrency(
                                                            "insurance_charges_currency"
                                                        )
                                                        .noShowIndicator(
                                                            Transaction.Source.CardSettlement
                                                                .PurchaseDetails
                                                                .CarRental
                                                                .NoShowIndicator
                                                                .NOT_APPLICABLE
                                                        )
                                                        .oneWayDropOffChargesAmount(123L)
                                                        .oneWayDropOffChargesCurrency(
                                                            "one_way_drop_off_charges_currency"
                                                        )
                                                        .renterName("renter_name")
                                                        .weeklyRentalRateAmount(123L)
                                                        .weeklyRentalRateCurrency(
                                                            "weekly_rental_rate_currency"
                                                        )
                                                        .build()
                                                )
                                                .customerReferenceIdentifier(
                                                    "customer_reference_identifier"
                                                )
                                                .localTaxAmount(123L)
                                                .localTaxCurrency("local_tax_currency")
                                                .lodging(
                                                    Transaction.Source.CardSettlement
                                                        .PurchaseDetails
                                                        .Lodging
                                                        .builder()
                                                        .checkInDate(LocalDate.parse("2019-12-27"))
                                                        .dailyRoomRateAmount(123L)
                                                        .dailyRoomRateCurrency(
                                                            "daily_room_rate_currency"
                                                        )
                                                        .extraCharges(
                                                            Transaction.Source.CardSettlement
                                                                .PurchaseDetails
                                                                .Lodging
                                                                .ExtraCharges
                                                                .NO_EXTRA_CHARGE
                                                        )
                                                        .folioCashAdvancesAmount(123L)
                                                        .folioCashAdvancesCurrency(
                                                            "folio_cash_advances_currency"
                                                        )
                                                        .foodBeverageChargesAmount(123L)
                                                        .foodBeverageChargesCurrency(
                                                            "food_beverage_charges_currency"
                                                        )
                                                        .noShowIndicator(
                                                            Transaction.Source.CardSettlement
                                                                .PurchaseDetails
                                                                .Lodging
                                                                .NoShowIndicator
                                                                .NOT_APPLICABLE
                                                        )
                                                        .prepaidExpensesAmount(123L)
                                                        .prepaidExpensesCurrency(
                                                            "prepaid_expenses_currency"
                                                        )
                                                        .roomNights(123L)
                                                        .totalRoomTaxAmount(123L)
                                                        .totalRoomTaxCurrency(
                                                            "total_room_tax_currency"
                                                        )
                                                        .totalTaxAmount(123L)
                                                        .totalTaxCurrency("total_tax_currency")
                                                        .build()
                                                )
                                                .nationalTaxAmount(123L)
                                                .nationalTaxCurrency("national_tax_currency")
                                                .purchaseIdentifier("purchase_identifier")
                                                .purchaseIdentifierFormat(
                                                    Transaction.Source.CardSettlement
                                                        .PurchaseDetails
                                                        .PurchaseIdentifierFormat
                                                        .FREE_TEXT
                                                )
                                                .travel(
                                                    Transaction.Source.CardSettlement
                                                        .PurchaseDetails
                                                        .Travel
                                                        .builder()
                                                        .ancillary(
                                                            Transaction.Source.CardSettlement
                                                                .PurchaseDetails
                                                                .Travel
                                                                .Ancillary
                                                                .builder()
                                                                .connectedTicketDocumentNumber(
                                                                    "connected_ticket_document_number"
                                                                )
                                                                .creditReasonIndicator(
                                                                    Transaction.Source
                                                                        .CardSettlement
                                                                        .PurchaseDetails
                                                                        .Travel
                                                                        .Ancillary
                                                                        .CreditReasonIndicator
                                                                        .NO_CREDIT
                                                                )
                                                                .passengerNameOrDescription(
                                                                    "passenger_name_or_description"
                                                                )
                                                                .services(
                                                                    listOf(
                                                                        Transaction.Source
                                                                            .CardSettlement
                                                                            .PurchaseDetails
                                                                            .Travel
                                                                            .Ancillary
                                                                            .Service
                                                                            .builder()
                                                                            .category(
                                                                                Transaction.Source
                                                                                    .CardSettlement
                                                                                    .PurchaseDetails
                                                                                    .Travel
                                                                                    .Ancillary
                                                                                    .Service
                                                                                    .Category
                                                                                    .NONE
                                                                            )
                                                                            .subCategory(
                                                                                "sub_category"
                                                                            )
                                                                            .build()
                                                                    )
                                                                )
                                                                .ticketDocumentNumber(
                                                                    "ticket_document_number"
                                                                )
                                                                .build()
                                                        )
                                                        .computerizedReservationSystem(
                                                            "computerized_reservation_system"
                                                        )
                                                        .creditReasonIndicator(
                                                            Transaction.Source.CardSettlement
                                                                .PurchaseDetails
                                                                .Travel
                                                                .CreditReasonIndicator
                                                                .NO_CREDIT
                                                        )
                                                        .departureDate(
                                                            LocalDate.parse("2019-12-27")
                                                        )
                                                        .originationCityAirportCode(
                                                            "origination_city_airport_code"
                                                        )
                                                        .passengerName("passenger_name")
                                                        .restrictedTicketIndicator(
                                                            Transaction.Source.CardSettlement
                                                                .PurchaseDetails
                                                                .Travel
                                                                .RestrictedTicketIndicator
                                                                .NO_RESTRICTIONS
                                                        )
                                                        .ticketChangeIndicator(
                                                            Transaction.Source.CardSettlement
                                                                .PurchaseDetails
                                                                .Travel
                                                                .TicketChangeIndicator
                                                                .NONE
                                                        )
                                                        .ticketNumber("ticket_number")
                                                        .travelAgencyCode("travel_agency_code")
                                                        .travelAgencyName("travel_agency_name")
                                                        .tripLegs(
                                                            listOf(
                                                                Transaction.Source.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .TripLeg
                                                                    .builder()
                                                                    .carrierCode("carrier_code")
                                                                    .destinationCityAirportCode(
                                                                        "destination_city_airport_code"
                                                                    )
                                                                    .fareBasisCode(
                                                                        "fare_basis_code"
                                                                    )
                                                                    .flightNumber("flight_number")
                                                                    .serviceClass("service_class")
                                                                    .stopOverCode(
                                                                        Transaction.Source
                                                                            .CardSettlement
                                                                            .PurchaseDetails
                                                                            .Travel
                                                                            .TripLeg
                                                                            .StopOverCode
                                                                            .NONE
                                                                    )
                                                                    .build()
                                                            )
                                                        )
                                                        .build()
                                                )
                                                .build()
                                        )
                                        .transactionId("transaction_id")
                                        .type(
                                            Transaction.Source.CardSettlement.Type.CARD_SETTLEMENT
                                        )
                                        .build()
                                )
                                .cashbackPayment(
                                    Transaction.Source.CashbackPayment.builder()
                                        .accruedOnCardId("accrued_on_card_id")
                                        .amount(123L)
                                        .currency(Transaction.Source.CashbackPayment.Currency.CAD)
                                        .periodEnd(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .periodStart(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .build()
                                )
                                .category(Transaction.Source.Category.ACCOUNT_TRANSFER_INTENTION)
                                .checkDepositAcceptance(
                                    Transaction.Source.CheckDepositAcceptance.builder()
                                        .accountNumber("account_number")
                                        .amount(123L)
                                        .auxiliaryOnUs("auxiliary_on_us")
                                        .checkDepositId("check_deposit_id")
                                        .currency(
                                            Transaction.Source.CheckDepositAcceptance.Currency.CAD
                                        )
                                        .routingNumber("routing_number")
                                        .serialNumber("serial_number")
                                        .build()
                                )
                                .checkDepositReturn(
                                    Transaction.Source.CheckDepositReturn.builder()
                                        .amount(123L)
                                        .checkDepositId("check_deposit_id")
                                        .currency(
                                            Transaction.Source.CheckDepositReturn.Currency.CAD
                                        )
                                        .returnReason(
                                            Transaction.Source.CheckDepositReturn.ReturnReason
                                                .ACH_CONVERSION_NOT_SUPPORTED
                                        )
                                        .returnedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .transactionId("transaction_id")
                                        .build()
                                )
                                .checkTransferDeposit(
                                    Transaction.Source.CheckTransferDeposit.builder()
                                        .backImageFileId("back_image_file_id")
                                        .bankOfFirstDepositRoutingNumber(
                                            "bank_of_first_deposit_routing_number"
                                        )
                                        .depositedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .frontImageFileId("front_image_file_id")
                                        .inboundCheckDepositId("inbound_check_deposit_id")
                                        .transactionId("transaction_id")
                                        .transferId("transfer_id")
                                        .type(
                                            Transaction.Source.CheckTransferDeposit.Type
                                                .CHECK_TRANSFER_DEPOSIT
                                        )
                                        .build()
                                )
                                .checkTransferStopPaymentRequest(
                                    Transaction.Source.CheckTransferStopPaymentRequest.builder()
                                        .reason(
                                            Transaction.Source.CheckTransferStopPaymentRequest
                                                .Reason
                                                .MAIL_DELIVERY_FAILED
                                        )
                                        .requestedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .transferId("transfer_id")
                                        .type(
                                            Transaction.Source.CheckTransferStopPaymentRequest.Type
                                                .CHECK_TRANSFER_STOP_PAYMENT_REQUEST
                                        )
                                        .build()
                                )
                                .feePayment(
                                    Transaction.Source.FeePayment.builder()
                                        .amount(123L)
                                        .currency(Transaction.Source.FeePayment.Currency.CAD)
                                        .feePeriodStart(LocalDate.parse("2019-12-27"))
                                        .build()
                                )
                                .inboundAchTransfer(
                                    Transaction.Source.InboundAchTransfer.builder()
                                        .addenda(
                                            Transaction.Source.InboundAchTransfer.Addenda.builder()
                                                .category(
                                                    Transaction.Source.InboundAchTransfer.Addenda
                                                        .Category
                                                        .FREEFORM
                                                )
                                                .freeform(
                                                    Transaction.Source.InboundAchTransfer.Addenda
                                                        .Freeform
                                                        .builder()
                                                        .entries(
                                                            listOf(
                                                                Transaction.Source
                                                                    .InboundAchTransfer
                                                                    .Addenda
                                                                    .Freeform
                                                                    .Entry
                                                                    .builder()
                                                                    .paymentRelatedInformation(
                                                                        "payment_related_information"
                                                                    )
                                                                    .build()
                                                            )
                                                        )
                                                        .build()
                                                )
                                                .build()
                                        )
                                        .amount(123L)
                                        .originatorCompanyDescriptiveDate(
                                            "originator_company_descriptive_date"
                                        )
                                        .originatorCompanyDiscretionaryData(
                                            "originator_company_discretionary_data"
                                        )
                                        .originatorCompanyEntryDescription(
                                            "originator_company_entry_description"
                                        )
                                        .originatorCompanyId("originator_company_id")
                                        .originatorCompanyName("originator_company_name")
                                        .receiverIdNumber("receiver_id_number")
                                        .receiverName("receiver_name")
                                        .traceNumber("trace_number")
                                        .transferId("transfer_id")
                                        .build()
                                )
                                .inboundInternationalAchTransfer(
                                    Transaction.Source.InboundInternationalAchTransfer.builder()
                                        .amount(123L)
                                        .destinationCountryCode("destination_country_code")
                                        .destinationCurrencyCode("destination_currency_code")
                                        .foreignExchangeIndicator(
                                            Transaction.Source.InboundInternationalAchTransfer
                                                .ForeignExchangeIndicator
                                                .FIXED_TO_VARIABLE
                                        )
                                        .foreignExchangeReference("foreign_exchange_reference")
                                        .foreignExchangeReferenceIndicator(
                                            Transaction.Source.InboundInternationalAchTransfer
                                                .ForeignExchangeReferenceIndicator
                                                .FOREIGN_EXCHANGE_RATE
                                        )
                                        .foreignPaymentAmount(123L)
                                        .foreignTraceNumber("foreign_trace_number")
                                        .internationalTransactionTypeCode(
                                            Transaction.Source.InboundInternationalAchTransfer
                                                .InternationalTransactionTypeCode
                                                .ANNUITY
                                        )
                                        .originatingCurrencyCode("originating_currency_code")
                                        .originatingDepositoryFinancialInstitutionBranchCountry(
                                            "originating_depository_financial_institution_branch_country"
                                        )
                                        .originatingDepositoryFinancialInstitutionId(
                                            "originating_depository_financial_institution_id"
                                        )
                                        .originatingDepositoryFinancialInstitutionIdQualifier(
                                            Transaction.Source.InboundInternationalAchTransfer
                                                .OriginatingDepositoryFinancialInstitutionIdQualifier
                                                .NATIONAL_CLEARING_SYSTEM_NUMBER
                                        )
                                        .originatingDepositoryFinancialInstitutionName(
                                            "originating_depository_financial_institution_name"
                                        )
                                        .originatorCity("originator_city")
                                        .originatorCompanyEntryDescription(
                                            "originator_company_entry_description"
                                        )
                                        .originatorCountry("originator_country")
                                        .originatorIdentification("originator_identification")
                                        .originatorName("originator_name")
                                        .originatorPostalCode("originator_postal_code")
                                        .originatorStateOrProvince("originator_state_or_province")
                                        .originatorStreetAddress("originator_street_address")
                                        .paymentRelatedInformation("payment_related_information")
                                        .paymentRelatedInformation2("payment_related_information2")
                                        .receiverCity("receiver_city")
                                        .receiverCountry("receiver_country")
                                        .receiverIdentificationNumber(
                                            "receiver_identification_number"
                                        )
                                        .receiverPostalCode("receiver_postal_code")
                                        .receiverStateOrProvince("receiver_state_or_province")
                                        .receiverStreetAddress("receiver_street_address")
                                        .receivingCompanyOrIndividualName(
                                            "receiving_company_or_individual_name"
                                        )
                                        .receivingDepositoryFinancialInstitutionCountry(
                                            "receiving_depository_financial_institution_country"
                                        )
                                        .receivingDepositoryFinancialInstitutionId(
                                            "receiving_depository_financial_institution_id"
                                        )
                                        .receivingDepositoryFinancialInstitutionIdQualifier(
                                            Transaction.Source.InboundInternationalAchTransfer
                                                .ReceivingDepositoryFinancialInstitutionIdQualifier
                                                .NATIONAL_CLEARING_SYSTEM_NUMBER
                                        )
                                        .receivingDepositoryFinancialInstitutionName(
                                            "receiving_depository_financial_institution_name"
                                        )
                                        .traceNumber("trace_number")
                                        .type(
                                            Transaction.Source.InboundInternationalAchTransfer.Type
                                                .INBOUND_INTERNATIONAL_ACH_TRANSFER
                                        )
                                        .build()
                                )
                                .inboundRealTimePaymentsTransferConfirmation(
                                    Transaction.Source.InboundRealTimePaymentsTransferConfirmation
                                        .builder()
                                        .amount(123L)
                                        .creditorName("creditor_name")
                                        .currency(
                                            Transaction.Source
                                                .InboundRealTimePaymentsTransferConfirmation
                                                .Currency
                                                .CAD
                                        )
                                        .debtorAccountNumber("debtor_account_number")
                                        .debtorName("debtor_name")
                                        .debtorRoutingNumber("debtor_routing_number")
                                        .remittanceInformation("remittance_information")
                                        .transactionIdentification("transaction_identification")
                                        .build()
                                )
                                .inboundWireDrawdownPayment(
                                    Transaction.Source.InboundWireDrawdownPayment.builder()
                                        .amount(123L)
                                        .beneficiaryAddressLine1("beneficiary_address_line1")
                                        .beneficiaryAddressLine2("beneficiary_address_line2")
                                        .beneficiaryAddressLine3("beneficiary_address_line3")
                                        .beneficiaryName("beneficiary_name")
                                        .beneficiaryReference("beneficiary_reference")
                                        .description("description")
                                        .inputMessageAccountabilityData(
                                            "input_message_accountability_data"
                                        )
                                        .originatorAddressLine1("originator_address_line1")
                                        .originatorAddressLine2("originator_address_line2")
                                        .originatorAddressLine3("originator_address_line3")
                                        .originatorName("originator_name")
                                        .originatorRoutingNumber("originator_routing_number")
                                        .originatorToBeneficiaryInformation(
                                            "originator_to_beneficiary_information"
                                        )
                                        .originatorToBeneficiaryInformationLine1(
                                            "originator_to_beneficiary_information_line1"
                                        )
                                        .originatorToBeneficiaryInformationLine2(
                                            "originator_to_beneficiary_information_line2"
                                        )
                                        .originatorToBeneficiaryInformationLine3(
                                            "originator_to_beneficiary_information_line3"
                                        )
                                        .originatorToBeneficiaryInformationLine4(
                                            "originator_to_beneficiary_information_line4"
                                        )
                                        .build()
                                )
                                .inboundWireReversal(
                                    Transaction.Source.InboundWireReversal.builder()
                                        .amount(123L)
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .description("description")
                                        .financialInstitutionToFinancialInstitutionInformation(
                                            "financial_institution_to_financial_institution_information"
                                        )
                                        .inputCycleDate(LocalDate.parse("2019-12-27"))
                                        .inputMessageAccountabilityData(
                                            "input_message_accountability_data"
                                        )
                                        .inputSequenceNumber("input_sequence_number")
                                        .inputSource("input_source")
                                        .originatorRoutingNumber("originator_routing_number")
                                        .previousMessageInputCycleDate(
                                            LocalDate.parse("2019-12-27")
                                        )
                                        .previousMessageInputMessageAccountabilityData(
                                            "previous_message_input_message_accountability_data"
                                        )
                                        .previousMessageInputSequenceNumber(
                                            "previous_message_input_sequence_number"
                                        )
                                        .previousMessageInputSource("previous_message_input_source")
                                        .receiverFinancialInstitutionInformation(
                                            "receiver_financial_institution_information"
                                        )
                                        .transactionId("transaction_id")
                                        .wireTransferId("wire_transfer_id")
                                        .build()
                                )
                                .inboundWireTransfer(
                                    Transaction.Source.InboundWireTransfer.builder()
                                        .amount(123L)
                                        .beneficiaryAddressLine1("beneficiary_address_line1")
                                        .beneficiaryAddressLine2("beneficiary_address_line2")
                                        .beneficiaryAddressLine3("beneficiary_address_line3")
                                        .beneficiaryName("beneficiary_name")
                                        .beneficiaryReference("beneficiary_reference")
                                        .description("description")
                                        .inputMessageAccountabilityData(
                                            "input_message_accountability_data"
                                        )
                                        .originatorAddressLine1("originator_address_line1")
                                        .originatorAddressLine2("originator_address_line2")
                                        .originatorAddressLine3("originator_address_line3")
                                        .originatorName("originator_name")
                                        .originatorRoutingNumber("originator_routing_number")
                                        .originatorToBeneficiaryInformation(
                                            "originator_to_beneficiary_information"
                                        )
                                        .originatorToBeneficiaryInformationLine1(
                                            "originator_to_beneficiary_information_line1"
                                        )
                                        .originatorToBeneficiaryInformationLine2(
                                            "originator_to_beneficiary_information_line2"
                                        )
                                        .originatorToBeneficiaryInformationLine3(
                                            "originator_to_beneficiary_information_line3"
                                        )
                                        .originatorToBeneficiaryInformationLine4(
                                            "originator_to_beneficiary_information_line4"
                                        )
                                        .transferId("transfer_id")
                                        .build()
                                )
                                .interestPayment(
                                    Transaction.Source.InterestPayment.builder()
                                        .accruedOnAccountId("accrued_on_account_id")
                                        .amount(123L)
                                        .currency(Transaction.Source.InterestPayment.Currency.CAD)
                                        .periodEnd(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .periodStart(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .build()
                                )
                                .internalSource(
                                    Transaction.Source.InternalSource.builder()
                                        .amount(123L)
                                        .currency(Transaction.Source.InternalSource.Currency.CAD)
                                        .reason(
                                            Transaction.Source.InternalSource.Reason.ACCOUNT_CLOSURE
                                        )
                                        .build()
                                )
                                .realTimePaymentsTransferAcknowledgement(
                                    Transaction.Source.RealTimePaymentsTransferAcknowledgement
                                        .builder()
                                        .amount(123L)
                                        .destinationAccountNumber("destination_account_number")
                                        .destinationRoutingNumber("destination_routing_number")
                                        .remittanceInformation("remittance_information")
                                        .transferId("transfer_id")
                                        .build()
                                )
                                .sampleFunds(
                                    Transaction.Source.SampleFunds.builder()
                                        .originator("originator")
                                        .build()
                                )
                                .wireTransferIntention(
                                    Transaction.Source.WireTransferIntention.builder()
                                        .accountNumber("account_number")
                                        .amount(123L)
                                        .messageToRecipient("message_to_recipient")
                                        .routingNumber("routing_number")
                                        .transferId("transfer_id")
                                        .build()
                                )
                                .wireTransferRejection(
                                    Transaction.Source.WireTransferRejection.builder()
                                        .transferId("transfer_id")
                                        .build()
                                )
                                .build()
                        )
                        .type(Transaction.Type.TRANSACTION)
                        .build()
                )
                .type(
                    SimulationInboundRealTimePaymentsTransferCreateResponse.Type
                        .INBOUND_REAL_TIME_PAYMENTS_TRANSFER_SIMULATION_RESULT
                )
                .build()
        assertThat(simulationInboundRealTimePaymentsTransferCreateResponse).isNotNull
        assertThat(simulationInboundRealTimePaymentsTransferCreateResponse.declinedTransaction())
            .isEqualTo(
                DeclinedTransaction.builder()
                    .id("id")
                    .accountId("account_id")
                    .amount(123L)
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .currency(DeclinedTransaction.Currency.CAD)
                    .description("description")
                    .routeId("route_id")
                    .routeType(DeclinedTransaction.RouteType.ACCOUNT_NUMBER)
                    .source(
                        DeclinedTransaction.Source.builder()
                            .achDecline(
                                DeclinedTransaction.Source.AchDecline.builder()
                                    .id("id")
                                    .amount(123L)
                                    .inboundAchTransferId("inbound_ach_transfer_id")
                                    .originatorCompanyDescriptiveDate(
                                        "originator_company_descriptive_date"
                                    )
                                    .originatorCompanyDiscretionaryData(
                                        "originator_company_discretionary_data"
                                    )
                                    .originatorCompanyId("originator_company_id")
                                    .originatorCompanyName("originator_company_name")
                                    .reason(
                                        DeclinedTransaction.Source.AchDecline.Reason
                                            .ACH_ROUTE_CANCELED
                                    )
                                    .receiverIdNumber("receiver_id_number")
                                    .receiverName("receiver_name")
                                    .traceNumber("trace_number")
                                    .type(DeclinedTransaction.Source.AchDecline.Type.ACH_DECLINE)
                                    .build()
                            )
                            .cardDecline(
                                DeclinedTransaction.Source.CardDecline.builder()
                                    .id("id")
                                    .actioner(DeclinedTransaction.Source.CardDecline.Actioner.USER)
                                    .amount(123L)
                                    .cardPaymentId("card_payment_id")
                                    .currency(DeclinedTransaction.Source.CardDecline.Currency.CAD)
                                    .declinedTransactionId("declined_transaction_id")
                                    .digitalWalletTokenId("digital_wallet_token_id")
                                    .merchantAcceptorId("merchant_acceptor_id")
                                    .merchantCategoryCode("merchant_category_code")
                                    .merchantCity("merchant_city")
                                    .merchantCountry("merchant_country")
                                    .merchantDescriptor("merchant_descriptor")
                                    .merchantState("merchant_state")
                                    .networkDetails(
                                        DeclinedTransaction.Source.CardDecline.NetworkDetails
                                            .builder()
                                            .category(
                                                DeclinedTransaction.Source.CardDecline
                                                    .NetworkDetails
                                                    .Category
                                                    .VISA
                                            )
                                            .visa(
                                                DeclinedTransaction.Source.CardDecline
                                                    .NetworkDetails
                                                    .Visa
                                                    .builder()
                                                    .electronicCommerceIndicator(
                                                        DeclinedTransaction.Source.CardDecline
                                                            .NetworkDetails
                                                            .Visa
                                                            .ElectronicCommerceIndicator
                                                            .MAIL_PHONE_ORDER
                                                    )
                                                    .pointOfServiceEntryMode(
                                                        DeclinedTransaction.Source.CardDecline
                                                            .NetworkDetails
                                                            .Visa
                                                            .PointOfServiceEntryMode
                                                            .UNKNOWN
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .networkIdentifiers(
                                        DeclinedTransaction.Source.CardDecline.NetworkIdentifiers
                                            .builder()
                                            .retrievalReferenceNumber("retrieval_reference_number")
                                            .traceNumber("trace_number")
                                            .transactionId("transaction_id")
                                            .build()
                                    )
                                    .networkRiskScore(123L)
                                    .physicalCardId("physical_card_id")
                                    .presentmentAmount(123L)
                                    .presentmentCurrency("presentment_currency")
                                    .processingCategory(
                                        DeclinedTransaction.Source.CardDecline.ProcessingCategory
                                            .ACCOUNT_FUNDING
                                    )
                                    .realTimeDecisionId("real_time_decision_id")
                                    .reason(
                                        DeclinedTransaction.Source.CardDecline.Reason
                                            .CARD_NOT_ACTIVE
                                    )
                                    .verification(
                                        DeclinedTransaction.Source.CardDecline.Verification
                                            .builder()
                                            .cardVerificationCode(
                                                DeclinedTransaction.Source.CardDecline.Verification
                                                    .CardVerificationCode
                                                    .builder()
                                                    .result(
                                                        DeclinedTransaction.Source.CardDecline
                                                            .Verification
                                                            .CardVerificationCode
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .cardholderAddress(
                                                DeclinedTransaction.Source.CardDecline.Verification
                                                    .CardholderAddress
                                                    .builder()
                                                    .actualLine1("actual_line1")
                                                    .actualPostalCode("actual_postal_code")
                                                    .providedLine1("provided_line1")
                                                    .providedPostalCode("provided_postal_code")
                                                    .result(
                                                        DeclinedTransaction.Source.CardDecline
                                                            .Verification
                                                            .CardholderAddress
                                                            .Result
                                                            .NOT_CHECKED
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .build()
                            )
                            .category(DeclinedTransaction.Source.Category.ACH_DECLINE)
                            .checkDecline(
                                DeclinedTransaction.Source.CheckDecline.builder()
                                    .amount(123L)
                                    .auxiliaryOnUs("auxiliary_on_us")
                                    .backImageFileId("back_image_file_id")
                                    .checkTransferId("check_transfer_id")
                                    .frontImageFileId("front_image_file_id")
                                    .inboundCheckDepositId("inbound_check_deposit_id")
                                    .reason(
                                        DeclinedTransaction.Source.CheckDecline.Reason
                                            .ACH_ROUTE_DISABLED
                                    )
                                    .build()
                            )
                            .checkDepositRejection(
                                DeclinedTransaction.Source.CheckDepositRejection.builder()
                                    .amount(123L)
                                    .checkDepositId("check_deposit_id")
                                    .currency(
                                        DeclinedTransaction.Source.CheckDepositRejection.Currency
                                            .CAD
                                    )
                                    .reason(
                                        DeclinedTransaction.Source.CheckDepositRejection.Reason
                                            .INCOMPLETE_IMAGE
                                    )
                                    .rejectedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .inboundRealTimePaymentsTransferDecline(
                                DeclinedTransaction.Source.InboundRealTimePaymentsTransferDecline
                                    .builder()
                                    .amount(123L)
                                    .creditorName("creditor_name")
                                    .currency(
                                        DeclinedTransaction.Source
                                            .InboundRealTimePaymentsTransferDecline
                                            .Currency
                                            .CAD
                                    )
                                    .debtorAccountNumber("debtor_account_number")
                                    .debtorName("debtor_name")
                                    .debtorRoutingNumber("debtor_routing_number")
                                    .reason(
                                        DeclinedTransaction.Source
                                            .InboundRealTimePaymentsTransferDecline
                                            .Reason
                                            .ACCOUNT_NUMBER_CANCELED
                                    )
                                    .remittanceInformation("remittance_information")
                                    .transactionIdentification("transaction_identification")
                                    .build()
                            )
                            .internationalAchDecline(
                                DeclinedTransaction.Source.InternationalAchDecline.builder()
                                    .amount(123L)
                                    .destinationCountryCode("destination_country_code")
                                    .destinationCurrencyCode("destination_currency_code")
                                    .foreignExchangeIndicator(
                                        DeclinedTransaction.Source.InternationalAchDecline
                                            .ForeignExchangeIndicator
                                            .FIXED_TO_VARIABLE
                                    )
                                    .foreignExchangeReference("foreign_exchange_reference")
                                    .foreignExchangeReferenceIndicator(
                                        DeclinedTransaction.Source.InternationalAchDecline
                                            .ForeignExchangeReferenceIndicator
                                            .FOREIGN_EXCHANGE_RATE
                                    )
                                    .foreignPaymentAmount(123L)
                                    .foreignTraceNumber("foreign_trace_number")
                                    .internationalTransactionTypeCode(
                                        DeclinedTransaction.Source.InternationalAchDecline
                                            .InternationalTransactionTypeCode
                                            .ANNUITY
                                    )
                                    .originatingCurrencyCode("originating_currency_code")
                                    .originatingDepositoryFinancialInstitutionBranchCountry(
                                        "originating_depository_financial_institution_branch_country"
                                    )
                                    .originatingDepositoryFinancialInstitutionId(
                                        "originating_depository_financial_institution_id"
                                    )
                                    .originatingDepositoryFinancialInstitutionIdQualifier(
                                        DeclinedTransaction.Source.InternationalAchDecline
                                            .OriginatingDepositoryFinancialInstitutionIdQualifier
                                            .NATIONAL_CLEARING_SYSTEM_NUMBER
                                    )
                                    .originatingDepositoryFinancialInstitutionName(
                                        "originating_depository_financial_institution_name"
                                    )
                                    .originatorCity("originator_city")
                                    .originatorCompanyEntryDescription(
                                        "originator_company_entry_description"
                                    )
                                    .originatorCountry("originator_country")
                                    .originatorIdentification("originator_identification")
                                    .originatorName("originator_name")
                                    .originatorPostalCode("originator_postal_code")
                                    .originatorStateOrProvince("originator_state_or_province")
                                    .originatorStreetAddress("originator_street_address")
                                    .paymentRelatedInformation("payment_related_information")
                                    .paymentRelatedInformation2("payment_related_information2")
                                    .receiverCity("receiver_city")
                                    .receiverCountry("receiver_country")
                                    .receiverIdentificationNumber("receiver_identification_number")
                                    .receiverPostalCode("receiver_postal_code")
                                    .receiverStateOrProvince("receiver_state_or_province")
                                    .receiverStreetAddress("receiver_street_address")
                                    .receivingCompanyOrIndividualName(
                                        "receiving_company_or_individual_name"
                                    )
                                    .receivingDepositoryFinancialInstitutionCountry(
                                        "receiving_depository_financial_institution_country"
                                    )
                                    .receivingDepositoryFinancialInstitutionId(
                                        "receiving_depository_financial_institution_id"
                                    )
                                    .receivingDepositoryFinancialInstitutionIdQualifier(
                                        DeclinedTransaction.Source.InternationalAchDecline
                                            .ReceivingDepositoryFinancialInstitutionIdQualifier
                                            .NATIONAL_CLEARING_SYSTEM_NUMBER
                                    )
                                    .receivingDepositoryFinancialInstitutionName(
                                        "receiving_depository_financial_institution_name"
                                    )
                                    .traceNumber("trace_number")
                                    .build()
                            )
                            .wireDecline(
                                DeclinedTransaction.Source.WireDecline.builder()
                                    .inboundWireTransferId("inbound_wire_transfer_id")
                                    .reason(
                                        DeclinedTransaction.Source.WireDecline.Reason
                                            .ACCOUNT_NUMBER_CANCELED
                                    )
                                    .build()
                            )
                            .build()
                    )
                    .type(DeclinedTransaction.Type.DECLINED_TRANSACTION)
                    .build()
            )
        assertThat(simulationInboundRealTimePaymentsTransferCreateResponse.transaction())
            .isEqualTo(
                Transaction.builder()
                    .id("id")
                    .accountId("account_id")
                    .amount(123L)
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .currency(Transaction.Currency.CAD)
                    .description("description")
                    .routeId("route_id")
                    .routeType(Transaction.RouteType.ACCOUNT_NUMBER)
                    .source(
                        Transaction.Source.builder()
                            .accountTransferIntention(
                                Transaction.Source.AccountTransferIntention.builder()
                                    .amount(123L)
                                    .currency(
                                        Transaction.Source.AccountTransferIntention.Currency.CAD
                                    )
                                    .description("description")
                                    .destinationAccountId("destination_account_id")
                                    .sourceAccountId("source_account_id")
                                    .transferId("transfer_id")
                                    .build()
                            )
                            .achTransferIntention(
                                Transaction.Source.AchTransferIntention.builder()
                                    .accountNumber("account_number")
                                    .amount(123L)
                                    .routingNumber("routing_number")
                                    .statementDescriptor("statement_descriptor")
                                    .transferId("transfer_id")
                                    .build()
                            )
                            .achTransferRejection(
                                Transaction.Source.AchTransferRejection.builder()
                                    .transferId("transfer_id")
                                    .build()
                            )
                            .achTransferReturn(
                                Transaction.Source.AchTransferReturn.builder()
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .rawReturnReasonCode("raw_return_reason_code")
                                    .returnReasonCode(
                                        Transaction.Source.AchTransferReturn.ReturnReasonCode
                                            .INSUFFICIENT_FUND
                                    )
                                    .traceNumber("trace_number")
                                    .transactionId("transaction_id")
                                    .transferId("transfer_id")
                                    .build()
                            )
                            .cardDisputeAcceptance(
                                Transaction.Source.CardDisputeAcceptance.builder()
                                    .acceptedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .cardDisputeId("card_dispute_id")
                                    .transactionId("transaction_id")
                                    .build()
                            )
                            .cardDisputeLoss(
                                Transaction.Source.CardDisputeLoss.builder()
                                    .cardDisputeId("card_dispute_id")
                                    .explanation("explanation")
                                    .lostAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .transactionId("transaction_id")
                                    .build()
                            )
                            .cardRefund(
                                Transaction.Source.CardRefund.builder()
                                    .id("id")
                                    .amount(123L)
                                    .cardPaymentId("card_payment_id")
                                    .currency(Transaction.Source.CardRefund.Currency.CAD)
                                    .merchantAcceptorId("merchant_acceptor_id")
                                    .merchantCategoryCode("merchant_category_code")
                                    .merchantCity("merchant_city")
                                    .merchantCountry("merchant_country")
                                    .merchantName("merchant_name")
                                    .merchantState("merchant_state")
                                    .networkIdentifiers(
                                        Transaction.Source.CardRefund.NetworkIdentifiers.builder()
                                            .acquirerBusinessId("acquirer_business_id")
                                            .acquirerReferenceNumber("acquirer_reference_number")
                                            .transactionId("transaction_id")
                                            .build()
                                    )
                                    .presentmentAmount(123L)
                                    .presentmentCurrency("presentment_currency")
                                    .purchaseDetails(
                                        Transaction.Source.CardRefund.PurchaseDetails.builder()
                                            .carRental(
                                                Transaction.Source.CardRefund.PurchaseDetails
                                                    .CarRental
                                                    .builder()
                                                    .carClassCode("car_class_code")
                                                    .checkoutDate(LocalDate.parse("2019-12-27"))
                                                    .dailyRentalRateAmount(123L)
                                                    .dailyRentalRateCurrency(
                                                        "daily_rental_rate_currency"
                                                    )
                                                    .daysRented(123L)
                                                    .extraCharges(
                                                        Transaction.Source.CardRefund
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .fuelChargesAmount(123L)
                                                    .fuelChargesCurrency("fuel_charges_currency")
                                                    .insuranceChargesAmount(123L)
                                                    .insuranceChargesCurrency(
                                                        "insurance_charges_currency"
                                                    )
                                                    .noShowIndicator(
                                                        Transaction.Source.CardRefund
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .oneWayDropOffChargesAmount(123L)
                                                    .oneWayDropOffChargesCurrency(
                                                        "one_way_drop_off_charges_currency"
                                                    )
                                                    .renterName("renter_name")
                                                    .weeklyRentalRateAmount(123L)
                                                    .weeklyRentalRateCurrency(
                                                        "weekly_rental_rate_currency"
                                                    )
                                                    .build()
                                            )
                                            .customerReferenceIdentifier(
                                                "customer_reference_identifier"
                                            )
                                            .localTaxAmount(123L)
                                            .localTaxCurrency("local_tax_currency")
                                            .lodging(
                                                Transaction.Source.CardRefund.PurchaseDetails
                                                    .Lodging
                                                    .builder()
                                                    .checkInDate(LocalDate.parse("2019-12-27"))
                                                    .dailyRoomRateAmount(123L)
                                                    .dailyRoomRateCurrency(
                                                        "daily_room_rate_currency"
                                                    )
                                                    .extraCharges(
                                                        Transaction.Source.CardRefund
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .folioCashAdvancesAmount(123L)
                                                    .folioCashAdvancesCurrency(
                                                        "folio_cash_advances_currency"
                                                    )
                                                    .foodBeverageChargesAmount(123L)
                                                    .foodBeverageChargesCurrency(
                                                        "food_beverage_charges_currency"
                                                    )
                                                    .noShowIndicator(
                                                        Transaction.Source.CardRefund
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .prepaidExpensesAmount(123L)
                                                    .prepaidExpensesCurrency(
                                                        "prepaid_expenses_currency"
                                                    )
                                                    .roomNights(123L)
                                                    .totalRoomTaxAmount(123L)
                                                    .totalRoomTaxCurrency("total_room_tax_currency")
                                                    .totalTaxAmount(123L)
                                                    .totalTaxCurrency("total_tax_currency")
                                                    .build()
                                            )
                                            .nationalTaxAmount(123L)
                                            .nationalTaxCurrency("national_tax_currency")
                                            .purchaseIdentifier("purchase_identifier")
                                            .purchaseIdentifierFormat(
                                                Transaction.Source.CardRefund.PurchaseDetails
                                                    .PurchaseIdentifierFormat
                                                    .FREE_TEXT
                                            )
                                            .travel(
                                                Transaction.Source.CardRefund.PurchaseDetails.Travel
                                                    .builder()
                                                    .ancillary(
                                                        Transaction.Source.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .builder()
                                                            .connectedTicketDocumentNumber(
                                                                "connected_ticket_document_number"
                                                            )
                                                            .creditReasonIndicator(
                                                                Transaction.Source.CardRefund
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .CreditReasonIndicator
                                                                    .NO_CREDIT
                                                            )
                                                            .passengerNameOrDescription(
                                                                "passenger_name_or_description"
                                                            )
                                                            .services(
                                                                listOf(
                                                                    Transaction.Source.CardRefund
                                                                        .PurchaseDetails
                                                                        .Travel
                                                                        .Ancillary
                                                                        .Service
                                                                        .builder()
                                                                        .category(
                                                                            Transaction.Source
                                                                                .CardRefund
                                                                                .PurchaseDetails
                                                                                .Travel
                                                                                .Ancillary
                                                                                .Service
                                                                                .Category
                                                                                .NONE
                                                                        )
                                                                        .subCategory("sub_category")
                                                                        .build()
                                                                )
                                                            )
                                                            .ticketDocumentNumber(
                                                                "ticket_document_number"
                                                            )
                                                            .build()
                                                    )
                                                    .computerizedReservationSystem(
                                                        "computerized_reservation_system"
                                                    )
                                                    .creditReasonIndicator(
                                                        Transaction.Source.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .departureDate(LocalDate.parse("2019-12-27"))
                                                    .originationCityAirportCode(
                                                        "origination_city_airport_code"
                                                    )
                                                    .passengerName("passenger_name")
                                                    .restrictedTicketIndicator(
                                                        Transaction.Source.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .RestrictedTicketIndicator
                                                            .NO_RESTRICTIONS
                                                    )
                                                    .ticketChangeIndicator(
                                                        Transaction.Source.CardRefund
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TicketChangeIndicator
                                                            .NONE
                                                    )
                                                    .ticketNumber("ticket_number")
                                                    .travelAgencyCode("travel_agency_code")
                                                    .travelAgencyName("travel_agency_name")
                                                    .tripLegs(
                                                        listOf(
                                                            Transaction.Source.CardRefund
                                                                .PurchaseDetails
                                                                .Travel
                                                                .TripLeg
                                                                .builder()
                                                                .carrierCode("carrier_code")
                                                                .destinationCityAirportCode(
                                                                    "destination_city_airport_code"
                                                                )
                                                                .fareBasisCode("fare_basis_code")
                                                                .flightNumber("flight_number")
                                                                .serviceClass("service_class")
                                                                .stopOverCode(
                                                                    Transaction.Source.CardRefund
                                                                        .PurchaseDetails
                                                                        .Travel
                                                                        .TripLeg
                                                                        .StopOverCode
                                                                        .NONE
                                                                )
                                                                .build()
                                                        )
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .transactionId("transaction_id")
                                    .type(Transaction.Source.CardRefund.Type.CARD_REFUND)
                                    .build()
                            )
                            .cardRevenuePayment(
                                Transaction.Source.CardRevenuePayment.builder()
                                    .amount(123L)
                                    .currency(Transaction.Source.CardRevenuePayment.Currency.CAD)
                                    .periodEnd(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .periodStart(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .transactedOnAccountId("transacted_on_account_id")
                                    .build()
                            )
                            .cardSettlement(
                                Transaction.Source.CardSettlement.builder()
                                    .id("id")
                                    .amount(123L)
                                    .cardAuthorization("card_authorization")
                                    .cardPaymentId("card_payment_id")
                                    .currency(Transaction.Source.CardSettlement.Currency.CAD)
                                    .merchantAcceptorId("merchant_acceptor_id")
                                    .merchantCategoryCode("merchant_category_code")
                                    .merchantCity("merchant_city")
                                    .merchantCountry("merchant_country")
                                    .merchantName("merchant_name")
                                    .merchantState("merchant_state")
                                    .networkIdentifiers(
                                        Transaction.Source.CardSettlement.NetworkIdentifiers
                                            .builder()
                                            .acquirerBusinessId("acquirer_business_id")
                                            .acquirerReferenceNumber("acquirer_reference_number")
                                            .transactionId("transaction_id")
                                            .build()
                                    )
                                    .pendingTransactionId("pending_transaction_id")
                                    .presentmentAmount(123L)
                                    .presentmentCurrency("presentment_currency")
                                    .purchaseDetails(
                                        Transaction.Source.CardSettlement.PurchaseDetails.builder()
                                            .carRental(
                                                Transaction.Source.CardSettlement.PurchaseDetails
                                                    .CarRental
                                                    .builder()
                                                    .carClassCode("car_class_code")
                                                    .checkoutDate(LocalDate.parse("2019-12-27"))
                                                    .dailyRentalRateAmount(123L)
                                                    .dailyRentalRateCurrency(
                                                        "daily_rental_rate_currency"
                                                    )
                                                    .daysRented(123L)
                                                    .extraCharges(
                                                        Transaction.Source.CardSettlement
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .fuelChargesAmount(123L)
                                                    .fuelChargesCurrency("fuel_charges_currency")
                                                    .insuranceChargesAmount(123L)
                                                    .insuranceChargesCurrency(
                                                        "insurance_charges_currency"
                                                    )
                                                    .noShowIndicator(
                                                        Transaction.Source.CardSettlement
                                                            .PurchaseDetails
                                                            .CarRental
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .oneWayDropOffChargesAmount(123L)
                                                    .oneWayDropOffChargesCurrency(
                                                        "one_way_drop_off_charges_currency"
                                                    )
                                                    .renterName("renter_name")
                                                    .weeklyRentalRateAmount(123L)
                                                    .weeklyRentalRateCurrency(
                                                        "weekly_rental_rate_currency"
                                                    )
                                                    .build()
                                            )
                                            .customerReferenceIdentifier(
                                                "customer_reference_identifier"
                                            )
                                            .localTaxAmount(123L)
                                            .localTaxCurrency("local_tax_currency")
                                            .lodging(
                                                Transaction.Source.CardSettlement.PurchaseDetails
                                                    .Lodging
                                                    .builder()
                                                    .checkInDate(LocalDate.parse("2019-12-27"))
                                                    .dailyRoomRateAmount(123L)
                                                    .dailyRoomRateCurrency(
                                                        "daily_room_rate_currency"
                                                    )
                                                    .extraCharges(
                                                        Transaction.Source.CardSettlement
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .ExtraCharges
                                                            .NO_EXTRA_CHARGE
                                                    )
                                                    .folioCashAdvancesAmount(123L)
                                                    .folioCashAdvancesCurrency(
                                                        "folio_cash_advances_currency"
                                                    )
                                                    .foodBeverageChargesAmount(123L)
                                                    .foodBeverageChargesCurrency(
                                                        "food_beverage_charges_currency"
                                                    )
                                                    .noShowIndicator(
                                                        Transaction.Source.CardSettlement
                                                            .PurchaseDetails
                                                            .Lodging
                                                            .NoShowIndicator
                                                            .NOT_APPLICABLE
                                                    )
                                                    .prepaidExpensesAmount(123L)
                                                    .prepaidExpensesCurrency(
                                                        "prepaid_expenses_currency"
                                                    )
                                                    .roomNights(123L)
                                                    .totalRoomTaxAmount(123L)
                                                    .totalRoomTaxCurrency("total_room_tax_currency")
                                                    .totalTaxAmount(123L)
                                                    .totalTaxCurrency("total_tax_currency")
                                                    .build()
                                            )
                                            .nationalTaxAmount(123L)
                                            .nationalTaxCurrency("national_tax_currency")
                                            .purchaseIdentifier("purchase_identifier")
                                            .purchaseIdentifierFormat(
                                                Transaction.Source.CardSettlement.PurchaseDetails
                                                    .PurchaseIdentifierFormat
                                                    .FREE_TEXT
                                            )
                                            .travel(
                                                Transaction.Source.CardSettlement.PurchaseDetails
                                                    .Travel
                                                    .builder()
                                                    .ancillary(
                                                        Transaction.Source.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .Ancillary
                                                            .builder()
                                                            .connectedTicketDocumentNumber(
                                                                "connected_ticket_document_number"
                                                            )
                                                            .creditReasonIndicator(
                                                                Transaction.Source.CardSettlement
                                                                    .PurchaseDetails
                                                                    .Travel
                                                                    .Ancillary
                                                                    .CreditReasonIndicator
                                                                    .NO_CREDIT
                                                            )
                                                            .passengerNameOrDescription(
                                                                "passenger_name_or_description"
                                                            )
                                                            .services(
                                                                listOf(
                                                                    Transaction.Source
                                                                        .CardSettlement
                                                                        .PurchaseDetails
                                                                        .Travel
                                                                        .Ancillary
                                                                        .Service
                                                                        .builder()
                                                                        .category(
                                                                            Transaction.Source
                                                                                .CardSettlement
                                                                                .PurchaseDetails
                                                                                .Travel
                                                                                .Ancillary
                                                                                .Service
                                                                                .Category
                                                                                .NONE
                                                                        )
                                                                        .subCategory("sub_category")
                                                                        .build()
                                                                )
                                                            )
                                                            .ticketDocumentNumber(
                                                                "ticket_document_number"
                                                            )
                                                            .build()
                                                    )
                                                    .computerizedReservationSystem(
                                                        "computerized_reservation_system"
                                                    )
                                                    .creditReasonIndicator(
                                                        Transaction.Source.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .CreditReasonIndicator
                                                            .NO_CREDIT
                                                    )
                                                    .departureDate(LocalDate.parse("2019-12-27"))
                                                    .originationCityAirportCode(
                                                        "origination_city_airport_code"
                                                    )
                                                    .passengerName("passenger_name")
                                                    .restrictedTicketIndicator(
                                                        Transaction.Source.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .RestrictedTicketIndicator
                                                            .NO_RESTRICTIONS
                                                    )
                                                    .ticketChangeIndicator(
                                                        Transaction.Source.CardSettlement
                                                            .PurchaseDetails
                                                            .Travel
                                                            .TicketChangeIndicator
                                                            .NONE
                                                    )
                                                    .ticketNumber("ticket_number")
                                                    .travelAgencyCode("travel_agency_code")
                                                    .travelAgencyName("travel_agency_name")
                                                    .tripLegs(
                                                        listOf(
                                                            Transaction.Source.CardSettlement
                                                                .PurchaseDetails
                                                                .Travel
                                                                .TripLeg
                                                                .builder()
                                                                .carrierCode("carrier_code")
                                                                .destinationCityAirportCode(
                                                                    "destination_city_airport_code"
                                                                )
                                                                .fareBasisCode("fare_basis_code")
                                                                .flightNumber("flight_number")
                                                                .serviceClass("service_class")
                                                                .stopOverCode(
                                                                    Transaction.Source
                                                                        .CardSettlement
                                                                        .PurchaseDetails
                                                                        .Travel
                                                                        .TripLeg
                                                                        .StopOverCode
                                                                        .NONE
                                                                )
                                                                .build()
                                                        )
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .transactionId("transaction_id")
                                    .type(Transaction.Source.CardSettlement.Type.CARD_SETTLEMENT)
                                    .build()
                            )
                            .cashbackPayment(
                                Transaction.Source.CashbackPayment.builder()
                                    .accruedOnCardId("accrued_on_card_id")
                                    .amount(123L)
                                    .currency(Transaction.Source.CashbackPayment.Currency.CAD)
                                    .periodEnd(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .periodStart(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .category(Transaction.Source.Category.ACCOUNT_TRANSFER_INTENTION)
                            .checkDepositAcceptance(
                                Transaction.Source.CheckDepositAcceptance.builder()
                                    .accountNumber("account_number")
                                    .amount(123L)
                                    .auxiliaryOnUs("auxiliary_on_us")
                                    .checkDepositId("check_deposit_id")
                                    .currency(
                                        Transaction.Source.CheckDepositAcceptance.Currency.CAD
                                    )
                                    .routingNumber("routing_number")
                                    .serialNumber("serial_number")
                                    .build()
                            )
                            .checkDepositReturn(
                                Transaction.Source.CheckDepositReturn.builder()
                                    .amount(123L)
                                    .checkDepositId("check_deposit_id")
                                    .currency(Transaction.Source.CheckDepositReturn.Currency.CAD)
                                    .returnReason(
                                        Transaction.Source.CheckDepositReturn.ReturnReason
                                            .ACH_CONVERSION_NOT_SUPPORTED
                                    )
                                    .returnedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .transactionId("transaction_id")
                                    .build()
                            )
                            .checkTransferDeposit(
                                Transaction.Source.CheckTransferDeposit.builder()
                                    .backImageFileId("back_image_file_id")
                                    .bankOfFirstDepositRoutingNumber(
                                        "bank_of_first_deposit_routing_number"
                                    )
                                    .depositedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .frontImageFileId("front_image_file_id")
                                    .inboundCheckDepositId("inbound_check_deposit_id")
                                    .transactionId("transaction_id")
                                    .transferId("transfer_id")
                                    .type(
                                        Transaction.Source.CheckTransferDeposit.Type
                                            .CHECK_TRANSFER_DEPOSIT
                                    )
                                    .build()
                            )
                            .checkTransferStopPaymentRequest(
                                Transaction.Source.CheckTransferStopPaymentRequest.builder()
                                    .reason(
                                        Transaction.Source.CheckTransferStopPaymentRequest.Reason
                                            .MAIL_DELIVERY_FAILED
                                    )
                                    .requestedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .transferId("transfer_id")
                                    .type(
                                        Transaction.Source.CheckTransferStopPaymentRequest.Type
                                            .CHECK_TRANSFER_STOP_PAYMENT_REQUEST
                                    )
                                    .build()
                            )
                            .feePayment(
                                Transaction.Source.FeePayment.builder()
                                    .amount(123L)
                                    .currency(Transaction.Source.FeePayment.Currency.CAD)
                                    .feePeriodStart(LocalDate.parse("2019-12-27"))
                                    .build()
                            )
                            .inboundAchTransfer(
                                Transaction.Source.InboundAchTransfer.builder()
                                    .addenda(
                                        Transaction.Source.InboundAchTransfer.Addenda.builder()
                                            .category(
                                                Transaction.Source.InboundAchTransfer.Addenda
                                                    .Category
                                                    .FREEFORM
                                            )
                                            .freeform(
                                                Transaction.Source.InboundAchTransfer.Addenda
                                                    .Freeform
                                                    .builder()
                                                    .entries(
                                                        listOf(
                                                            Transaction.Source.InboundAchTransfer
                                                                .Addenda
                                                                .Freeform
                                                                .Entry
                                                                .builder()
                                                                .paymentRelatedInformation(
                                                                    "payment_related_information"
                                                                )
                                                                .build()
                                                        )
                                                    )
                                                    .build()
                                            )
                                            .build()
                                    )
                                    .amount(123L)
                                    .originatorCompanyDescriptiveDate(
                                        "originator_company_descriptive_date"
                                    )
                                    .originatorCompanyDiscretionaryData(
                                        "originator_company_discretionary_data"
                                    )
                                    .originatorCompanyEntryDescription(
                                        "originator_company_entry_description"
                                    )
                                    .originatorCompanyId("originator_company_id")
                                    .originatorCompanyName("originator_company_name")
                                    .receiverIdNumber("receiver_id_number")
                                    .receiverName("receiver_name")
                                    .traceNumber("trace_number")
                                    .transferId("transfer_id")
                                    .build()
                            )
                            .inboundInternationalAchTransfer(
                                Transaction.Source.InboundInternationalAchTransfer.builder()
                                    .amount(123L)
                                    .destinationCountryCode("destination_country_code")
                                    .destinationCurrencyCode("destination_currency_code")
                                    .foreignExchangeIndicator(
                                        Transaction.Source.InboundInternationalAchTransfer
                                            .ForeignExchangeIndicator
                                            .FIXED_TO_VARIABLE
                                    )
                                    .foreignExchangeReference("foreign_exchange_reference")
                                    .foreignExchangeReferenceIndicator(
                                        Transaction.Source.InboundInternationalAchTransfer
                                            .ForeignExchangeReferenceIndicator
                                            .FOREIGN_EXCHANGE_RATE
                                    )
                                    .foreignPaymentAmount(123L)
                                    .foreignTraceNumber("foreign_trace_number")
                                    .internationalTransactionTypeCode(
                                        Transaction.Source.InboundInternationalAchTransfer
                                            .InternationalTransactionTypeCode
                                            .ANNUITY
                                    )
                                    .originatingCurrencyCode("originating_currency_code")
                                    .originatingDepositoryFinancialInstitutionBranchCountry(
                                        "originating_depository_financial_institution_branch_country"
                                    )
                                    .originatingDepositoryFinancialInstitutionId(
                                        "originating_depository_financial_institution_id"
                                    )
                                    .originatingDepositoryFinancialInstitutionIdQualifier(
                                        Transaction.Source.InboundInternationalAchTransfer
                                            .OriginatingDepositoryFinancialInstitutionIdQualifier
                                            .NATIONAL_CLEARING_SYSTEM_NUMBER
                                    )
                                    .originatingDepositoryFinancialInstitutionName(
                                        "originating_depository_financial_institution_name"
                                    )
                                    .originatorCity("originator_city")
                                    .originatorCompanyEntryDescription(
                                        "originator_company_entry_description"
                                    )
                                    .originatorCountry("originator_country")
                                    .originatorIdentification("originator_identification")
                                    .originatorName("originator_name")
                                    .originatorPostalCode("originator_postal_code")
                                    .originatorStateOrProvince("originator_state_or_province")
                                    .originatorStreetAddress("originator_street_address")
                                    .paymentRelatedInformation("payment_related_information")
                                    .paymentRelatedInformation2("payment_related_information2")
                                    .receiverCity("receiver_city")
                                    .receiverCountry("receiver_country")
                                    .receiverIdentificationNumber("receiver_identification_number")
                                    .receiverPostalCode("receiver_postal_code")
                                    .receiverStateOrProvince("receiver_state_or_province")
                                    .receiverStreetAddress("receiver_street_address")
                                    .receivingCompanyOrIndividualName(
                                        "receiving_company_or_individual_name"
                                    )
                                    .receivingDepositoryFinancialInstitutionCountry(
                                        "receiving_depository_financial_institution_country"
                                    )
                                    .receivingDepositoryFinancialInstitutionId(
                                        "receiving_depository_financial_institution_id"
                                    )
                                    .receivingDepositoryFinancialInstitutionIdQualifier(
                                        Transaction.Source.InboundInternationalAchTransfer
                                            .ReceivingDepositoryFinancialInstitutionIdQualifier
                                            .NATIONAL_CLEARING_SYSTEM_NUMBER
                                    )
                                    .receivingDepositoryFinancialInstitutionName(
                                        "receiving_depository_financial_institution_name"
                                    )
                                    .traceNumber("trace_number")
                                    .type(
                                        Transaction.Source.InboundInternationalAchTransfer.Type
                                            .INBOUND_INTERNATIONAL_ACH_TRANSFER
                                    )
                                    .build()
                            )
                            .inboundRealTimePaymentsTransferConfirmation(
                                Transaction.Source.InboundRealTimePaymentsTransferConfirmation
                                    .builder()
                                    .amount(123L)
                                    .creditorName("creditor_name")
                                    .currency(
                                        Transaction.Source
                                            .InboundRealTimePaymentsTransferConfirmation
                                            .Currency
                                            .CAD
                                    )
                                    .debtorAccountNumber("debtor_account_number")
                                    .debtorName("debtor_name")
                                    .debtorRoutingNumber("debtor_routing_number")
                                    .remittanceInformation("remittance_information")
                                    .transactionIdentification("transaction_identification")
                                    .build()
                            )
                            .inboundWireDrawdownPayment(
                                Transaction.Source.InboundWireDrawdownPayment.builder()
                                    .amount(123L)
                                    .beneficiaryAddressLine1("beneficiary_address_line1")
                                    .beneficiaryAddressLine2("beneficiary_address_line2")
                                    .beneficiaryAddressLine3("beneficiary_address_line3")
                                    .beneficiaryName("beneficiary_name")
                                    .beneficiaryReference("beneficiary_reference")
                                    .description("description")
                                    .inputMessageAccountabilityData(
                                        "input_message_accountability_data"
                                    )
                                    .originatorAddressLine1("originator_address_line1")
                                    .originatorAddressLine2("originator_address_line2")
                                    .originatorAddressLine3("originator_address_line3")
                                    .originatorName("originator_name")
                                    .originatorRoutingNumber("originator_routing_number")
                                    .originatorToBeneficiaryInformation(
                                        "originator_to_beneficiary_information"
                                    )
                                    .originatorToBeneficiaryInformationLine1(
                                        "originator_to_beneficiary_information_line1"
                                    )
                                    .originatorToBeneficiaryInformationLine2(
                                        "originator_to_beneficiary_information_line2"
                                    )
                                    .originatorToBeneficiaryInformationLine3(
                                        "originator_to_beneficiary_information_line3"
                                    )
                                    .originatorToBeneficiaryInformationLine4(
                                        "originator_to_beneficiary_information_line4"
                                    )
                                    .build()
                            )
                            .inboundWireReversal(
                                Transaction.Source.InboundWireReversal.builder()
                                    .amount(123L)
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .description("description")
                                    .financialInstitutionToFinancialInstitutionInformation(
                                        "financial_institution_to_financial_institution_information"
                                    )
                                    .inputCycleDate(LocalDate.parse("2019-12-27"))
                                    .inputMessageAccountabilityData(
                                        "input_message_accountability_data"
                                    )
                                    .inputSequenceNumber("input_sequence_number")
                                    .inputSource("input_source")
                                    .originatorRoutingNumber("originator_routing_number")
                                    .previousMessageInputCycleDate(LocalDate.parse("2019-12-27"))
                                    .previousMessageInputMessageAccountabilityData(
                                        "previous_message_input_message_accountability_data"
                                    )
                                    .previousMessageInputSequenceNumber(
                                        "previous_message_input_sequence_number"
                                    )
                                    .previousMessageInputSource("previous_message_input_source")
                                    .receiverFinancialInstitutionInformation(
                                        "receiver_financial_institution_information"
                                    )
                                    .transactionId("transaction_id")
                                    .wireTransferId("wire_transfer_id")
                                    .build()
                            )
                            .inboundWireTransfer(
                                Transaction.Source.InboundWireTransfer.builder()
                                    .amount(123L)
                                    .beneficiaryAddressLine1("beneficiary_address_line1")
                                    .beneficiaryAddressLine2("beneficiary_address_line2")
                                    .beneficiaryAddressLine3("beneficiary_address_line3")
                                    .beneficiaryName("beneficiary_name")
                                    .beneficiaryReference("beneficiary_reference")
                                    .description("description")
                                    .inputMessageAccountabilityData(
                                        "input_message_accountability_data"
                                    )
                                    .originatorAddressLine1("originator_address_line1")
                                    .originatorAddressLine2("originator_address_line2")
                                    .originatorAddressLine3("originator_address_line3")
                                    .originatorName("originator_name")
                                    .originatorRoutingNumber("originator_routing_number")
                                    .originatorToBeneficiaryInformation(
                                        "originator_to_beneficiary_information"
                                    )
                                    .originatorToBeneficiaryInformationLine1(
                                        "originator_to_beneficiary_information_line1"
                                    )
                                    .originatorToBeneficiaryInformationLine2(
                                        "originator_to_beneficiary_information_line2"
                                    )
                                    .originatorToBeneficiaryInformationLine3(
                                        "originator_to_beneficiary_information_line3"
                                    )
                                    .originatorToBeneficiaryInformationLine4(
                                        "originator_to_beneficiary_information_line4"
                                    )
                                    .transferId("transfer_id")
                                    .build()
                            )
                            .interestPayment(
                                Transaction.Source.InterestPayment.builder()
                                    .accruedOnAccountId("accrued_on_account_id")
                                    .amount(123L)
                                    .currency(Transaction.Source.InterestPayment.Currency.CAD)
                                    .periodEnd(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .periodStart(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .build()
                            )
                            .internalSource(
                                Transaction.Source.InternalSource.builder()
                                    .amount(123L)
                                    .currency(Transaction.Source.InternalSource.Currency.CAD)
                                    .reason(
                                        Transaction.Source.InternalSource.Reason.ACCOUNT_CLOSURE
                                    )
                                    .build()
                            )
                            .realTimePaymentsTransferAcknowledgement(
                                Transaction.Source.RealTimePaymentsTransferAcknowledgement.builder()
                                    .amount(123L)
                                    .destinationAccountNumber("destination_account_number")
                                    .destinationRoutingNumber("destination_routing_number")
                                    .remittanceInformation("remittance_information")
                                    .transferId("transfer_id")
                                    .build()
                            )
                            .sampleFunds(
                                Transaction.Source.SampleFunds.builder()
                                    .originator("originator")
                                    .build()
                            )
                            .wireTransferIntention(
                                Transaction.Source.WireTransferIntention.builder()
                                    .accountNumber("account_number")
                                    .amount(123L)
                                    .messageToRecipient("message_to_recipient")
                                    .routingNumber("routing_number")
                                    .transferId("transfer_id")
                                    .build()
                            )
                            .wireTransferRejection(
                                Transaction.Source.WireTransferRejection.builder()
                                    .transferId("transfer_id")
                                    .build()
                            )
                            .build()
                    )
                    .type(Transaction.Type.TRANSACTION)
                    .build()
            )
        assertThat(simulationInboundRealTimePaymentsTransferCreateResponse.type())
            .isEqualTo(
                SimulationInboundRealTimePaymentsTransferCreateResponse.Type
                    .INBOUND_REAL_TIME_PAYMENTS_TRANSFER_SIMULATION_RESULT
            )
    }
}
